{
  "magicNumber": 1635018093,
  "metadata": {
    "v14": {
      "lookup": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "fp_account",
                "AccountId20"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 20]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 1,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 2,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "primitive": "U8"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": [

                      ]
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": [

                      ]
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": [

                      ]
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 4,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "primitive": "U32"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "flags",
                      "type": 7,
                      "typeName": "ExtraFlags",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 6,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "primitive": "U128"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ExtraFlags"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "u128",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 8,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 9,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "operational",
                      "type": 9,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mandatory",
                      "type": 9,
                      "typeName": "T",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 10,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "proof_size",
                      "type": 10,
                      "typeName": "u64",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 10,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "compact": {
                  "type": 11
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 11,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "primitive": "U64"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 12,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "[u8; 32]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 13,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 14,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 15,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 16,
                      "typeName": "Vec<DigestItem>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 16,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 17
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 17,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ConsensusEngineId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ConsensusEngineId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ConsensusEngineId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 18,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 19,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 20
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 21
                },
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 182,
                      "typeName": "Phase",
                      "docs": [

                      ]
                    },
                    {
                      "name": "event",
                      "type": 21,
                      "typeName": "E",
                      "docs": [

                      ]
                    },
                    {
                      "name": "topics",
                      "type": 157,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "darwinia_runtime",
                "RuntimeEvent"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 22,
                          "typeName": "frame_system::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "name": null,
                          "type": 31,
                          "typeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 33,
                          "typeName": "pallet_balances::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "name": null,
                          "type": 35,
                          "typeName": "pallet_transaction_payment::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 36,
                          "typeName": "pallet_assets::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 38,
                          "typeName": "pallet_vesting::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": null,
                          "type": 39,
                          "typeName": "darwinia_deposit::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountMigration",
                      "fields": [
                        {
                          "name": null,
                          "type": 41,
                          "typeName": "darwinia_account_migration::Event",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DarwiniaStaking",
                      "fields": [
                        {
                          "name": null,
                          "type": 48,
                          "typeName": "darwinia_staking::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 51,
                          "typeName": "pallet_session::Event",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EcdsaAuthority",
                      "fields": [
                        {
                          "name": null,
                          "type": 52,
                          "typeName": "darwinia_ecdsa_authority::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Democracy",
                      "fields": [
                        {
                          "name": null,
                          "type": 60,
                          "typeName": "pallet_democracy::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "name": null,
                          "type": 65,
                          "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "name": null,
                          "type": 68,
                          "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PhragmenElection",
                      "fields": [
                        {
                          "name": null,
                          "type": 69,
                          "typeName": "pallet_elections_phragmen::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TechnicalMembership",
                      "fields": [
                        {
                          "name": null,
                          "type": 72,
                          "typeName": "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "name": null,
                          "type": 73,
                          "typeName": "pallet_treasury::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 74,
                          "typeName": "pallet_utility::Event",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "name": null,
                          "type": 75,
                          "typeName": "pallet_identity::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "pallet_scheduler::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 78,
                          "typeName": "pallet_preimage::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 79,
                          "typeName": "pallet_proxy::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 81,
                          "typeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 84,
                          "typeName": "pallet_xcm::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 138,
                          "typeName": "cumulus_pallet_xcm::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 139,
                          "typeName": "cumulus_pallet_dmp_queue::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetManager",
                      "fields": [
                        {
                          "name": null,
                          "type": 140,
                          "typeName": "pallet_asset_manager::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 45,
                      "docs": [

                      ]
                    },
                    {
                      "name": "XTokens",
                      "fields": [
                        {
                          "name": null,
                          "type": 143,
                          "typeName": "orml_xtokens::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 46,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetLimit",
                      "fields": [
                        {
                          "name": null,
                          "type": 144,
                          "typeName": "darwinia_asset_limit::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 47,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "name": null,
                          "type": 145,
                          "typeName": "pallet_ethereum::Event",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EVM",
                      "fields": [
                        {
                          "name": null,
                          "type": 155,
                          "typeName": "pallet_evm::Event<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 37,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgeKusamaParachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 158,
                          "typeName": "pallet_bridge_parachains::Event<Runtime, pallet_bridge_parachains::\nInstance1>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 40,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgeCrabMessages",
                      "fields": [
                        {
                          "name": null,
                          "type": 160,
                          "typeName": "pallet_bridge_messages::Event<Runtime, pallet_bridge_messages::Instance1\n>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 41,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgeCrabDispatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 171,
                          "typeName": "pallet_bridge_dispatch::Event<Runtime, pallet_bridge_dispatch::Instance1\n>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 42,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CrabFeeMarket",
                      "fields": [
                        {
                          "name": null,
                          "type": 176,
                          "typeName": "pallet_fee_market::Event<Runtime, pallet_fee_market::Instance1>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 43,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 23,
                          "typeName": "DispatchInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 26,
                          "typeName": "DispatchError",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dispatch_info",
                          "type": 23,
                          "typeName": "DispatchInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchInfo"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "class",
                      "type": 24,
                      "typeName": "DispatchClass",
                      "docs": [

                      ]
                    },
                    {
                      "name": "pays_fee",
                      "type": 25,
                      "typeName": "Pays",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Operational",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mandatory",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "No",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CannotLookup",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "name": null,
                          "type": 27,
                          "typeName": "ModuleError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ConsumerRemaining",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoProviders",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooManyConsumers",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "name": null,
                          "type": 28,
                          "typeName": "TokenError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "name": null,
                          "type": 29,
                          "typeName": "ArithmeticError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "name": null,
                          "type": 30,
                          "typeName": "TransactionalError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Exhausted",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Corruption",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unavailable",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RootNotAllowed",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "error",
                      "type": 18,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OnlyProvider",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BelowMinimum",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CannotCreate",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnknownAsset",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unsupported",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CannotCreateHold",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotExpendable",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Blocked",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Overflow",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DivisionByZero",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoLayer",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ValidationFunctionStored",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The validation function has been scheduled to apply."
                      ]
                    },
                    {
                      "name": "ValidationFunctionApplied",
                      "fields": [
                        {
                          "name": "relay_chain_block_num",
                          "type": 4,
                          "typeName": "RelayChainBlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The validation function was applied as of the contained relay chain block number."
                      ]
                    },
                    {
                      "name": "ValidationFunctionDiscarded",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The relay-chain aborted the upgrade process."
                      ]
                    },
                    {
                      "name": "UpgradeAuthorized",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An upgrade has been authorized."
                      ]
                    },
                    {
                      "name": "DownwardMessagesReceived",
                      "fields": [
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some downward messages have been received and will be processed."
                      ]
                    },
                    {
                      "name": "DownwardMessagesProcessed",
                      "fields": [
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dmq_head",
                          "type": 12,
                          "typeName": "relay_chain::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Downward messages were processed using the given weight."
                      ]
                    },
                    {
                      "name": "UpwardMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 32,
                          "typeName": "Option<XcmHash>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An upward message was sent to the relay chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 32,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "destination_status",
                          "type": 34,
                          "typeName": "Status",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Some amount was minted into an account."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some amount was burned from an account."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some amount was suspended from an account (it can be restored later)."
                      ]
                    },
                    {
                      "name": "Restored",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some amount was restored into an account."
                      ]
                    },
                    {
                      "name": "Upgraded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "An account was upgraded."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Total issuance was increased by `amount`, creating a credit to be balanced."
                      ]
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Total issuance was decreased by `amount`, creating a debt to be balanced."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Some balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Some balance was unlocked."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some balance was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Some balance was thawed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 35,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Some asset class was created."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some assets were issued."
                      ]
                    },
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some assets were transferred."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Some assets were destroyed."
                      ]
                    },
                    {
                      "name": "TeamChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "admin",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "freezer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The management team changed."
                      ]
                    },
                    {
                      "name": "OwnerChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The owner changed."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some account `who` was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some account `who` was thawed."
                      ]
                    },
                    {
                      "name": "AssetFrozen",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some asset `asset_id` was frozen."
                      ]
                    },
                    {
                      "name": "AssetThawed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some asset `asset_id` was thawed."
                      ]
                    },
                    {
                      "name": "AccountsDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "accounts_destroyed",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "accounts_remaining",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Accounts were destroyed for given asset."
                      ]
                    },
                    {
                      "name": "ApprovalsDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "approvals_destroyed",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "approvals_remaining",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Approvals were destroyed for given asset."
                      ]
                    },
                    {
                      "name": "DestructionStarted",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An asset class is in the process of being destroyed."
                      ]
                    },
                    {
                      "name": "Destroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "An asset class was destroyed."
                      ]
                    },
                    {
                      "name": "ForceCreated",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Some asset class was force-created."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "symbol",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_frozen",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "New metadata has been set for an asset."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Metadata has been cleared for an asset."
                      ]
                    },
                    {
                      "name": "ApprovedTransfer",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "(Additional) funds have been approved for transfer to a destination account."
                      ]
                    },
                    {
                      "name": "ApprovalCancelled",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "An approval for account `delegate` was cancelled by `owner`."
                      ]
                    },
                    {
                      "name": "TransferredApproved",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "destination",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "An `amount` was transferred in its entirety from `owner` to `destination` by",
                        "the approved `delegate`."
                      ]
                    },
                    {
                      "name": "AssetStatusChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "An asset has had its attributes changed by the `Force` origin."
                      ]
                    },
                    {
                      "name": "AssetMinBalanceChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "The min_balance of an asset has been updated by the asset owner."
                      ]
                    },
                    {
                      "name": "Touched",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "depositor",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some account `who` was created with a deposit from `depositor`."
                      ]
                    },
                    {
                      "name": "Blocked",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "Some account `who` was blocked."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 37,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "primitive": "Bool"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingUpdated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "unvested",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The amount vested has been updated. This could indicate a change in funds available.",
                        "The balance given is the amount which is left unvested (and thus locked)."
                      ]
                    },
                    {
                      "name": "VestingCompleted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An \\[account\\] has become fully vested."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 39,
            "type": {
              "path": [
                "darwinia_deposit",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DepositCreated",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit_id",
                          "type": 40,
                          "typeName": "DepositId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "start_time",
                          "type": 6,
                          "typeName": "Moment",
                          "docs": [

                          ]
                        },
                        {
                          "name": "expired_time",
                          "type": 6,
                          "typeName": "Moment",
                          "docs": [

                          ]
                        },
                        {
                          "name": "kton_reward",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new deposit has been created."
                      ]
                    },
                    {
                      "name": "DepositClaimed",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit_id",
                          "type": 40,
                          "typeName": "DepositId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An expired deposit has been claimed."
                      ]
                    },
                    {
                      "name": "DepositClaimedWithPenalty",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit_id",
                          "type": 40,
                          "typeName": "DepositId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "kton_penalty",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An unexpired deposit has been claimed by paying the KTON penalty."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 40,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "primitive": "U16"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "darwinia_account_migration",
                "pallet",
                "Event"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Migrated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 42,
                          "typeName": "AccountId32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "AccountId20",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account has been migrated."
                      ]
                    },
                    {
                      "name": "NewMultisigParamsNoted",
                      "fields": [
                        {
                          "name": "from",
                          "type": 42,
                          "typeName": "AccountId32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 43,
                          "typeName": "MultisigParams",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A new multisig account params was noted/recorded on-chain."
                      ]
                    },
                    {
                      "name": "MultisigMigrated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 42,
                          "typeName": "AccountId32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "detail",
                          "type": 45,
                          "typeName": "MultisigMigrationDetail",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A multisig account has been migrated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 42,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "[u8; 32]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 43,
            "type": {
              "path": [
                "darwinia_account_migration",
                "MultisigParams"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "address",
                      "type": 0,
                      "typeName": "AccountId20",
                      "docs": [

                      ]
                    },
                    {
                      "name": "members",
                      "type": 44,
                      "typeName": "Vec<AccountId20>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "threshold",
                      "type": 40,
                      "typeName": "u16",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 44,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 0
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 45,
            "type": {
              "path": [
                "darwinia_account_migration",
                "MultisigMigrationDetail"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "to",
                      "type": 0,
                      "typeName": "AccountId20",
                      "docs": [

                      ]
                    },
                    {
                      "name": "members",
                      "type": 46,
                      "typeName": "Vec<(AccountId32, bool)>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "threshold",
                      "type": 40,
                      "typeName": "u16",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 46,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 47
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 47,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  42,
                  37
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 48,
            "type": {
              "path": [
                "darwinia_staking",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Staked",
                      "fields": [
                        {
                          "name": "staker",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ring_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "kton_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposits",
                          "type": 49,
                          "typeName": "Vec<DepositId<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account has staked."
                      ]
                    },
                    {
                      "name": "Unstaked",
                      "fields": [
                        {
                          "name": "staker",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ring_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "kton_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposits",
                          "type": 49,
                          "typeName": "Vec<DepositId<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account has unstaked."
                      ]
                    },
                    {
                      "name": "CommissionUpdated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "commission",
                          "type": 50,
                          "typeName": "Perbill",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Payout",
                      "fields": [
                        {
                          "name": "staker",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A payout has been made for the staker."
                      ]
                    },
                    {
                      "name": "Unpaid",
                      "fields": [
                        {
                          "name": "staker",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Unable to pay the staker's reward."
                      ]
                    },
                    {
                      "name": "Elected",
                      "fields": [
                        {
                          "name": "collators",
                          "type": 44,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A new collator set has been elected."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 49,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 40
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perbill"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 51,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 52,
            "type": {
              "path": [
                "darwinia_ecdsa_authority",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CollectingAuthoritiesChangeSignatures",
                      "fields": [
                        {
                          "name": "message",
                          "type": 12,
                          "typeName": "Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Authorities changed. Collecting authorities change signatures."
                      ]
                    },
                    {
                      "name": "CollectedEnoughAuthoritiesChangeSignatures",
                      "fields": [
                        {
                          "name": "operation",
                          "type": 53,
                          "typeName": "Operation<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "threshold",
                          "type": 54,
                          "typeName": "Option<u32>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 12,
                          "typeName": "Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "signatures",
                          "type": 55,
                          "typeName": "Vec<(T::AccountId, Signature)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Collected enough authorities change signatures."
                      ]
                    },
                    {
                      "name": "CollectingNewMessageRootSignatures",
                      "fields": [
                        {
                          "name": "message",
                          "type": 12,
                          "typeName": "Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "New message root found. Collecting new message root signatures."
                      ]
                    },
                    {
                      "name": "CollectedEnoughNewMessageRootSignatures",
                      "fields": [
                        {
                          "name": "commitment",
                          "type": 59,
                          "typeName": "Commitment<BlockNumberFor<T>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 12,
                          "typeName": "Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "signatures",
                          "type": 55,
                          "typeName": "Vec<(T::AccountId, Signature)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Collected enough new message root signatures."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "darwinia_ecdsa_authority",
                "primitives",
                "Operation"
              ],
              "params": [
                {
                  "name": "A",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AddMember",
                      "fields": [
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "A",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RemoveMember",
                      "fields": [
                        {
                          "name": "pre",
                          "type": 0,
                          "typeName": "A",
                          "docs": [

                          ]
                        },
                        {
                          "name": "old",
                          "type": 0,
                          "typeName": "A",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SwapMembers",
                      "fields": [
                        {
                          "name": "pre",
                          "type": 0,
                          "typeName": "A",
                          "docs": [

                          ]
                        },
                        {
                          "name": "old",
                          "type": 0,
                          "typeName": "A",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "A",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 55,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 56
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 56,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  0,
                  57
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 57,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 58,
                      "typeName": "[u8; 65]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 58,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "darwinia_ecdsa_authority",
                "primitives",
                "Commitment"
              ],
              "params": [
                {
                  "name": "Bn",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_number",
                      "type": 4,
                      "typeName": "Bn",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message_root",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 60,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion has been proposed by a public account."
                      ]
                    },
                    {
                      "name": "Tabled",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A public proposal has been tabled for referendum vote."
                      ]
                    },
                    {
                      "name": "ExternalTabled",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "An external proposal has been tabled."
                      ]
                    },
                    {
                      "name": "Started",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "threshold",
                          "type": 61,
                          "typeName": "VoteThreshold",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A referendum has begun."
                      ]
                    },
                    {
                      "name": "Passed",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proposal has been approved by referendum."
                      ]
                    },
                    {
                      "name": "NotPassed",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A proposal has been rejected by referendum."
                      ]
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A referendum has been cancelled."
                      ]
                    },
                    {
                      "name": "Delegated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An account has delegated their vote to another account."
                      ]
                    },
                    {
                      "name": "Undelegated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "An account has cancelled a previous delegation operation."
                      ]
                    },
                    {
                      "name": "Vetoed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "until",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "An external proposal has been vetoed."
                      ]
                    },
                    {
                      "name": "Blacklisted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A proposal_hash has been blacklisted permanently."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "voter",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "vote",
                          "type": 62,
                          "typeName": "AccountVote<BalanceOf<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "An account has voted in a referendum"
                      ]
                    },
                    {
                      "name": "Seconded",
                      "fields": [
                        {
                          "name": "seconder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "prop_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An account has secconded a proposal"
                      ]
                    },
                    {
                      "name": "ProposalCanceled",
                      "fields": [
                        {
                          "name": "prop_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A proposal got canceled."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 64,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "PreimageHash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Metadata for a proposal or a referendum has been set."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 64,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "PreimageHash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Metadata for a proposal or a referendum has been cleared."
                      ]
                    },
                    {
                      "name": "MetadataTransferred",
                      "fields": [
                        {
                          "name": "prev_owner",
                          "type": 64,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Previous metadata owner."
                          ]
                        },
                        {
                          "name": "owner",
                          "type": 64,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "New metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "PreimageHash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Metadata has been transferred to new owner."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "pallet_democracy",
                "vote_threshold",
                "VoteThreshold"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SuperMajorityApprove",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SuperMajorityAgainst",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SimpleMajority",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 62,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "AccountVote"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Standard",
                      "fields": [
                        {
                          "name": "vote",
                          "type": 63,
                          "typeName": "Vote",
                          "docs": [

                          ]
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Split",
                      "fields": [
                        {
                          "name": "aye",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "nay",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 63,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "Vote"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 64,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "MetadataOwner"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "External",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Proposal",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Referendum",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "threshold",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                        "`MemberCount`)."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "voted",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A motion (given hash) has been voted on by given account, leaving",
                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A motion was approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Disapproved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A motion was not approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "result",
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A motion was executed; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "MemberExecuted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "result",
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A single member did some action; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "Closed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A proposal was closed because its threshold was reached or after its duration was up."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 66,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 67
                },
                {
                  "name": "E",
                  "type": 26
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "name": null,
                          "type": 67,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "name": null,
                          "type": 26,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 67,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [

                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "threshold",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                        "`MemberCount`)."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "voted",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A motion (given hash) has been voted on by given account, leaving",
                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A motion was approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Disapproved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A motion was not approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "result",
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A motion was executed; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "MemberExecuted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "result",
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A single member did some action; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "Closed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A proposal was closed because its threshold was reached or after its duration was up."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 69,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewTerm",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 70,
                          "typeName": "Vec<(<T as frame_system::Config>::AccountId, BalanceOf<T>)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new term with new_members. This indicates that enough candidates existed to run",
                        "the election, not that enough have has been elected. The inner value must be examined",
                        "for this purpose. A `NewTerm(\\[\\])` indicates that some candidates got their bond",
                        "slashed and none were elected, whilst `EmptyTerm` means that no candidates existed to",
                        "begin with."
                      ]
                    },
                    {
                      "name": "EmptyTerm",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "No (or not enough) candidates existed for this round. This is different from",
                        "`NewTerm(\\[\\])`. See the description of `NewTerm`."
                      ]
                    },
                    {
                      "name": "ElectionError",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Internal error happened while trying to perform election."
                      ]
                    },
                    {
                      "name": "MemberKicked",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A member has been removed. This should always be followed by either `NewTerm` or",
                        "`EmptyTerm`."
                      ]
                    },
                    {
                      "name": "Renounced",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Someone has renounced their candidacy."
                      ]
                    },
                    {
                      "name": "CandidateSlashed",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A candidate was slashed by amount due to failing to obtain a seat as member or",
                        "runner-up.",
                        "",
                        "Note that old members and runners-up are also candidates."
                      ]
                    },
                    {
                      "name": "SeatHolderSlashed",
                      "fields": [
                        {
                          "name": "seat_holder",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A seat holder was slashed by amount by being forcefully removed from the set."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 70,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 71
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 71,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  0,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "pallet_membership",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MemberAdded",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The given member was added; see the transaction for who."
                      ]
                    },
                    {
                      "name": "MemberRemoved",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The given member was removed; see the transaction for who."
                      ]
                    },
                    {
                      "name": "MembersSwapped",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Two members were swapped; see the transaction for who."
                      ]
                    },
                    {
                      "name": "MembersReset",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The membership was reset; see the transaction for who the new set is."
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "One of the members' keys changed."
                      ]
                    },
                    {
                      "name": "Dummy",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Phantom member, never used."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 73,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New proposal."
                      ]
                    },
                    {
                      "name": "Spending",
                      "fields": [
                        {
                          "name": "budget_remaining",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "We have ended a spend period and will now allocate funds."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "award",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some funds have been allocated."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "slashed",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "Burnt",
                      "fields": [
                        {
                          "name": "burnt_funds",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some of our funds have been burnt."
                      ]
                    },
                    {
                      "name": "Rollover",
                      "fields": [
                        {
                          "name": "rollover_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Spending has finished; this is the amount that rolls over until next spend."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some funds have been deposited."
                      ]
                    },
                    {
                      "name": "SpendApproved",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A new spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "UpdatedInactive",
                      "fields": [
                        {
                          "name": "reactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The inactive funds of the pallet have been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 74,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Event"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchInterrupted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "error",
                          "type": 26,
                          "typeName": "DispatchError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                        "well as the error."
                      ]
                    },
                    {
                      "name": "BatchCompleted",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Batch of dispatches completed fully with no error."
                      ]
                    },
                    {
                      "name": "BatchCompletedWithErrors",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Batch of dispatches completed but has errors."
                      ]
                    },
                    {
                      "name": "ItemCompleted",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with no error."
                      ]
                    },
                    {
                      "name": "ItemFailed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 26,
                          "typeName": "DispatchError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with error."
                      ]
                    },
                    {
                      "name": "DispatchedAs",
                      "fields": [
                        {
                          "name": "result",
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A call was dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IdentitySet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A name was set or reset (which will remove all judgements)."
                      ]
                    },
                    {
                      "name": "IdentityCleared",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A name was cleared, and the given balance returned."
                      ]
                    },
                    {
                      "name": "IdentityKilled",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A name was removed and the given balance slashed."
                      ]
                    },
                    {
                      "name": "JudgementRequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A judgement was asked from a registrar."
                      ]
                    },
                    {
                      "name": "JudgementUnrequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A judgement request was retracted."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A judgement was given by a registrar."
                      ]
                    },
                    {
                      "name": "RegistrarAdded",
                      "fields": [
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A registrar was added."
                      ]
                    },
                    {
                      "name": "SubIdentityAdded",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A sub-identity was added to an identity and the deposit paid."
                      ]
                    },
                    {
                      "name": "SubIdentityRemoved",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A sub-identity was removed from an identity and the deposit freed."
                      ]
                    },
                    {
                      "name": "SubIdentityRevoked",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A sub-identity was cleared, and the given deposit repatriated from the",
                        "main identity account to the sub-identity account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Scheduled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Scheduled some task."
                      ]
                    },
                    {
                      "name": "Canceled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Canceled some task."
                      ]
                    },
                    {
                      "name": "Dispatched",
                      "fields": [
                        {
                          "name": "task",
                          "type": 77,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "result",
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Dispatched some task."
                      ]
                    },
                    {
                      "name": "CallUnavailable",
                      "fields": [
                        {
                          "name": "task",
                          "type": 77,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The call for the provided hash was not found so the task has been aborted."
                      ]
                    },
                    {
                      "name": "PeriodicFailed",
                      "fields": [
                        {
                          "name": "task",
                          "type": 77,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The given task was unable to be renewed since the agenda is full at that block."
                      ]
                    },
                    {
                      "name": "PermanentlyOverweight",
                      "fields": [
                        {
                          "name": "task",
                          "type": 77,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Option<TaskName>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The given task can never be executed since it is overweight."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 77,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 78,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noted",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A preimage has been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A preimage has been requested."
                      ]
                    },
                    {
                      "name": "Cleared",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A preimage has ben cleared."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProxyExecuted",
                      "fields": [
                        {
                          "name": "result",
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A proxy was executed correctly, with the given."
                      ]
                    },
                    {
                      "name": "PureCreated",
                      "fields": [
                        {
                          "name": "pure",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 80,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "disambiguation_index",
                          "type": 40,
                          "typeName": "u16",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A pure account has been created by new proxy with given",
                        "disambiguation index and proxy type."
                      ]
                    },
                    {
                      "name": "Announced",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An announcement was placed to make a call in the future."
                      ]
                    },
                    {
                      "name": "ProxyAdded",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 80,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proxy was added."
                      ]
                    },
                    {
                      "name": "ProxyRemoved",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 80,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proxy was removed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 80,
            "type": {
              "path": [
                "darwinia_runtime",
                "pallets",
                "proxy",
                "ProxyType"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonTransfer",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Governance",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Staking",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "IdentityJudgement",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CancelProxy",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EcdsaBridge",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubstrateBridge",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 81,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Success",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Some XCM was executed ok."
                      ]
                    },
                    {
                      "name": "Fail",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "error",
                          "type": 82,
                          "typeName": "XcmError",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some XCM failed."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Bad XCM version used."
                      ]
                    },
                    {
                      "name": "BadFormat",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Bad XCM format used."
                      ]
                    },
                    {
                      "name": "XcmpMessageSent",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An HRMP message was sent to a sibling parachain."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 83,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sent_at",
                          "type": 4,
                          "typeName": "RelayBlockNumber",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "required",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An XCM exceeded the individual message weight budget."
                      ]
                    },
                    {
                      "name": "OverweightServiced",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "used",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An XCM from the overweight queue was executed with the given actual weight used."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 82,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "traits",
                "Error"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unimplemented",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LocationFull",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LocationNotInvertible",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidLocation",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetNotFound",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotWithdrawable",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LocationCannotHold",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DestinationUnsupported",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transport",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unroutable",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnknownClaim",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToDecode",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "fields": [

                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotHoldingFees",
                      "fields": [

                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooExpensive",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectationFalse",
                      "fields": [

                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PalletNotFound",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NameMismatch",
                      "fields": [

                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "VersionIncompatible",
                      "fields": [

                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HoldingWouldOverflow",
                      "fields": [

                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExportError",
                      "fields": [

                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReanchorFailed",
                      "fields": [

                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoDeal",
                      "fields": [

                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FeesNotMet",
                      "fields": [

                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LockError",
                      "fields": [

                      ],
                      "index": 31,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [

                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unanchored",
                      "fields": [

                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotDepositable",
                      "fields": [

                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "fields": [

                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Barrier",
                      "fields": [

                      ],
                      "index": 37,
                      "docs": [

                      ]
                    },
                    {
                      "name": "WeightNotComputable",
                      "fields": [

                      ],
                      "index": 38,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExceedsStackLimit",
                      "fields": [

                      ],
                      "index": 39,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 83,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "Id"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 84,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "outcome",
                          "type": 85,
                          "typeName": "xcm::latest::Outcome",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Execution of an XCM message was attempted."
                      ]
                    },
                    {
                      "name": "Sent",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "destination",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A XCM message was sent."
                      ]
                    },
                    {
                      "name": "UnexpectedResponse",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Query response received which does not match a registered query. This may be because a",
                        "matching query was never registered, it may be because it is a duplicate response, or",
                        "because the query timed out."
                      ]
                    },
                    {
                      "name": "ResponseReady",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 106,
                          "typeName": "Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Query response has been received and is ready for taking with `take_response`. There is",
                        "no registered notification call."
                      ]
                    },
                    {
                      "name": "Notified",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification has",
                        "been dispatched and executed successfully."
                      ]
                    },
                    {
                      "name": "NotifyOverweight",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "actual_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_budgeted_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Query response has been received and query is removed. The registered notification",
                        "could not be dispatched because the dispatch weight is greater than the maximum weight",
                        "originally budgeted by this runtime for the query result."
                      ]
                    },
                    {
                      "name": "NotifyDispatchError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Query response has been received and query is removed. There was a general error with",
                        "dispatching the notification call."
                      ]
                    },
                    {
                      "name": "NotifyDecodeFailed",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "pallet_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_index",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Query response has been received and query is removed. The dispatch was unable to be",
                        "decoded into a `Call`; this might be due to dispatch function having a signature which",
                        "is not `(origin, QueryId, Response)`."
                      ]
                    },
                    {
                      "name": "InvalidResponder",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "expected_location",
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Expected query response has been received but the origin location of the response does",
                        "not match that expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "InvalidResponderVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Expected query response has been received but the expected origin location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "ResponseTaken",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Received query response has been read and removed."
                      ]
                    },
                    {
                      "name": "AssetsTrapped",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 123,
                          "typeName": "VersionedMultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some assets have been placed in an asset trap."
                      ]
                    },
                    {
                      "name": "VersionChangeNotified",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "result",
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": [

                          ]
                        },
                        {
                          "name": "cost",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An XCM version change notification message has been attempted to be sent.",
                        "",
                        "The cost of sending it (borne by the chain) is included."
                      ]
                    },
                    {
                      "name": "SupportedVersionChanged",
                      "fields": [
                        {
                          "name": "location",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The supported version of a location has been changed. This might be through an",
                        "automatic notification or a manual intervention."
                      ]
                    },
                    {
                      "name": "NotifyTargetSendFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "error",
                          "type": 82,
                          "typeName": "XcmError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "sending the notification to it."
                      ]
                    },
                    {
                      "name": "NotifyTargetMigrationFail",
                      "fields": [
                        {
                          "name": "location",
                          "type": 137,
                          "typeName": "VersionedMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A given location which had a version change subscription was dropped owing to an error",
                        "migrating the location to our new XCM format."
                      ]
                    },
                    {
                      "name": "InvalidQuerierVersion",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Expected query response has been received but the expected querier location placed in",
                        "storage by this runtime previously cannot be decoded. The query remains registered.",
                        "",
                        "This is unexpected (since a location placed in storage in a previously executing",
                        "runtime should be readable prior to query timeout) and dangerous since the possibly",
                        "valid response will be dropped. Manual governance intervention is probably going to be",
                        "needed."
                      ]
                    },
                    {
                      "name": "InvalidQuerier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "query_id",
                          "type": 11,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "expected_querier",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_actual_querier",
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Expected query response has been received but the querier location of the response does",
                        "not match the expected. The query remains registered for a later, valid, response to",
                        "be received and acted upon."
                      ]
                    },
                    {
                      "name": "VersionNotifyStarted",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "cost",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "A remote has requested XCM version change notification from us and we have honored it.",
                        "A version information message is sent to them and its cost is included."
                      ]
                    },
                    {
                      "name": "VersionNotifyRequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "cost",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "We have requested that a remote chain send us XCM version change notifications."
                      ]
                    },
                    {
                      "name": "VersionNotifyUnrequested",
                      "fields": [
                        {
                          "name": "destination",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "cost",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "We have requested that a remote chain stops sending us XCM version change",
                        "notifications."
                      ]
                    },
                    {
                      "name": "FeesPaid",
                      "fields": [
                        {
                          "name": "paying",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fees",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Fees were paid from a location for an operation (often for using `SendXcm`)."
                      ]
                    },
                    {
                      "name": "AssetsClaimed",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "origin",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 123,
                          "typeName": "VersionedMultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some assets have been claimed from an asset trap"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 85,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "traits",
                "Outcome"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Complete",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Incomplete",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 82,
                          "typeName": "Error",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "name": null,
                          "type": 82,
                          "typeName": "Error",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 86,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multilocation",
                "MultiLocation"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "interior",
                      "type": 87,
                      "typeName": "Junctions",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 87,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junctions",
                "Junctions"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "Junction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 90,
                          "typeName": "Option<NetworkId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 90,
                          "typeName": "Option<NetworkId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 90,
                          "typeName": "Option<NetworkId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "key",
                          "type": 1,
                          "typeName": "[u8; 20]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": "length",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OnlyChild",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 93,
                          "typeName": "BodyId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "part",
                          "type": 94,
                          "typeName": "BodyPart",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GlobalConsensus",
                      "fields": [
                        {
                          "name": null,
                          "type": 91,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 89,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "compact": {
                  "type": 4
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 90,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 91
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 91,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "NetworkId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ByGenesis",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ByFork",
                      "fields": [
                        {
                          "name": "block_number",
                          "type": 11,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "block_hash",
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Polkadot",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Kusama",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Westend",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Rococo",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Wococo",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "name": "chain_id",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BitcoinCore",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BitcoinCash",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 92,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "compact": {
                  "type": 6
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "BodyId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Moniker",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "[u8; 4]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Executive",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Technical",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Legislative",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Judicial",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Defense",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Administration",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Treasury",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "junction",
                "BodyPart"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 95,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 96,
                      "typeName": "Vec<Instruction<Call>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 96,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 97
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 106,
                          "typeName": "Response",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "querier",
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 116,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 117,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 87,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": null,
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "want",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maximal",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 95,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 95,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearError",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ticket",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "name": null,
                          "type": 107,
                          "typeName": "Option<(u32, Error)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 31,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 113,
                          "typeName": "MaybeErrorCode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response_info",
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "crate_major",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearTransactStatus",
                      "fields": [

                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 37,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 91,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "destination",
                          "type": 87,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 38,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "unlocker",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 39,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 40,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 41,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "locker",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 42,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 43,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 44,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearTopic",
                      "fields": [

                      ],
                      "index": 45,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 46,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        },
                        {
                          "name": "check_origin",
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 47,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 98,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "MultiAssets"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 99,
                      "typeName": "Vec<MultiAsset>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 99,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 100
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "MultiAsset"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 101,
                      "typeName": "AssetId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fun",
                      "type": 102,
                      "typeName": "Fungibility",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "AssetId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 102,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "Fungibility"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 103,
                          "typeName": "AssetInstance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 103,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "AssetInstance"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "[u8; 4]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": "[u8; 8]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "name": null,
                          "type": 105,
                          "typeName": "[u8; 16]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 104,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 105,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 16,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 106,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Response"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "name": null,
                          "type": 107,
                          "typeName": "Option<(u32, Error)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "super::Version",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PalletsInfo",
                      "fields": [
                        {
                          "name": null,
                          "type": 109,
                          "typeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DispatchResult",
                      "fields": [
                        {
                          "name": null,
                          "type": 113,
                          "typeName": "MaybeErrorCode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 107,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 108
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 108,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 108,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  82
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 110
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 112,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 110,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "PalletInfo"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 89,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "name",
                      "type": 111,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "module_name",
                      "type": 111,
                      "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "major",
                      "type": 89,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "minor",
                      "type": 89,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "patch",
                      "type": 89,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 111,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 112,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 110
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "MaybeErrorCode"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Success",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "name": null,
                          "type": 114,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TruncatedError",
                      "fields": [
                        {
                          "name": null,
                          "type": 114,
                          "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 115,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 86
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 116,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "OriginKind"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Native",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SovereignAccount",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Superuser",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Xcm",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "staging_xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 14,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "QueryResponseInfo"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "destination",
                      "type": 86,
                      "typeName": "MultiLocation",
                      "docs": [

                      ]
                    },
                    {
                      "name": "query_id",
                      "type": 10,
                      "typeName": "QueryId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 119,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "MultiAssetFilter"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "name": null,
                          "type": 120,
                          "typeName": "WildMultiAsset",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "WildMultiAsset"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 101,
                          "typeName": "AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fun",
                          "type": 121,
                          "typeName": "WildFungibility",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllCounted",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllOfCounted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 101,
                          "typeName": "AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fun",
                          "type": 121,
                          "typeName": "WildFungibility",
                          "docs": [

                          ]
                        },
                        {
                          "name": "count",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 121,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "multiasset",
                "WildFungibility"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonFungible",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "WeightLimit"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 123,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedMultiAssets"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "v2::MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "v3::MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "MultiAssets"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 125,
                      "typeName": "Vec<MultiAsset>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 125,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 126
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 126,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "MultiAsset"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 127,
                      "typeName": "AssetId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fun",
                      "type": 135,
                      "typeName": "Fungibility",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "AssetId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Concrete",
                      "fields": [
                        {
                          "name": null,
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Abstract",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 128,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multilocation",
                "MultiLocation"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parents",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "interior",
                      "type": 129,
                      "typeName": "Junctions",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 129,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multilocation",
                "Junctions"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Here",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X1",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X2",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X3",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X4",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X5",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X6",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X7",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "X8",
                      "fields": [
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 130,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 130,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "junction",
                "Junction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Parachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountId32",
                      "fields": [
                        {
                          "name": "network",
                          "type": 131,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "id",
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountIndex64",
                      "fields": [
                        {
                          "name": "network",
                          "type": 131,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountKey20",
                      "fields": [
                        {
                          "name": "network",
                          "type": 131,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "key",
                          "type": 1,
                          "typeName": "[u8; 20]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PalletInstance",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralIndex",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GeneralKey",
                      "fields": [
                        {
                          "name": null,
                          "type": 132,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OnlyChild",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Plurality",
                      "fields": [
                        {
                          "name": "id",
                          "type": 133,
                          "typeName": "BodyId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "part",
                          "type": 134,
                          "typeName": "BodyPart",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "NetworkId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "name": null,
                          "type": 132,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Polkadot",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Kusama",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "BodyId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unit",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Named",
                      "fields": [
                        {
                          "name": null,
                          "type": 132,
                          "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Executive",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Technical",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Legislative",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Judicial",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Defense",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Administration",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Treasury",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 134,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "BodyPart"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Voice",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": "count",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Fraction",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AtLeastProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MoreThanProportion",
                      "fields": [
                        {
                          "name": "nom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "denom",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "Fungibility"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonFungible",
                      "fields": [
                        {
                          "name": null,
                          "type": 136,
                          "typeName": "AssetInstance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 136,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "AssetInstance"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Undefined",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array4",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "[u8; 4]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array8",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": "[u8; 8]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array16",
                      "fields": [
                        {
                          "name": null,
                          "type": 105,
                          "typeName": "[u8; 16]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Array32",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Blob",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 137,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedMultiLocation"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 128,
                          "typeName": "v2::MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "v3::MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 138,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidFormat",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Downward message is invalid XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "UnsupportedVersion",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Downward message is unsupported version of XCM.",
                        "\\[ id \\]"
                      ]
                    },
                    {
                      "name": "ExecutedDownward",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 85,
                          "typeName": "Outcome",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Downward message executed with the given outcome.",
                        "\\[ id, outcome \\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidFormat",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Downward message is invalid XCM."
                      ]
                    },
                    {
                      "name": "UnsupportedVersion",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Downward message is unsupported version of XCM."
                      ]
                    },
                    {
                      "name": "ExecutedDownward",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "outcome",
                          "type": 85,
                          "typeName": "Outcome",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Downward message executed with the given outcome."
                      ]
                    },
                    {
                      "name": "WeightExhausted",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "remaining_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "required_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The weight limit for handling downward messages was reached."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message_id",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "overweight_index",
                          "type": 11,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "required_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Downward message is overweight and was placed in the overweight queue."
                      ]
                    },
                    {
                      "name": "OverweightServiced",
                      "fields": [
                        {
                          "name": "overweight_index",
                          "type": 11,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Downward message from the overweight queue was executed."
                      ]
                    },
                    {
                      "name": "MaxMessagesExhausted",
                      "fields": [
                        {
                          "name": "message_hash",
                          "type": 13,
                          "typeName": "XcmHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The maximum number of downward messages was reached."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 140,
            "type": {
              "path": [
                "pallet_asset_manager",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ForeignAssetRegistered",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "asset",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "metadata",
                          "type": 142,
                          "typeName": "T::AssetRegistrarMetadata",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New asset with the asset manager is registered"
                      ]
                    },
                    {
                      "name": "UnitsPerSecondChanged",
                      "fields": [
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "units_per_second",
                          "type": 6,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Changed the amount of units we are charging per execution second for a given asset"
                      ]
                    },
                    {
                      "name": "ForeignAssetTypeChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Changed the xcm type mapping for a given asset id"
                      ]
                    },
                    {
                      "name": "ForeignAssetRemoved",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Removed all information related to an assetId"
                      ]
                    },
                    {
                      "name": "SupportedAssetRemoved",
                      "fields": [
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Supported asset type for fee payment removed"
                      ]
                    },
                    {
                      "name": "LocalAssetRegistered",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Local asset was created"
                      ]
                    },
                    {
                      "name": "ForeignAssetDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Removed all information related to an assetId and destroyed asset"
                      ]
                    },
                    {
                      "name": "LocalAssetDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Removed all information related to an assetId and destroyed asset"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 141,
            "type": {
              "path": [
                "darwinia_runtime",
                "pallets",
                "asset_manager",
                "AssetType"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Xcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 142,
            "type": {
              "path": [
                "darwinia_common_runtime",
                "xcm_configs",
                "AssetRegistrarMetadata"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 14,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "symbol",
                      "type": 14,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "decimals",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "is_frozen",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "orml_xtokens",
                "module",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransferredMultiAssets",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Transferred `MultiAsset` with fee."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 144,
            "type": {
              "path": [
                "darwinia_asset_limit",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetLimitChanged",
                      "fields": [
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "units_limit",
                          "type": 6,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New limit is set or old limit is updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 145,
            "type": {
              "path": [
                "pallet_ethereum",
                "pallet",
                "Event"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "from",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "transaction_hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "exit_reason",
                          "type": 147,
                          "typeName": "ExitReason",
                          "docs": [

                          ]
                        },
                        {
                          "name": "extra_data",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An ethereum transaction was successfully executed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 146,
            "type": {
              "path": [
                "primitive_types",
                "H160"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 20]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 147,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitReason"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Succeed",
                      "fields": [
                        {
                          "name": null,
                          "type": 148,
                          "typeName": "ExitSucceed",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Error",
                      "fields": [
                        {
                          "name": null,
                          "type": 149,
                          "typeName": "ExitError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Revert",
                      "fields": [
                        {
                          "name": null,
                          "type": 153,
                          "typeName": "ExitRevert",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Fatal",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "ExitFatal",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 148,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitSucceed"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Stopped",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Returned",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Suicided",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StackUnderflow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "StackOverflow",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidJump",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidRange",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DesignatedInvalid",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CallTooDeep",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CreateCollision",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CreateContractLimit",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidCode",
                      "fields": [
                        {
                          "name": null,
                          "type": 150,
                          "typeName": "Opcode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OutOfOffset",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OutOfGas",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OutOfFund",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PCUnderflow",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CreateEmpty",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "name": null,
                          "type": 151,
                          "typeName": "Cow<'static, str>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MaxNonce",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "evm_core",
                "opcode",
                "Opcode"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 151,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 152
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 152,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 152,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "primitive": "Str"
              },
              "docs": [

              ]
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitRevert"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Reverted",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "evm_core",
                "error",
                "ExitFatal"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotSupported",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnhandledInterrupt",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CallErrorAsFatal",
                      "fields": [
                        {
                          "name": null,
                          "type": 149,
                          "typeName": "ExitError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "name": null,
                          "type": 151,
                          "typeName": "Cow<'static, str>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "pallet_evm",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Log",
                      "fields": [
                        {
                          "name": "log",
                          "type": 156,
                          "typeName": "Log",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Ethereum events from contracts."
                      ]
                    },
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "address",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A contract has been created at given address."
                      ]
                    },
                    {
                      "name": "CreatedFailed",
                      "fields": [
                        {
                          "name": "address",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A contract was attempted to be created, but the execution failed."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "address",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A contract has been executed successfully with states applied."
                      ]
                    },
                    {
                      "name": "ExecutedFailed",
                      "fields": [
                        {
                          "name": "address",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A contract has been executed with errors. States are reverted with only gas fees applied."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "ethereum",
                "log",
                "Log"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "address",
                      "type": 146,
                      "typeName": "H160",
                      "docs": [

                      ]
                    },
                    {
                      "name": "topics",
                      "type": 157,
                      "typeName": "Vec<H256>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "Bytes",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 157,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 12
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 158,
            "type": {
              "path": [
                "pallet_bridge_parachains",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UntrackedParachainRejected",
                      "fields": [
                        {
                          "name": "parachain",
                          "type": 159,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The caller has provided head of parachain that the pallet is not configured to track."
                      ]
                    },
                    {
                      "name": "MissingParachainHead",
                      "fields": [
                        {
                          "name": "parachain",
                          "type": 159,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The caller has declared that he has provided given parachain head, but it is missing",
                        "from the storage proof."
                      ]
                    },
                    {
                      "name": "IncorrectParachainHeadHash",
                      "fields": [
                        {
                          "name": "parachain",
                          "type": 159,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "parachain_head_hash",
                          "type": 12,
                          "typeName": "ParaHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "actual_parachain_head_hash",
                          "type": 12,
                          "typeName": "ParaHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The caller has provided parachain head hash that is not matching the hash read from the",
                        "storage proof."
                      ]
                    },
                    {
                      "name": "RejectedObsoleteParachainHead",
                      "fields": [
                        {
                          "name": "parachain",
                          "type": 159,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "parachain_head_hash",
                          "type": 12,
                          "typeName": "ParaHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The caller has provided obsolete parachain head, which is already known to the pallet."
                      ]
                    },
                    {
                      "name": "RejectedLargeParachainHead",
                      "fields": [
                        {
                          "name": "parachain",
                          "type": 159,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "parachain_head_hash",
                          "type": 12,
                          "typeName": "ParaHash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "parachain_head_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The caller has provided parachain head that exceeds the maximal configured head size."
                      ]
                    },
                    {
                      "name": "UpdatedParachainHead",
                      "fields": [
                        {
                          "name": "parachain",
                          "type": 159,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "parachain_head_hash",
                          "type": 12,
                          "typeName": "ParaHash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Parachain head has been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "bp_polkadot_core",
                "parachains",
                "ParaId"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 160,
            "type": {
              "path": [
                "pallet_bridge_messages",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParameterUpdated",
                      "fields": [
                        {
                          "name": "parameter",
                          "type": 67,
                          "typeName": "T::Parameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Pallet parameter has been updated."
                      ]
                    },
                    {
                      "name": "MessageAccepted",
                      "fields": [
                        {
                          "name": "lane_id",
                          "type": 18,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "nonce",
                          "type": 11,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Message has been accepted and is waiting to be delivered."
                      ]
                    },
                    {
                      "name": "MessagesReceived",
                      "fields": [
                        {
                          "name": null,
                          "type": 161,
                          "typeName": "Vec<ReceivedMessages<ReceivalResult>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Messages have been received from the bridged chain."
                      ]
                    },
                    {
                      "name": "MessagesDelivered",
                      "fields": [
                        {
                          "name": "lane_id",
                          "type": 18,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "messages",
                          "type": 168,
                          "typeName": "DeliveredMessages",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Messages in the inclusive range have been delivered to the bridged chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 161,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 162
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "bp_messages",
                "ReceivedMessages"
              ],
              "params": [
                {
                  "name": "Result",
                  "type": 163
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lane",
                      "type": 18,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "receive_results",
                      "type": 165,
                      "typeName": "Vec<(MessageNonce, Result)>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "skipped_for_not_enough_weight",
                      "type": 167,
                      "typeName": "Vec<MessageNonce>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 163,
            "type": {
              "path": [
                "bp_messages",
                "ReceivalResult"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Dispatched",
                      "fields": [
                        {
                          "name": null,
                          "type": 164,
                          "typeName": "MessageDispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidNonce",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooManyUnrewardedRelayers",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooManyUnconfirmedMessages",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PreDispatchValidateFailed",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "bp_runtime",
                "messages",
                "MessageDispatchResult"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "dispatch_result",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    },
                    {
                      "name": "unspent_weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "dispatch_fee_paid_during_dispatch",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 165,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 166
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 166,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  11,
                  163
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 167,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 11
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 168,
            "type": {
              "path": [
                "bp_messages",
                "DeliveredMessages"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "begin",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "end",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "dispatch_results",
                      "type": 169,
                      "typeName": "DispatchResultsBitVec",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 169,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "bitSequence": {
                  "bitStoreType": 2,
                  "bitOrderType": 170
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 170,
            "type": {
              "path": [
                "bitvec",
                "order",
                "Msb0"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "pallet_bridge_dispatch",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MessageRejected",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Message has been rejected before reaching dispatch."
                      ]
                    },
                    {
                      "name": "MessageVersionSpecMismatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "SpecVersion",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "SpecVersion",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Message has been rejected by dispatcher because of spec version mismatch.",
                        "Last two arguments are: expected and passed spec version."
                      ]
                    },
                    {
                      "name": "MessageWeightMismatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Message has been rejected by dispatcher because of weight mismatch.",
                        "Last two arguments are: expected and passed call weight."
                      ]
                    },
                    {
                      "name": "MessageSignatureMismatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Message signature mismatch."
                      ]
                    },
                    {
                      "name": "MessageCallDecodeFailed",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "We have failed to decode Call from the message."
                      ]
                    },
                    {
                      "name": "MessageCallValidateFailed",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 173,
                          "typeName": "TransactionValidityError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The call from the message has been rejected by the call validator."
                      ]
                    },
                    {
                      "name": "MessageDispatchPaymentFailed",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The origin account has failed to pay fee for dispatching the message."
                      ]
                    },
                    {
                      "name": "MessageDispatched",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "ChainId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 172,
                          "typeName": "BridgeMessageIdOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 66,
                          "typeName": "DispatchResult",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Message has been dispatched with given result."
                      ]
                    },
                    {
                      "name": "_Dummy",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Phantom member, never used. Needed to handle multiple pallet instances."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 172,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  18,
                  11
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 173,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "TransactionValidityError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Invalid",
                      "fields": [
                        {
                          "name": null,
                          "type": 174,
                          "typeName": "InvalidTransaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unknown",
                      "fields": [
                        {
                          "name": null,
                          "type": 175,
                          "typeName": "UnknownTransaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 174,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "InvalidTransaction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Payment",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Future",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Stale",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadProof",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AncientBirthBlock",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExhaustsResources",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadMandatory",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MandatoryValidation",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadSigner",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 175,
            "type": {
              "path": [
                "sp_runtime",
                "transaction_validity",
                "UnknownTransaction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CannotLookup",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoUnsignedValidator",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Custom",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 176,
            "type": {
              "path": [
                "pallet_fee_market",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Enroll",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Relayer enrollment. \\[account_id, locked_collateral, relay_fee\\]"
                      ]
                    },
                    {
                      "name": "UpdateLockedCollateral",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Update relayer locked collateral. \\[account_id, new_collateral\\]"
                      ]
                    },
                    {
                      "name": "UpdateRelayFee",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Update relayer fee. \\[account_id, new_fee\\]"
                      ]
                    },
                    {
                      "name": "CancelEnrollment",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Relayer cancel enrollment. \\[account_id\\]"
                      ]
                    },
                    {
                      "name": "UpdateCollateralSlashProtect",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Update collateral slash protect value. \\[slash_protect_value\\]"
                      ]
                    },
                    {
                      "name": "UpdateAssignedRelayersNumber",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Update market assigned relayers numbers. \\[new_assigned_relayers_number\\]"
                      ]
                    },
                    {
                      "name": "FeeMarketSlash",
                      "fields": [
                        {
                          "name": null,
                          "type": 177,
                          "typeName": "SlashReport<T::AccountId, BlockNumberFor<T>, BalanceOf<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Slash report"
                      ]
                    },
                    {
                      "name": "OrderCreated",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 44,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "Option<BlockNumberFor<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Create new order. \\[lane_id, message_nonce, order_fee, assigned_relayers,",
                        "out_of_slots_time\\]"
                      ]
                    },
                    {
                      "name": "OrderReward",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "MessageNonce",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 178,
                          "typeName": "RewardItem<T::AccountId, BalanceOf<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Reward distribute of the order. \\[lane_id, message_nonce, rewards\\]"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 177,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "SlashReport"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lane",
                      "type": 18,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "sent_time",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "confirm_time",
                      "type": 54,
                      "typeName": "Option<BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "delay_time",
                      "type": 54,
                      "typeName": "Option<BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "account_id",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 178,
            "type": {
              "path": [
                "pallet_fee_market",
                "s2s",
                "payment",
                "RewardItem"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "to_assigned_relayers",
                      "type": 179,
                      "typeName": "BTreeMap<AccountId, Balance>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "to_treasury",
                      "type": 180,
                      "typeName": "Option<Balance>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "to_message_relayer",
                      "type": 181,
                      "typeName": "Option<(AccountId, Balance)>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "to_confirm_relayer",
                      "type": 181,
                      "typeName": "Option<(AccountId, Balance)>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 179,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 70,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 180,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 181,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 71
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 71,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 182,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Finalization",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Initialization",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 183,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 77
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 184,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 89,
                      "typeName": "codec::Compact<u32>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "spec_name",
                      "type": 152,
                      "typeName": "sp_runtime::RuntimeString",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 185,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remark`]."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 11,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_heap_pages`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_code_without_checks`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 186,
                          "typeName": "Vec<KeyValue>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 188,
                          "typeName": "Vec<Key>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_storage`]."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 14,
                          "typeName": "Key",
                          "docs": [

                          ]
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::kill_prefix`]."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remark_with_event`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 186,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 187
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 187,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  14,
                  14
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 188,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 14
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 189,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_block",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "per_class",
                      "type": 190,
                      "typeName": "PerDispatchClass<WeightsPerClass>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 190,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 191
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 191,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "operational",
                      "type": 191,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mandatory",
                      "type": 191,
                      "typeName": "T",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 191,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 192,
                      "typeName": "Option<Weight>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_total",
                      "type": 192,
                      "typeName": "Option<Weight>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reserved",
                      "type": 192,
                      "typeName": "Option<Weight>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 192,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 193,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 194,
                      "typeName": "PerDispatchClass<u32>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 194,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 195,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "write",
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 196,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 152,
                      "typeName": "RuntimeString",
                      "docs": [

                      ]
                    },
                    {
                      "name": "impl_name",
                      "type": 152,
                      "typeName": "RuntimeString",
                      "docs": [

                      ]
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "apis",
                      "type": 197,
                      "typeName": "ApisVec",
                      "docs": [

                      ]
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 197,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 198
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 198,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 198,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 199
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 199,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  104,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 200,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 201,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 202
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 202,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "Ancestor"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "used_bandwidth",
                      "type": 203,
                      "typeName": "UsedBandwidth",
                      "docs": [

                      ]
                    },
                    {
                      "name": "para_head_hash",
                      "type": 208,
                      "typeName": "Option<H>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "consumed_go_ahead_signal",
                      "type": 209,
                      "typeName": "Option<relay_chain::UpgradeGoAhead>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 203,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "UsedBandwidth"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ump_msg_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "ump_total_bytes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "hrmp_outgoing",
                      "type": 204,
                      "typeName": "BTreeMap<ParaId, HrmpChannelUpdate>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 204,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 83
                },
                {
                  "name": "V",
                  "type": 205
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 206,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 205,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "HrmpChannelUpdate"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "total_bytes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 206,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 207
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 207,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  83,
                  205
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 208,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 12,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 209,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 210
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 210,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 210,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "UpgradeGoAhead"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Abort",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GoAhead",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 211,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "unincluded_segment",
                "SegmentTracker"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "used_bandwidth",
                      "type": 203,
                      "typeName": "UsedBandwidth",
                      "docs": [

                      ]
                    },
                    {
                      "name": "hrmp_watermark",
                      "type": 54,
                      "typeName": "Option<relay_chain::BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "consumed_go_ahead_signal",
                      "type": 209,
                      "typeName": "Option<relay_chain::UpgradeGoAhead>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 212,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "PersistedValidationData"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_head",
                      "type": 213,
                      "typeName": "HeadData",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_parent_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_parent_storage_root",
                      "type": 12,
                      "typeName": "H",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_pov_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 213,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "HeadData"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 214,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 215
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 215,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 215,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "UpgradeRestriction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Present",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 216,
            "type": {
              "path": [
                "sp_trie",
                "storage_proof",
                "StorageProof"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "trie_nodes",
                      "type": 217,
                      "typeName": "BTreeSet<Vec<u8>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 217,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 14
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 188,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 218,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "relay_state_snapshot",
                "MessagingStateSnapshot"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "dmq_mqc_head",
                      "type": 12,
                      "typeName": "relay_chain::Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_dispatch_queue_remaining_capacity",
                      "type": 219,
                      "typeName": "RelayDispatchQueueRemainingCapacity",
                      "docs": [

                      ]
                    },
                    {
                      "name": "ingress_channels",
                      "type": 220,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "egress_channels",
                      "type": 220,
                      "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 219,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "relay_state_snapshot",
                "RelayDispatchQueueRemainingCapacity"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "remaining_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "remaining_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 220,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 221
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 221,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  83,
                  222
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 222,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "AbridgedHrmpChannel"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_capacity",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "msg_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "total_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mqc_head",
                      "type": 208,
                      "typeName": "Option<Hash>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 223,
            "type": {
              "path": [
                "polkadot_primitives",
                "v5",
                "AbridgedHostConfiguration"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_code_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_head_data_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_queue_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_queue_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_message_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_upward_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "hrmp_max_message_num_per_candidate",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "validation_upgrade_cooldown",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "validation_upgrade_delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "async_backing_params",
                      "type": 224,
                      "typeName": "super::vstaging::AsyncBackingParams",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 224,
            "type": {
              "path": [
                "polkadot_primitives",
                "vstaging",
                "AsyncBackingParams"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_candidate_depth",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "allowed_ancestry_len",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 225,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "MessageQueueChain"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 12,
                      "typeName": "RelayHash",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 226,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 83
                },
                {
                  "name": "V",
                  "type": 225
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 227,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 227,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 228
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 228,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  83,
                  225
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 229,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 230
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 230,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "OutboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 83
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 83,
                      "typeName": "Id",
                      "docs": [

                      ]
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "sp_std::vec::Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 231,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "CodeUpgradeAuthorization"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code_hash",
                      "type": 12,
                      "typeName": "T::Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "check_version",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 232,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_validation_data",
                      "fields": [
                        {
                          "name": "data",
                          "type": 233,
                          "typeName": "ParachainInherentData",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_validation_data`]."
                      ]
                    },
                    {
                      "name": "sudo_send_upward_message",
                      "fields": [
                        {
                          "name": "message",
                          "type": 14,
                          "typeName": "UpwardMessage",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_send_upward_message`]."
                      ]
                    },
                    {
                      "name": "authorize_upgrade",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "check_version",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::authorize_upgrade`]."
                      ]
                    },
                    {
                      "name": "enact_authorized_upgrade",
                      "fields": [
                        {
                          "name": "code",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::enact_authorized_upgrade`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 233,
            "type": {
              "path": [
                "cumulus_primitives_parachain_inherent",
                "ParachainInherentData"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "validation_data",
                      "type": 212,
                      "typeName": "PersistedValidationData",
                      "docs": [

                      ]
                    },
                    {
                      "name": "relay_chain_state",
                      "type": 216,
                      "typeName": "sp_trie::StorageProof",
                      "docs": [

                      ]
                    },
                    {
                      "name": "downward_messages",
                      "type": 234,
                      "typeName": "Vec<InboundDownwardMessage>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "horizontal_messages",
                      "type": 236,
                      "typeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 234,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 235
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 235,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundDownwardMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "msg",
                      "type": 14,
                      "typeName": "DownwardMessage",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 236,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 83
                },
                {
                  "name": "V",
                  "type": 237
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 239,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 237,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 238
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 238,
            "type": {
              "path": [
                "polkadot_core_primitives",
                "InboundHrmpMessage"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sent_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "data",
                      "type": 14,
                      "typeName": "sp_std::vec::Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 239,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 240
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 240,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  83,
                  237
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 241,
            "type": {
              "path": [
                "cumulus_pallet_parachain_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OverlappingUpgrades",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Attempt to upgrade validation function while existing upgrade pending."
                      ]
                    },
                    {
                      "name": "ProhibitedByPolkadot",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Polkadot currently prohibits this parachain from upgrading its validation function."
                      ]
                    },
                    {
                      "name": "TooBig",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The supplied validation function has compiled into a blob larger than Polkadot is",
                        "willing to run."
                      ]
                    },
                    {
                      "name": "ValidationDataNotAvailable",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The inherent which supplies the validation data did not run this block."
                      ]
                    },
                    {
                      "name": "HostConfigurationNotAvailable",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The inherent which supplies the host configuration did not run this block."
                      ]
                    },
                    {
                      "name": "NotScheduled",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "No validation function upgrade is currently scheduled."
                      ]
                    },
                    {
                      "name": "NothingAuthorized",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "No code upgrade has been authorized."
                      ]
                    },
                    {
                      "name": "Unauthorized",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "The given code upgrade has not been authorized."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 242,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 10,
                          "typeName": "T::Moment",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 243,
            "type": {
              "path": [
                "parachain_info",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [

                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 244,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 245
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 247,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 245,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 104,
                      "typeName": "LockIdentifier",
                      "docs": [

                      ]
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reasons",
                      "type": 246,
                      "typeName": "Reasons",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 246,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "Reasons"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Misc",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "All",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 247,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 245
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 248,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 249
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 250,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 249,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 104
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 104,
                      "typeName": "ReserveIdentifier",
                      "docs": [

                      ]
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 250,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 249
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 251,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 252
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 253,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 252,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 67
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 67,
                      "typeName": "Id",
                      "docs": [

                      ]
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 253,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 252
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 254,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer_allow_death`]."
                      ]
                    },
                    {
                      "name": "set_balance_deprecated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_free",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "old_reserved",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_balance_deprecated`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "keep_alive",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_all`]."
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_unreserve`]."
                      ]
                    },
                    {
                      "name": "upgrade_accounts",
                      "fields": [
                        {
                          "name": "who",
                          "type": 44,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::upgrade_accounts`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "force_set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_free",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::force_set_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 255,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value."
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Balance too low to send value."
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit."
                      ]
                    },
                    {
                      "name": "Expendability",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account."
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account."
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed `MaxReserves`."
                      ]
                    },
                    {
                      "name": "TooManyHolds",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Number of holds exceed `MaxHolds`."
                      ]
                    },
                    {
                      "name": "TooManyFreezes",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "Number of freezes exceed `MaxFreezes`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 256,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "u128",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 257,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V2",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 258,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetDetails"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "issuer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "admin",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "freezer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "supply",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "min_balance",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "is_sufficient",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    },
                    {
                      "name": "accounts",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "approvals",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "status",
                      "type": 259,
                      "typeName": "AssetStatus",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 259,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetStatus"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Live",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Destroying",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 260,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  11,
                  0
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 261,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetAccount"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "Extra",
                  "type": 67
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "status",
                      "type": 262,
                      "typeName": "AccountStatus",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reason",
                      "type": 263,
                      "typeName": "ExistenceReason<DepositBalance, AccountId>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "extra",
                      "type": 67,
                      "typeName": "Extra",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 262,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AccountStatus"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Liquid",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Blocked",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 263,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "ExistenceReason"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Consumer",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Sufficient",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositHeld",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositRefunded",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositFrom",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 264,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  11,
                  0,
                  0
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 265,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "Approval"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 266,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetMetadata"
              ],
              "params": [
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "BoundedString",
                  "type": 267
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "name",
                      "type": 267,
                      "typeName": "BoundedString",
                      "docs": [

                      ]
                    },
                    {
                      "name": "symbol",
                      "type": 267,
                      "typeName": "BoundedString",
                      "docs": [

                      ]
                    },
                    {
                      "name": "decimals",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "is_frozen",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 267,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 268,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "admin",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "force_create",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_sufficient",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_balance",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_create`]."
                      ]
                    },
                    {
                      "name": "start_destroy",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::start_destroy`]."
                      ]
                    },
                    {
                      "name": "destroy_accounts",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::destroy_accounts`]."
                      ]
                    },
                    {
                      "name": "destroy_approvals",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::destroy_approvals`]."
                      ]
                    },
                    {
                      "name": "finish_destroy",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::finish_destroy`]."
                      ]
                    },
                    {
                      "name": "mint",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::mint`]."
                      ]
                    },
                    {
                      "name": "burn",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::burn`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "freeze",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::freeze`]."
                      ]
                    },
                    {
                      "name": "thaw",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::thaw`]."
                      ]
                    },
                    {
                      "name": "freeze_asset",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::freeze_asset`]."
                      ]
                    },
                    {
                      "name": "thaw_asset",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::thaw_asset`]."
                      ]
                    },
                    {
                      "name": "transfer_ownership",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::transfer_ownership`]."
                      ]
                    },
                    {
                      "name": "set_team",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "admin",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "freezer",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::set_team`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "symbol",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    },
                    {
                      "name": "clear_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::clear_metadata`]."
                      ]
                    },
                    {
                      "name": "force_set_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "symbol",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_frozen",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::force_set_metadata`]."
                      ]
                    },
                    {
                      "name": "force_clear_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::force_clear_metadata`]."
                      ]
                    },
                    {
                      "name": "force_asset_status",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "admin",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "freezer",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_balance",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_sufficient",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_frozen",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::force_asset_status`]."
                      ]
                    },
                    {
                      "name": "approve_transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::approve_transfer`]."
                      ]
                    },
                    {
                      "name": "cancel_approval",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::cancel_approval`]."
                      ]
                    },
                    {
                      "name": "force_cancel_approval",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::force_cancel_approval`]."
                      ]
                    },
                    {
                      "name": "transfer_approved",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "destination",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::transfer_approved`]."
                      ]
                    },
                    {
                      "name": "touch",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "See [`Pallet::touch`]."
                      ]
                    },
                    {
                      "name": "refund",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "allow_burn",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::refund`]."
                      ]
                    },
                    {
                      "name": "set_min_balance",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "See [`Pallet::set_min_balance`]."
                      ]
                    },
                    {
                      "name": "touch_other",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "See [`Pallet::touch_other`]."
                      ]
                    },
                    {
                      "name": "refund_other",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "See [`Pallet::refund_other`]."
                      ]
                    },
                    {
                      "name": "block",
                      "fields": [
                        {
                          "name": "id",
                          "type": 10,
                          "typeName": "T::AssetIdParameter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "See [`Pallet::block`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 269,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BalanceLow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Account balance must be greater than or equal to the transfer amount."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The account to alter does not exist."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The signing account has no permission to do the operation."
                      ]
                    },
                    {
                      "name": "Unknown",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The given asset ID is unknown."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The origin account is frozen."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The asset ID is already taken."
                      ]
                    },
                    {
                      "name": "BadWitness",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Invalid witness data given."
                      ]
                    },
                    {
                      "name": "MinBalanceZero",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Minimum balance should be non-zero."
                      ]
                    },
                    {
                      "name": "UnavailableConsumer",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Unable to increment the consumer reference counters on the account. Either no provider",
                        "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                        "fewer then the maximum number of consumers has been reached."
                      ]
                    },
                    {
                      "name": "BadMetadata",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "Invalid metadata given."
                      ]
                    },
                    {
                      "name": "Unapproved",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "No approval exists that would allow the transfer."
                      ]
                    },
                    {
                      "name": "WouldDie",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "The source account would not survive the transfer and it needs to stay alive."
                      ]
                    },
                    {
                      "name": "AlreadyExists",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "The asset-account already exists."
                      ]
                    },
                    {
                      "name": "NoDeposit",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [
                        "The asset-account doesn't have an associated deposit."
                      ]
                    },
                    {
                      "name": "WouldBurn",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [
                        "The operation would result in funds being burned."
                      ]
                    },
                    {
                      "name": "LiveAsset",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [
                        "The asset is a live asset and is actively being used. Usually emit for operations such",
                        "as `start_destroy` which require the asset to be in a destroying state."
                      ]
                    },
                    {
                      "name": "AssetNotLive",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [
                        "The asset is not live, and likely being destroyed."
                      ]
                    },
                    {
                      "name": "IncorrectStatus",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [
                        "The asset status is not the expected status."
                      ]
                    },
                    {
                      "name": "NotFrozen",
                      "fields": [

                      ],
                      "index": 18,
                      "docs": [
                        "The asset should be frozen before the given operation."
                      ]
                    },
                    {
                      "name": "CallbackFailed",
                      "fields": [

                      ],
                      "index": 19,
                      "docs": [
                        "Callback action resulted in error"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 270,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 271
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 272,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 271,
            "type": {
              "path": [
                "pallet_vesting",
                "vesting_info",
                "VestingInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "locked",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "per_block",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "starting_block",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 272,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 271
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 273,
            "type": {
              "path": [
                "pallet_vesting",
                "Releases"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V1",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 274,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vest",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vest`]."
                      ]
                    },
                    {
                      "name": "vest_other",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::vest_other`]."
                      ]
                    },
                    {
                      "name": "vested_transfer",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "schedule",
                          "type": 271,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vested_transfer`]."
                      ]
                    },
                    {
                      "name": "force_vested_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "schedule",
                          "type": 271,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_vested_transfer`]."
                      ]
                    },
                    {
                      "name": "merge_schedules",
                      "fields": [
                        {
                          "name": "schedule1_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "schedule2_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::merge_schedules`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 275,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotVesting",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The account given is not vesting."
                      ]
                    },
                    {
                      "name": "AtMaxVestingSchedules",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The account already has `MaxVestingSchedules` count of schedules and thus",
                        "cannot add another one. Consider merging existing schedules in order to add another."
                      ]
                    },
                    {
                      "name": "AmountLow",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Amount being transferred is too low to create a vesting schedule."
                      ]
                    },
                    {
                      "name": "ScheduleIndexOutOfBounds",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "An index was out of bounds of the vesting schedules."
                      ]
                    },
                    {
                      "name": "InvalidScheduleParams",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Failed to create a new schedule because some parameter was invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the vesting pallet."
              ]
            }
          },
          {
            "id": 276,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 277
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 278,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 277,
            "type": {
              "path": [
                "darwinia_deposit",
                "Deposit"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 40,
                      "typeName": "DepositId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "start_time",
                      "type": 6,
                      "typeName": "Moment",
                      "docs": [

                      ]
                    },
                    {
                      "name": "expired_time",
                      "type": 6,
                      "typeName": "Moment",
                      "docs": [

                      ]
                    },
                    {
                      "name": "in_use",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 278,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 277
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 279,
            "type": {
              "path": [
                "darwinia_deposit",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "lock",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "months",
                          "type": 2,
                          "typeName": "u8",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::lock`]."
                      ]
                    },
                    {
                      "name": "claim",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::claim`]."
                      ]
                    },
                    {
                      "name": "claim_with_penalty",
                      "fields": [
                        {
                          "name": "id",
                          "type": 40,
                          "typeName": "DepositId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::claim_with_penalty`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 280,
            "type": {
              "path": [
                "darwinia_deposit",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LockAtLeastSome",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Lock at least for a specific amount."
                      ]
                    },
                    {
                      "name": "LockAtLeastOneMonth",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Lock at least for one month."
                      ]
                    },
                    {
                      "name": "LockAtMostThirtySixMonths",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Lock at most for thirty-six months."
                      ]
                    },
                    {
                      "name": "ExceedMaxDeposits",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Exceed maximum deposit count."
                      ]
                    },
                    {
                      "name": "DepositNotFound",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Deposit not found."
                      ]
                    },
                    {
                      "name": "DepositInUse",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Deposit is in use."
                      ]
                    },
                    {
                      "name": "DepositNotInUse",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Deposit is not in use."
                      ]
                    },
                    {
                      "name": "DepositAlreadyExpired",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Deposit is already expired."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 281,
            "type": {
              "path": [
                "darwinia_account_migration",
                "AssetAccount"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "is_frozen",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    },
                    {
                      "name": "reason",
                      "type": 282,
                      "typeName": "ExistenceReason",
                      "docs": [

                      ]
                    },
                    {
                      "name": "extra",
                      "type": 67,
                      "typeName": "()",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 282,
            "type": {
              "path": [
                "darwinia_account_migration",
                "ExistenceReason"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Consumer",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Sufficient",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositHeld",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositRefunded",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 283,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Registration"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "MaxJudgements",
                  "type": null
                },
                {
                  "name": "MaxAdditionalFields",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "judgements",
                      "type": 284,
                      "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "info",
                      "type": 288,
                      "typeName": "IdentityInfo<MaxAdditionalFields>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 284,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 285
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 287,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 285,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  286
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 286,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Judgement"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unknown",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FeePaid",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Reasonable",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "KnownGood",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "OutOfDate",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LowQuality",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Erroneous",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 287,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 285
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 288,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "IdentityInfo"
              ],
              "params": [
                {
                  "name": "FieldLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "additional",
                      "type": 289,
                      "typeName": "BoundedVec<(Data, Data), FieldLimit>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "display",
                      "type": 291,
                      "typeName": "Data",
                      "docs": [

                      ]
                    },
                    {
                      "name": "legal",
                      "type": 291,
                      "typeName": "Data",
                      "docs": [

                      ]
                    },
                    {
                      "name": "web",
                      "type": 291,
                      "typeName": "Data",
                      "docs": [

                      ]
                    },
                    {
                      "name": "riot",
                      "type": 291,
                      "typeName": "Data",
                      "docs": [

                      ]
                    },
                    {
                      "name": "email",
                      "type": 291,
                      "typeName": "Data",
                      "docs": [

                      ]
                    },
                    {
                      "name": "pgp_fingerprint",
                      "type": 321,
                      "typeName": "Option<[u8; 20]>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "image",
                      "type": 291,
                      "typeName": "Data",
                      "docs": [

                      ]
                    },
                    {
                      "name": "twitter",
                      "type": 291,
                      "typeName": "Data",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 289,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 290
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 320,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 290,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  291,
                  291
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 291,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Data"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw0",
                      "fields": [
                        {
                          "name": null,
                          "type": 292,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw1",
                      "fields": [
                        {
                          "name": null,
                          "type": 293,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw2",
                      "fields": [
                        {
                          "name": null,
                          "type": 294,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw3",
                      "fields": [
                        {
                          "name": null,
                          "type": 295,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw4",
                      "fields": [
                        {
                          "name": null,
                          "type": 18,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw5",
                      "fields": [
                        {
                          "name": null,
                          "type": 296,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw6",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw7",
                      "fields": [
                        {
                          "name": null,
                          "type": 298,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw8",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw9",
                      "fields": [
                        {
                          "name": null,
                          "type": 299,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw10",
                      "fields": [
                        {
                          "name": null,
                          "type": 300,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw11",
                      "fields": [
                        {
                          "name": null,
                          "type": 301,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw12",
                      "fields": [
                        {
                          "name": null,
                          "type": 302,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw13",
                      "fields": [
                        {
                          "name": null,
                          "type": 303,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw14",
                      "fields": [
                        {
                          "name": null,
                          "type": 304,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw15",
                      "fields": [
                        {
                          "name": null,
                          "type": 305,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw16",
                      "fields": [
                        {
                          "name": null,
                          "type": 105,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw17",
                      "fields": [
                        {
                          "name": null,
                          "type": 306,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw18",
                      "fields": [
                        {
                          "name": null,
                          "type": 307,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw19",
                      "fields": [
                        {
                          "name": null,
                          "type": 308,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw20",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw21",
                      "fields": [
                        {
                          "name": null,
                          "type": 309,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw22",
                      "fields": [
                        {
                          "name": null,
                          "type": 310,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw23",
                      "fields": [
                        {
                          "name": null,
                          "type": 311,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw24",
                      "fields": [
                        {
                          "name": null,
                          "type": 312,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw25",
                      "fields": [
                        {
                          "name": null,
                          "type": 313,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw26",
                      "fields": [
                        {
                          "name": null,
                          "type": 314,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw27",
                      "fields": [
                        {
                          "name": null,
                          "type": 315,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw28",
                      "fields": [
                        {
                          "name": null,
                          "type": 316,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw29",
                      "fields": [
                        {
                          "name": null,
                          "type": 317,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw30",
                      "fields": [
                        {
                          "name": null,
                          "type": 318,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 31,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw31",
                      "fields": [
                        {
                          "name": null,
                          "type": 319,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Raw32",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BlakeTwo256",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Sha256",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Keccak256",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ShaThree256",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 37,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 292,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 0,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 293,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 1,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 294,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 2,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 295,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 3,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 296,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 5,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 297,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 6,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 298,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 7,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 299,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 9,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 300,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 10,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 301,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 11,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 302,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 12,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 303,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 13,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 304,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 14,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 305,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 15,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 306,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 17,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 307,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 18,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 308,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 19,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 309,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 21,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 310,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 22,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 311,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 23,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 312,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 24,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 313,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 25,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 314,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 26,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 315,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 27,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 316,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 28,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 317,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 29,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 318,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 30,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 319,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 31,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 320,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 290
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 321,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 322,
            "type": {
              "path": [
                "darwinia_staking",
                "Ledger"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "staked_ring",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "staked_kton",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "staked_deposits",
                      "type": 323,
                      "typeName": "BoundedVec<DepositId<T>,<T as Config>::MaxDeposits>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "unstaking_ring",
                      "type": 324,
                      "typeName": "BoundedVec<(Balance, BlockNumberFor<T>), T::MaxUnstakings>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "unstaking_kton",
                      "type": 324,
                      "typeName": "BoundedVec<(Balance, BlockNumberFor<T>), T::MaxUnstakings>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "unstaking_deposits",
                      "type": 327,
                      "typeName": "BoundedVec<(DepositId<T>, BlockNumberFor<T>), T::MaxUnstakings>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 323,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 40
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 49,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 324,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 325
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 326,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 325,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  6,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 326,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 325
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 327,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 328
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 329,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 328,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  40,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 329,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 328
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 330,
            "type": {
              "path": [
                "darwinia_account_migration",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "migrate",
                      "fields": [
                        {
                          "name": "from",
                          "type": 42,
                          "typeName": "AccountId32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "AccountId20",
                          "docs": [

                          ]
                        },
                        {
                          "name": "signature",
                          "type": 331,
                          "typeName": "Signature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::migrate`]."
                      ]
                    },
                    {
                      "name": "migrate_multisig",
                      "fields": [
                        {
                          "name": "submitter",
                          "type": 42,
                          "typeName": "AccountId32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "others",
                          "type": 332,
                          "typeName": "Vec<AccountId32>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "threshold",
                          "type": 40,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "AccountId20",
                          "docs": [

                          ]
                        },
                        {
                          "name": "signature",
                          "type": 331,
                          "typeName": "Signature",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_multisig_params",
                          "type": 333,
                          "typeName": "Option<MultisigParams>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::migrate_multisig`]."
                      ]
                    },
                    {
                      "name": "complete_multisig_migration",
                      "fields": [
                        {
                          "name": "multisig",
                          "type": 42,
                          "typeName": "AccountId32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "submitter",
                          "type": 42,
                          "typeName": "AccountId32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "signature",
                          "type": 331,
                          "typeName": "Signature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::complete_multisig_migration`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 331,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 64,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 332,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 42
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 333,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 43
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 43,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 334,
            "type": {
              "path": [
                "darwinia_account_migration",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExceedMaxVestings",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Exceed maximum vesting count."
                      ]
                    },
                    {
                      "name": "ExceedMaxDeposits",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Exceed maximum deposit count."
                      ]
                    },
                    {
                      "name": "AccountAlreadyExisted",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The migration destination was already taken by someone."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 335,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  336,
                  336,
                  336
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 336,
            "type": {
              "path": [
                "darwinia_staking",
                "ExposureCacheState"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Previous",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Current",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Next",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 337,
            "type": {
              "path": [
                "darwinia_staking",
                "Exposure"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "commission",
                      "type": 50,
                      "typeName": "Perbill",
                      "docs": [

                      ]
                    },
                    {
                      "name": "vote",
                      "type": 4,
                      "typeName": "Vote",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nominators",
                      "type": 338,
                      "typeName": "Vec<IndividualExposure<AccountId>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 338,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 339
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 339,
            "type": {
              "path": [
                "darwinia_staking",
                "IndividualExposure"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "vote",
                      "type": 4,
                      "typeName": "Vote",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 340,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  341
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 341,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 342,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 342,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 343
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 343,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  0,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 344,
            "type": {
              "path": [
                "darwinia_staking",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "stake",
                      "fields": [
                        {
                          "name": "ring_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "kton_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposits",
                          "type": 49,
                          "typeName": "Vec<DepositId<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::stake`]."
                      ]
                    },
                    {
                      "name": "unstake",
                      "fields": [
                        {
                          "name": "ring_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "kton_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposits",
                          "type": 49,
                          "typeName": "Vec<DepositId<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unstake`]."
                      ]
                    },
                    {
                      "name": "restake",
                      "fields": [
                        {
                          "name": "ring_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "kton_amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "deposits",
                          "type": 49,
                          "typeName": "Vec<DepositId<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::restake`]."
                      ]
                    },
                    {
                      "name": "claim",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::claim`]."
                      ]
                    },
                    {
                      "name": "collect",
                      "fields": [
                        {
                          "name": "commission",
                          "type": 50,
                          "typeName": "Perbill",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::collect`]."
                      ]
                    },
                    {
                      "name": "nominate",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::nominate`]."
                      ]
                    },
                    {
                      "name": "chill",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::chill`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "set_collator_count",
                      "fields": [
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_collator_count`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 345,
            "type": {
              "path": [
                "darwinia_staking",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExceedMaxDeposits",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Exceed maximum deposit count."
                      ]
                    },
                    {
                      "name": "ExceedMaxUnstakings",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Exceed maximum unstaking/unbonding count."
                      ]
                    },
                    {
                      "name": "DepositNotFound",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Deposit not found."
                      ]
                    },
                    {
                      "name": "NotStaker",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "You are not a staker."
                      ]
                    },
                    {
                      "name": "TargetNotCollator",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Target is not a collator."
                      ]
                    },
                    {
                      "name": "ZeroCollatorCount",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Collator count mustn't be zero."
                      ]
                    },
                    {
                      "name": "NoReward",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "No reward to pay for this collator."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 346,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 347
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 347,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  0,
                  348
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 348,
            "type": {
              "path": [
                "darwinia_runtime",
                "pallets",
                "session",
                "SessionKeys"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "aura",
                      "type": 349,
                      "typeName": "<Aura as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 349,
            "type": {
              "path": [
                "sp_consensus_aura",
                "sr25519",
                "app_sr25519",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 350,
                      "typeName": "sr25519::Public",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 350,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "[u8; 32]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 351,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 4
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 352,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  353,
                  14
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 353,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 18,
                      "typeName": "[u8; 4]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 354,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 348,
                          "typeName": "T::Keys",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proof",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::purge_keys`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 355,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 356,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 349
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 357,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 357,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 349
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 358,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 359,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  358,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 360,
            "type": {
              "path": [
                "darwinia_message_gadget",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_commitment_contract",
                      "fields": [
                        {
                          "name": "commitment_contract",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_commitment_contract`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 361,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 44,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 362,
            "type": {
              "path": [
                "darwinia_ecdsa_authority",
                "primitives",
                "AuthoritiesChangeSigned"
              ],
              "params": [
                {
                  "name": "MaxAuthorities",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "operation",
                      "type": 53,
                      "typeName": "Operation<AccountId>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "threshold",
                      "type": 54,
                      "typeName": "Option<u32>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "signatures",
                      "type": 363,
                      "typeName": "BoundedVec<(AccountId, Signature), MaxAuthorities>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 363,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 56
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 55,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 364,
            "type": {
              "path": [
                "darwinia_ecdsa_authority",
                "primitives",
                "MessageRootSigned"
              ],
              "params": [
                {
                  "name": "Bn",
                  "type": 4
                },
                {
                  "name": "MaxAuthorities",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "commitment",
                      "type": 59,
                      "typeName": "Commitment<Bn>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "signatures",
                      "type": 363,
                      "typeName": "BoundedVec<(AccountId, Signature), MaxAuthorities>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "authorized",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 365,
            "type": {
              "path": [
                "darwinia_ecdsa_authority",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_authority",
                      "fields": [
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_authority`]."
                      ]
                    },
                    {
                      "name": "remove_authority",
                      "fields": [
                        {
                          "name": "old",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_authority`]."
                      ]
                    },
                    {
                      "name": "swap_authority",
                      "fields": [
                        {
                          "name": "old",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::swap_authority`]."
                      ]
                    },
                    {
                      "name": "submit_authorities_change_signature",
                      "fields": [
                        {
                          "name": "signature",
                          "type": 57,
                          "typeName": "Signature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::submit_authorities_change_signature`]."
                      ]
                    },
                    {
                      "name": "submit_new_message_root_signature",
                      "fields": [
                        {
                          "name": "signature",
                          "type": 57,
                          "typeName": "Signature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::submit_new_message_root_signature`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 366,
            "type": {
              "path": [
                "darwinia_ecdsa_authority",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AuthorityExisted",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The authority is already existed."
                      ]
                    },
                    {
                      "name": "TooManyAuthorities",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Too many authorities."
                      ]
                    },
                    {
                      "name": "NotAuthority",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "This is not an authority."
                      ]
                    },
                    {
                      "name": "AtLeastOneAuthority",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Require at least one authority. Not allow to decrease below one."
                      ]
                    },
                    {
                      "name": "OnAuthoritiesChange",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Currently, the authorities is changing."
                      ]
                    },
                    {
                      "name": "NoAuthoritiesChange",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Didn't find any authorities changes to sign."
                      ]
                    },
                    {
                      "name": "NoNewMessageRoot",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Didn't find any new message root to sign."
                      ]
                    },
                    {
                      "name": "BadSignature",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Failed to verify the signature."
                      ]
                    },
                    {
                      "name": "AlreadySubmitted",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "This authority had already finished his duty."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 367,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 368
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 492,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 368,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  369,
                  0
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 369,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "preimages",
                "Bounded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 370
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Inline",
                      "fields": [
                        {
                          "name": null,
                          "type": 491,
                          "typeName": "BoundedInline",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Lookup",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 370,
            "type": {
              "path": [
                "darwinia_runtime",
                "RuntimeCall"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 185,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ParachainSystem",
                      "fields": [
                        {
                          "name": null,
                          "type": 232,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "name": null,
                          "type": 242,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ParachainInfo",
                      "fields": [
                        {
                          "name": null,
                          "type": 243,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainInfo, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 254,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 268,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Assets, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 274,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": null,
                          "type": 279,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Deposit, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AccountMigration",
                      "fields": [
                        {
                          "name": null,
                          "type": 330,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AccountMigration, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DarwiniaStaking",
                      "fields": [
                        {
                          "name": null,
                          "type": 344,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DarwiniaStaking, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 354,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageGadget",
                      "fields": [
                        {
                          "name": null,
                          "type": 360,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageGadget, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EcdsaAuthority",
                      "fields": [
                        {
                          "name": null,
                          "type": 365,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EcdsaAuthority, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Democracy",
                      "fields": [
                        {
                          "name": null,
                          "type": 371,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "name": null,
                          "type": 373,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "name": null,
                          "type": 375,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PhragmenElection",
                      "fields": [
                        {
                          "name": null,
                          "type": 376,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PhragmenElection, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TechnicalMembership",
                      "fields": [
                        {
                          "name": null,
                          "type": 378,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalMembership, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "name": null,
                          "type": 379,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 380,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "name": null,
                          "type": 392,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "name": null,
                          "type": 397,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 399,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 400,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "XcmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 402,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmpQueue, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 403,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 424,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CumulusXcm, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EthereumXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 425,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EthereumXcm, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 44,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DmpQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 439,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetManager",
                      "fields": [
                        {
                          "name": null,
                          "type": 440,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetManager, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 45,
                      "docs": [

                      ]
                    },
                    {
                      "name": "XTokens",
                      "fields": [
                        {
                          "name": null,
                          "type": 441,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XTokens, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 46,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetLimit",
                      "fields": [
                        {
                          "name": null,
                          "type": 446,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetLimit, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 47,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "name": null,
                          "type": 447,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Ethereum, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EVM",
                      "fields": [
                        {
                          "name": null,
                          "type": 456,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<EVM, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 37,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageTransact",
                      "fields": [
                        {
                          "name": null,
                          "type": 457,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageTransact, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 38,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgeKusamaGrandpa",
                      "fields": [
                        {
                          "name": null,
                          "type": 458,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BridgeKusamaGrandpa, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 39,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgeKusamaParachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 474,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BridgeKusamaParachain, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 40,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgeCrabMessages",
                      "fields": [
                        {
                          "name": null,
                          "type": 479,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BridgeCrabMessages, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 41,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BridgeCrabDispatch",
                      "fields": [
                        {
                          "name": null,
                          "type": 489,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<BridgeCrabDispatch, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 42,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CrabFeeMarket",
                      "fields": [
                        {
                          "name": null,
                          "type": 490,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CrabFeeMarket, Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 43,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 371,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 369,
                          "typeName": "BoundedCallOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 92,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "second",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 89,
                          "typeName": "PropIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::second`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 89,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "vote",
                          "type": 62,
                          "typeName": "AccountVote<BalanceOf<T>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "emergency_cancel",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::emergency_cancel`]."
                      ]
                    },
                    {
                      "name": "external_propose",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 369,
                          "typeName": "BoundedCallOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::external_propose`]."
                      ]
                    },
                    {
                      "name": "external_propose_majority",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 369,
                          "typeName": "BoundedCallOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::external_propose_majority`]."
                      ]
                    },
                    {
                      "name": "external_propose_default",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 369,
                          "typeName": "BoundedCallOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::external_propose_default`]."
                      ]
                    },
                    {
                      "name": "fast_track",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "voting_period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::fast_track`]."
                      ]
                    },
                    {
                      "name": "veto_external",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::veto_external`]."
                      ]
                    },
                    {
                      "name": "cancel_referendum",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 89,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::cancel_referendum`]."
                      ]
                    },
                    {
                      "name": "delegate",
                      "fields": [
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "conviction",
                          "type": 372,
                          "typeName": "Conviction",
                          "docs": [

                          ]
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::delegate`]."
                      ]
                    },
                    {
                      "name": "undelegate",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::undelegate`]."
                      ]
                    },
                    {
                      "name": "clear_public_proposals",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::clear_public_proposals`]."
                      ]
                    },
                    {
                      "name": "unlock",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::unlock`]."
                      ]
                    },
                    {
                      "name": "remove_vote",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::remove_vote`]."
                      ]
                    },
                    {
                      "name": "remove_other_vote",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::remove_other_vote`]."
                      ]
                    },
                    {
                      "name": "blacklist",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_ref_index",
                          "type": 54,
                          "typeName": "Option<ReferendumIndex>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::blacklist`]."
                      ]
                    },
                    {
                      "name": "cancel_proposal",
                      "fields": [
                        {
                          "name": "prop_index",
                          "type": 89,
                          "typeName": "PropIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::cancel_proposal`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 64,
                          "typeName": "MetadataOwner",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_hash",
                          "type": 208,
                          "typeName": "Option<PreimageHash>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 372,
            "type": {
              "path": [
                "pallet_democracy",
                "conviction",
                "Conviction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Locked1x",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Locked2x",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Locked3x",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Locked4x",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Locked5x",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Locked6x",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 373,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_members",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 44,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "prime",
                          "type": 374,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "old_count",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_members`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 370,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "length_bound",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 89,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 370,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "length_bound",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "approve",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "disapprove_proposal",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::disapprove_proposal`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "length_bound",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 374,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 375,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_members",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 44,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "prime",
                          "type": 374,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "old_count",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_members`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 370,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "length_bound",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 89,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 370,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "length_bound",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "approve",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "disapprove_proposal",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::disapprove_proposal`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "length_bound",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 376,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "votes",
                          "type": 44,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 92,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "remove_voter",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_voter`]."
                      ]
                    },
                    {
                      "name": "submit_candidacy",
                      "fields": [
                        {
                          "name": "candidate_count",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::submit_candidacy`]."
                      ]
                    },
                    {
                      "name": "renounce_candidacy",
                      "fields": [
                        {
                          "name": "renouncing",
                          "type": 377,
                          "typeName": "Renouncing",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::renounce_candidacy`]."
                      ]
                    },
                    {
                      "name": "remove_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "slash_bond",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "rerun_election",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_member`]."
                      ]
                    },
                    {
                      "name": "clean_defunct_voters",
                      "fields": [
                        {
                          "name": "num_voters",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "num_defunct",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::clean_defunct_voters`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 377,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "Renouncing"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Member",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RunnerUp",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Candidate",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 378,
            "type": {
              "path": [
                "pallet_membership",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_member`]."
                      ]
                    },
                    {
                      "name": "remove_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_member`]."
                      ]
                    },
                    {
                      "name": "swap_member",
                      "fields": [
                        {
                          "name": "remove",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "add",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::swap_member`]."
                      ]
                    },
                    {
                      "name": "reset_members",
                      "fields": [
                        {
                          "name": "members",
                          "type": 44,
                          "typeName": "Vec<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::reset_members`]."
                      ]
                    },
                    {
                      "name": "change_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::change_key`]."
                      ]
                    },
                    {
                      "name": "set_prime",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_prime`]."
                      ]
                    },
                    {
                      "name": "clear_prime",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::clear_prime`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 379,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_spend",
                      "fields": [
                        {
                          "name": "value",
                          "type": 92,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_spend`]."
                      ]
                    },
                    {
                      "name": "reject_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 89,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::reject_proposal`]."
                      ]
                    },
                    {
                      "name": "approve_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 89,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_proposal`]."
                      ]
                    },
                    {
                      "name": "spend",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 92,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::spend`]."
                      ]
                    },
                    {
                      "name": "remove_approval",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 89,
                          "typeName": "ProposalIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_approval`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 380,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 381,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::batch`]."
                      ]
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 40,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_derivative`]."
                      ]
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 381,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::batch_all`]."
                      ]
                    },
                    {
                      "name": "dispatch_as",
                      "fields": [
                        {
                          "name": "as_origin",
                          "type": 382,
                          "typeName": "Box<T::PalletsOrigin>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_as`]."
                      ]
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 381,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_batch`]."
                      ]
                    },
                    {
                      "name": "with_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::with_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 381,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 370
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 382,
            "type": {
              "path": [
                "darwinia_runtime",
                "OriginCaller"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "system",
                      "fields": [
                        {
                          "name": null,
                          "type": 383,
                          "typeName": "frame_system::Origin<Runtime>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "name": null,
                          "type": 384,
                          "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "name": null,
                          "type": 385,
                          "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PolkadotXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 386,
                          "typeName": "pallet_xcm::Origin",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "CumulusXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 387,
                          "typeName": "cumulus_pallet_xcm::Origin",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EthereumXcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 388,
                          "typeName": "pallet_ethereum_xcm::Origin",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 44,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ethereum",
                      "fields": [
                        {
                          "name": null,
                          "type": 389,
                          "typeName": "pallet_ethereum::Origin",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageTransact",
                      "fields": [
                        {
                          "name": null,
                          "type": 390,
                          "typeName": "darwinia_message_transact::Origin",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 38,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Void",
                      "fields": [
                        {
                          "name": null,
                          "type": 391,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 383,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 384,
            "type": {
              "path": [
                "pallet_collective",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Member",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "_Phantom",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 385,
            "type": {
              "path": [
                "pallet_collective",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Member",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "_Phantom",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 386,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Origin"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Xcm",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Response",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 387,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Origin"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Relay",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SiblingParachain",
                      "fields": [
                        {
                          "name": null,
                          "type": 83,
                          "typeName": "ParaId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 388,
            "type": {
              "path": [
                "pallet_ethereum_xcm",
                "RawOrigin"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "XcmEthereumTransaction",
                      "fields": [
                        {
                          "name": null,
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 389,
            "type": {
              "path": [
                "pallet_ethereum",
                "RawOrigin"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EthereumTransaction",
                      "fields": [
                        {
                          "name": null,
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 390,
            "type": {
              "path": [
                "darwinia_message_transact",
                "LcmpEthOrigin"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MessageTransact",
                      "fields": [
                        {
                          "name": null,
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 391,
            "type": {
              "path": [
                "sp_core",
                "Void"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 392,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_registrar",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_registrar`]."
                      ]
                    },
                    {
                      "name": "set_identity",
                      "fields": [
                        {
                          "name": "info",
                          "type": 288,
                          "typeName": "Box<IdentityInfo<T::MaxAdditionalFields>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_identity`]."
                      ]
                    },
                    {
                      "name": "set_subs",
                      "fields": [
                        {
                          "name": "subs",
                          "type": 393,
                          "typeName": "Vec<(T::AccountId, Data)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_subs`]."
                      ]
                    },
                    {
                      "name": "clear_identity",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::clear_identity`]."
                      ]
                    },
                    {
                      "name": "request_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 89,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_fee",
                          "type": 92,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::request_judgement`]."
                      ]
                    },
                    {
                      "name": "cancel_request",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::cancel_request`]."
                      ]
                    },
                    {
                      "name": "set_fee",
                      "fields": [
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee",
                          "type": 92,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_fee`]."
                      ]
                    },
                    {
                      "name": "set_account_id",
                      "fields": [
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_account_id`]."
                      ]
                    },
                    {
                      "name": "set_fields",
                      "fields": [
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fields",
                          "type": 395,
                          "typeName": "IdentityFields",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_fields`]."
                      ]
                    },
                    {
                      "name": "provide_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 89,
                          "typeName": "RegistrarIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "judgement",
                          "type": 286,
                          "typeName": "Judgement<BalanceOf<T>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "identity",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::provide_judgement`]."
                      ]
                    },
                    {
                      "name": "kill_identity",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::kill_identity`]."
                      ]
                    },
                    {
                      "name": "add_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "data",
                          "type": 291,
                          "typeName": "Data",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::add_sub`]."
                      ]
                    },
                    {
                      "name": "rename_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "data",
                          "type": 291,
                          "typeName": "Data",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::rename_sub`]."
                      ]
                    },
                    {
                      "name": "remove_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::remove_sub`]."
                      ]
                    },
                    {
                      "name": "quit_sub",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::quit_sub`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Identity pallet declaration."
              ]
            }
          },
          {
            "id": 393,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 394
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 394,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  0,
                  291
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 395,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "BitFlags"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 396
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "IdentityField",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 396,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "IdentityField"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Display",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Legal",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Web",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Riot",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Email",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PgpFingerprint",
                      "fields": [

                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Image",
                      "fields": [

                      ],
                      "index": 64,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Twitter",
                      "fields": [

                      ],
                      "index": 128,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 397,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "schedule",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 398,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::schedule`]."
                      ]
                    },
                    {
                      "name": "cancel",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::cancel`]."
                      ]
                    },
                    {
                      "name": "schedule_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 13,
                          "typeName": "TaskName",
                          "docs": [

                          ]
                        },
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 398,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::schedule_named`]."
                      ]
                    },
                    {
                      "name": "cancel_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 13,
                          "typeName": "TaskName",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_named`]."
                      ]
                    },
                    {
                      "name": "schedule_after",
                      "fields": [
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 398,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::schedule_after`]."
                      ]
                    },
                    {
                      "name": "schedule_named_after",
                      "fields": [
                        {
                          "name": "id",
                          "type": 13,
                          "typeName": "TaskName",
                          "docs": [

                          ]
                        },
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 398,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::schedule_named_after`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 398,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 77
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 77,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 399,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "note_preimage",
                      "fields": [
                        {
                          "name": "bytes",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::note_preimage`]."
                      ]
                    },
                    {
                      "name": "unnote_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unnote_preimage`]."
                      ]
                    },
                    {
                      "name": "request_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::request_preimage`]."
                      ]
                    },
                    {
                      "name": "unrequest_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unrequest_preimage`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 400,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "proxy",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 401,
                          "typeName": "Option<T::ProxyType>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::proxy`]."
                      ]
                    },
                    {
                      "name": "add_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 80,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::add_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 80,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxies",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::remove_proxies`]."
                      ]
                    },
                    {
                      "name": "create_pure",
                      "fields": [
                        {
                          "name": "proxy_type",
                          "type": 80,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 40,
                          "typeName": "u16",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::create_pure`]."
                      ]
                    },
                    {
                      "name": "kill_pure",
                      "fields": [
                        {
                          "name": "spawner",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proxy_type",
                          "type": 80,
                          "typeName": "T::ProxyType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "index",
                          "type": 40,
                          "typeName": "u16",
                          "docs": [

                          ]
                        },
                        {
                          "name": "height",
                          "type": 89,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ext_index",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_pure`]."
                      ]
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::announce`]."
                      ]
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_announcement`]."
                      ]
                    },
                    {
                      "name": "reject_announcement",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::reject_announcement`]."
                      ]
                    },
                    {
                      "name": "proxy_announced",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 401,
                          "typeName": "Option<T::ProxyType>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 370,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::proxy_announced`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 401,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 80
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 80,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 402,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "service_overweight",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::service_overweight`]."
                      ]
                    },
                    {
                      "name": "suspend_xcm_execution",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::suspend_xcm_execution`]."
                      ]
                    },
                    {
                      "name": "resume_xcm_execution",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::resume_xcm_execution`]."
                      ]
                    },
                    {
                      "name": "update_suspend_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::update_suspend_threshold`]."
                      ]
                    },
                    {
                      "name": "update_drop_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::update_drop_threshold`]."
                      ]
                    },
                    {
                      "name": "update_resume_threshold",
                      "fields": [
                        {
                          "name": "new",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::update_resume_threshold`]."
                      ]
                    },
                    {
                      "name": "update_threshold_weight",
                      "fields": [
                        {
                          "name": "new",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::update_threshold_weight`]."
                      ]
                    },
                    {
                      "name": "update_weight_restrict_decay",
                      "fields": [
                        {
                          "name": "new",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::update_weight_restrict_decay`]."
                      ]
                    },
                    {
                      "name": "update_xcmp_max_individual_weight",
                      "fields": [
                        {
                          "name": "new",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::update_xcmp_max_individual_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 403,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "send",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "message",
                          "type": 404,
                          "typeName": "Box<VersionedXcm<()>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::send`]."
                      ]
                    },
                    {
                      "name": "teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 123,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::teleport_assets`]."
                      ]
                    },
                    {
                      "name": "reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 123,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "message",
                          "type": 416,
                          "typeName": "Box<VersionedXcm<<T as SysConfig>::RuntimeCall>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "force_xcm_version",
                      "fields": [
                        {
                          "name": "location",
                          "type": 86,
                          "typeName": "Box<MultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "version",
                          "type": 4,
                          "typeName": "XcmVersion",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_default_xcm_version",
                      "fields": [
                        {
                          "name": "maybe_xcm_version",
                          "type": 54,
                          "typeName": "Option<XcmVersion>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_default_xcm_version`]."
                      ]
                    },
                    {
                      "name": "force_subscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::force_subscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "force_unsubscribe_version_notify",
                      "fields": [
                        {
                          "name": "location",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::force_unsubscribe_version_notify`]."
                      ]
                    },
                    {
                      "name": "limited_reserve_transfer_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 123,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::limited_reserve_transfer_assets`]."
                      ]
                    },
                    {
                      "name": "limited_teleport_assets",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 123,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_asset_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::limited_teleport_assets`]."
                      ]
                    },
                    {
                      "name": "force_suspension",
                      "fields": [
                        {
                          "name": "suspended",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::force_suspension`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 404,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 405,
                          "typeName": "v2::Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 95,
                          "typeName": "v3::Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 405,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 406,
                      "typeName": "Vec<Instruction<RuntimeCall>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 406,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 407
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 407,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 408,
                          "typeName": "Response",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 116,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 117,
                          "typeName": "DoubleEncoded<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 129,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 126,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 415,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 405,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 405,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearError",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ticket",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 27,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 408,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Response"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Null",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExecutionResult",
                      "fields": [
                        {
                          "name": null,
                          "type": 409,
                          "typeName": "Option<(u32, Error)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Version",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "super::Version",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 409,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 410
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 410,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 410,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  411
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 411,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "traits",
                "Error"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Overflow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unimplemented",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UntrustedReserveLocation",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UntrustedTeleportLocation",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MultiLocationFull",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MultiLocationNotInvertible",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidLocation",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetNotFound",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToTransactAsset",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotWithdrawable",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LocationCannotHold",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExceedsMaxMessageSize",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DestinationUnsupported",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transport",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Unroutable",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnknownClaim",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToDecode",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MaxWeightInvalid",
                      "fields": [

                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotHoldingFees",
                      "fields": [

                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooExpensive",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnhandledXcmVersion",
                      "fields": [

                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "WeightLimitReached",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Barrier",
                      "fields": [

                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "WeightNotComputable",
                      "fields": [

                      ],
                      "index": 25,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 412,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "MultiAssetFilter"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Definite",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Wild",
                      "fields": [
                        {
                          "name": null,
                          "type": 413,
                          "typeName": "WildMultiAsset",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 413,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "WildMultiAsset"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "All",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AllOf",
                      "fields": [
                        {
                          "name": "id",
                          "type": 127,
                          "typeName": "AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fun",
                          "type": 414,
                          "typeName": "WildFungibility",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 414,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "multiasset",
                "WildFungibility"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fungible",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonFungible",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 415,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "WeightLimit"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unlimited",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Limited",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 416,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedXcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 417,
                          "typeName": "v2::Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 421,
                          "typeName": "v3::Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 417,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Xcm"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 418,
                      "typeName": "Vec<Instruction<RuntimeCall>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 418,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 419
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 419,
            "type": {
              "path": [
                "staging_xcm",
                "v2",
                "Instruction"
              ],
              "params": [
                {
                  "name": "RuntimeCall",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 408,
                          "typeName": "Response",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_type",
                          "type": 116,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 420,
                          "typeName": "DoubleEncoded<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 129,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_assets",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "receive",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 405,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryHolding",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 412,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 126,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 415,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 417,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 417,
                          "typeName": "Xcm<RuntimeCall>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearError",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 124,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ticket",
                          "type": 128,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 27,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 420,
            "type": {
              "path": [
                "staging_xcm",
                "double_encoded",
                "DoubleEncoded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "encoded",
                      "type": 14,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 421,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Xcm"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 422,
                      "typeName": "Vec<Instruction<Call>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 422,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 423
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 423,
            "type": {
              "path": [
                "staging_xcm",
                "v3",
                "Instruction"
              ],
              "params": [
                {
                  "name": "Call",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "WithdrawAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReserveAssetDeposited",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReceiveTeleportedAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryResponse",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response",
                          "type": 106,
                          "typeName": "Response",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "querier",
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TransferReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Transact",
                      "fields": [
                        {
                          "name": "origin_kind",
                          "type": 116,
                          "typeName": "OriginKind",
                          "docs": [

                          ]
                        },
                        {
                          "name": "require_weight_at_most",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        },
                        {
                          "name": "call",
                          "type": 420,
                          "typeName": "DoubleEncoded<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpNewChannelOpenRequest",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_message_size",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_capacity",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelAccepted",
                      "fields": [
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "HrmpChannelClosing",
                      "fields": [
                        {
                          "name": "initiator",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "sender",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "recipient",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearOrigin",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DescendOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 87,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportError",
                      "fields": [
                        {
                          "name": null,
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "DepositReserveAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExchangeAsset",
                      "fields": [
                        {
                          "name": "give",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "want",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maximal",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateReserveWithdraw",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "reserve",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InitiateTeleport",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportHolding",
                      "fields": [
                        {
                          "name": "response_info",
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        },
                        {
                          "name": "assets",
                          "type": 119,
                          "typeName": "MultiAssetFilter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BuyExecution",
                      "fields": [
                        {
                          "name": "fees",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RefundSurplus",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetErrorHandler",
                      "fields": [
                        {
                          "name": null,
                          "type": 421,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetAppendix",
                      "fields": [
                        {
                          "name": null,
                          "type": 421,
                          "typeName": "Xcm<Call>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearError",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClaimAsset",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        },
                        {
                          "name": "ticket",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Trap",
                      "fields": [
                        {
                          "name": null,
                          "type": 10,
                          "typeName": "u64",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SubscribeVersion",
                      "fields": [
                        {
                          "name": "query_id",
                          "type": 10,
                          "typeName": "QueryId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_response_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnsubscribeVersion",
                      "fields": [

                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BurnAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 98,
                          "typeName": "MultiAssets",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectError",
                      "fields": [
                        {
                          "name": null,
                          "type": 107,
                          "typeName": "Option<(u32, Error)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 31,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 113,
                          "typeName": "MaybeErrorCode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "QueryPallet",
                      "fields": [
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "response_info",
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExpectPallet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "module_name",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "crate_major",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_crate_minor",
                          "type": 89,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ReportTransactStatus",
                      "fields": [
                        {
                          "name": null,
                          "type": 118,
                          "typeName": "QueryResponseInfo",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearTransactStatus",
                      "fields": [

                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UniversalOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "Junction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 37,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ExportMessage",
                      "fields": [
                        {
                          "name": "network",
                          "type": 91,
                          "typeName": "NetworkId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "destination",
                          "type": 87,
                          "typeName": "InteriorMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm",
                          "type": 95,
                          "typeName": "Xcm<()>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 38,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "unlocker",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 39,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnlockAsset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 40,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NoteUnlockable",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 41,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RequestUnlock",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 100,
                          "typeName": "MultiAsset",
                          "docs": [

                          ]
                        },
                        {
                          "name": "locker",
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 42,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetFeesMode",
                      "fields": [
                        {
                          "name": "jit_withdraw",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 43,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SetTopic",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "[u8; 32]",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 44,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ClearTopic",
                      "fields": [

                      ],
                      "index": 45,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AliasOrigin",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "MultiLocation",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 46,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnpaidExecution",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        },
                        {
                          "name": "check_origin",
                          "type": 115,
                          "typeName": "Option<MultiLocation>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 47,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 424,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [

                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 425,
            "type": {
              "path": [
                "pallet_ethereum_xcm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transact",
                      "fields": [
                        {
                          "name": "xcm_transaction",
                          "type": 426,
                          "typeName": "EthereumXcmTransaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See `Pallet::transact`."
                      ]
                    },
                    {
                      "name": "transact_through_proxy",
                      "fields": [
                        {
                          "name": "transact_as",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "xcm_transaction",
                          "type": 426,
                          "typeName": "EthereumXcmTransaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See `Pallet::transact_through_proxy`."
                      ]
                    },
                    {
                      "name": "suspend_ethereum_xcm_execution",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "See `Pallet::suspend_ethereum_xcm_execution`."
                      ]
                    },
                    {
                      "name": "resume_ethereum_xcm_execution",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "See `Pallet::resume_ethereum_xcm_execution`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 426,
            "type": {
              "path": [
                "xcm_primitives",
                "ethereum_xcm",
                "EthereumXcmTransaction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": null,
                          "type": 427,
                          "typeName": "EthereumXcmTransactionV1",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 438,
                          "typeName": "EthereumXcmTransactionV2",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 427,
            "type": {
              "path": [
                "xcm_primitives",
                "ethereum_xcm",
                "EthereumXcmTransactionV1"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_limit",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee_payment",
                      "type": 430,
                      "typeName": "EthereumXcmFee",
                      "docs": [

                      ]
                    },
                    {
                      "name": "action",
                      "type": 433,
                      "typeName": "TransactionAction",
                      "docs": [

                      ]
                    },
                    {
                      "name": "value",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "input",
                      "type": 434,
                      "typeName": "BoundedVec<u8, ConstU32<MAX_ETHEREUM_XCM_INPUT_SIZE>>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "access_list",
                      "type": 435,
                      "typeName": "Option<Vec<(H160, Vec<H256>)>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 428,
            "type": {
              "path": [
                "primitive_types",
                "U256"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 429,
                      "typeName": "[u64; 4]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 429,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 4,
                  "type": 11
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 430,
            "type": {
              "path": [
                "xcm_primitives",
                "ethereum_xcm",
                "EthereumXcmFee"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Manual",
                      "fields": [
                        {
                          "name": null,
                          "type": 431,
                          "typeName": "ManualEthereumXcmFee",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Auto",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 431,
            "type": {
              "path": [
                "xcm_primitives",
                "ethereum_xcm",
                "ManualEthereumXcmFee"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_price",
                      "type": 432,
                      "typeName": "Option<U256>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_fee_per_gas",
                      "type": 432,
                      "typeName": "Option<U256>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 432,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 428
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 428,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 433,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionAction"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Call",
                      "fields": [
                        {
                          "name": null,
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Create",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 434,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 435,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 436
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 436,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 436,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 437
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 437,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  146,
                  157
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 438,
            "type": {
              "path": [
                "xcm_primitives",
                "ethereum_xcm",
                "EthereumXcmTransactionV2"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "gas_limit",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "action",
                      "type": 433,
                      "typeName": "TransactionAction",
                      "docs": [

                      ]
                    },
                    {
                      "name": "value",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "input",
                      "type": 434,
                      "typeName": "BoundedVec<u8, ConstU32<MAX_ETHEREUM_XCM_INPUT_SIZE>>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "access_list",
                      "type": 435,
                      "typeName": "Option<Vec<(H160, Vec<H256>)>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 439,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "service_overweight",
                      "fields": [
                        {
                          "name": "index",
                          "type": 11,
                          "typeName": "OverweightIndex",
                          "docs": [

                          ]
                        },
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::service_overweight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 440,
            "type": {
              "path": [
                "pallet_asset_manager",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "register_foreign_asset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "metadata",
                          "type": 142,
                          "typeName": "T::AssetRegistrarMetadata",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_sufficient",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::register_foreign_asset`]."
                      ]
                    },
                    {
                      "name": "set_asset_units_per_second",
                      "fields": [
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "units_per_second",
                          "type": 6,
                          "typeName": "u128",
                          "docs": [

                          ]
                        },
                        {
                          "name": "num_assets_weight_hint",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_asset_units_per_second`]."
                      ]
                    },
                    {
                      "name": "change_existing_asset_type",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "new_asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "num_assets_weight_hint",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::change_existing_asset_type`]."
                      ]
                    },
                    {
                      "name": "remove_supported_asset",
                      "fields": [
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "num_assets_weight_hint",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::remove_supported_asset`]."
                      ]
                    },
                    {
                      "name": "remove_existing_asset_type",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "num_assets_weight_hint",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_existing_asset_type`]."
                      ]
                    },
                    {
                      "name": "register_local_asset",
                      "fields": [
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_sufficient",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::register_local_asset`]."
                      ]
                    },
                    {
                      "name": "destroy_foreign_asset",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "num_assets_weight_hint",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::destroy_foreign_asset`]."
                      ]
                    },
                    {
                      "name": "destroy_local_asset",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 11,
                          "typeName": "T::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::destroy_local_asset`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 441,
            "type": {
              "path": [
                "orml_xtokens",
                "module",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 442,
                          "typeName": "T::CurrencyId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_multiasset",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 443,
                          "typeName": "Box<VersionedMultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::transfer_multiasset`]."
                      ]
                    },
                    {
                      "name": "transfer_with_fee",
                      "fields": [
                        {
                          "name": "currency_id",
                          "type": 442,
                          "typeName": "T::CurrencyId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::transfer_with_fee`]."
                      ]
                    },
                    {
                      "name": "transfer_multiasset_with_fee",
                      "fields": [
                        {
                          "name": "asset",
                          "type": 443,
                          "typeName": "Box<VersionedMultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee",
                          "type": 443,
                          "typeName": "Box<VersionedMultiAsset>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_multiasset_with_fee`]."
                      ]
                    },
                    {
                      "name": "transfer_multicurrencies",
                      "fields": [
                        {
                          "name": "currencies",
                          "type": 444,
                          "typeName": "Vec<(T::CurrencyId, T::Balance)>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_multicurrencies`]."
                      ]
                    },
                    {
                      "name": "transfer_multiassets",
                      "fields": [
                        {
                          "name": "assets",
                          "type": 123,
                          "typeName": "Box<VersionedMultiAssets>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "fee_item",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest",
                          "type": 137,
                          "typeName": "Box<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dest_weight_limit",
                          "type": 122,
                          "typeName": "WeightLimit",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::transfer_multiassets`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 442,
            "type": {
              "path": [
                "darwinia_runtime",
                "pallets",
                "orml_xtokens",
                "CurrencyId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SelfReserve",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ForeignAsset",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": "crate::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 443,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedMultiAsset"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 126,
                          "typeName": "v2::MultiAsset",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 100,
                          "typeName": "v3::MultiAsset",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 444,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 445
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 445,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  442,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 446,
            "type": {
              "path": [
                "darwinia_asset_limit",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_foreign_asset_limit",
                      "fields": [
                        {
                          "name": "asset_type",
                          "type": 141,
                          "typeName": "T::ForeignAssetType",
                          "docs": [

                          ]
                        },
                        {
                          "name": "units_limit",
                          "type": 6,
                          "typeName": "u128",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_foreign_asset_limit`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 447,
            "type": {
              "path": [
                "pallet_ethereum",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transact",
                      "fields": [
                        {
                          "name": "transaction",
                          "type": 448,
                          "typeName": "Transaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transact`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 448,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionV2"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "name": null,
                          "type": 449,
                          "typeName": "LegacyTransaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EIP2930",
                      "fields": [
                        {
                          "name": null,
                          "type": 452,
                          "typeName": "EIP2930Transaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EIP1559",
                      "fields": [
                        {
                          "name": null,
                          "type": 455,
                          "typeName": "EIP1559Transaction",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 449,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "LegacyTransaction"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "gas_price",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "gas_limit",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "action",
                      "type": 433,
                      "typeName": "TransactionAction",
                      "docs": [

                      ]
                    },
                    {
                      "name": "value",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "input",
                      "type": 14,
                      "typeName": "Bytes",
                      "docs": [

                      ]
                    },
                    {
                      "name": "signature",
                      "type": 450,
                      "typeName": "TransactionSignature",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 450,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionSignature"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "v",
                      "type": 451,
                      "typeName": "TransactionRecoveryId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "r",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "s",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 451,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "TransactionRecoveryId"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 452,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "EIP2930Transaction"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonce",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "gas_price",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "gas_limit",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "action",
                      "type": 433,
                      "typeName": "TransactionAction",
                      "docs": [

                      ]
                    },
                    {
                      "name": "value",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "input",
                      "type": 14,
                      "typeName": "Bytes",
                      "docs": [

                      ]
                    },
                    {
                      "name": "access_list",
                      "type": 453,
                      "typeName": "AccessList",
                      "docs": [

                      ]
                    },
                    {
                      "name": "odd_y_parity",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    },
                    {
                      "name": "r",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "s",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 453,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 454
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 454,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "AccessListItem"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "address",
                      "type": 146,
                      "typeName": "Address",
                      "docs": [

                      ]
                    },
                    {
                      "name": "storage_keys",
                      "type": 157,
                      "typeName": "Vec<H256>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 455,
            "type": {
              "path": [
                "ethereum",
                "transaction",
                "EIP1559Transaction"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chain_id",
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonce",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_priority_fee_per_gas",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "max_fee_per_gas",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "gas_limit",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "action",
                      "type": 433,
                      "typeName": "TransactionAction",
                      "docs": [

                      ]
                    },
                    {
                      "name": "value",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "input",
                      "type": 14,
                      "typeName": "Bytes",
                      "docs": [

                      ]
                    },
                    {
                      "name": "access_list",
                      "type": 453,
                      "typeName": "AccessList",
                      "docs": [

                      ]
                    },
                    {
                      "name": "odd_y_parity",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    },
                    {
                      "name": "r",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "s",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 456,
            "type": {
              "path": [
                "pallet_evm",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "withdraw",
                      "fields": [
                        {
                          "name": "address",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::withdraw`]."
                      ]
                    },
                    {
                      "name": "call",
                      "fields": [
                        {
                          "name": "source",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "input",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 428,
                          "typeName": "U256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "gas_limit",
                          "type": 11,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_fee_per_gas",
                          "type": 428,
                          "typeName": "U256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_priority_fee_per_gas",
                          "type": 432,
                          "typeName": "Option<U256>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "nonce",
                          "type": 432,
                          "typeName": "Option<U256>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "access_list",
                          "type": 436,
                          "typeName": "Vec<(H160, Vec<H256>)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::call`]."
                      ]
                    },
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "source",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "init",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 428,
                          "typeName": "U256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "gas_limit",
                          "type": 11,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_fee_per_gas",
                          "type": 428,
                          "typeName": "U256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_priority_fee_per_gas",
                          "type": 432,
                          "typeName": "Option<U256>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "nonce",
                          "type": 432,
                          "typeName": "Option<U256>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "access_list",
                          "type": 436,
                          "typeName": "Vec<(H160, Vec<H256>)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "create2",
                      "fields": [
                        {
                          "name": "source",
                          "type": 146,
                          "typeName": "H160",
                          "docs": [

                          ]
                        },
                        {
                          "name": "init",
                          "type": 14,
                          "typeName": "Vec<u8>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "salt",
                          "type": 12,
                          "typeName": "H256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "value",
                          "type": 428,
                          "typeName": "U256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "gas_limit",
                          "type": 11,
                          "typeName": "u64",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_fee_per_gas",
                          "type": 428,
                          "typeName": "U256",
                          "docs": [

                          ]
                        },
                        {
                          "name": "max_priority_fee_per_gas",
                          "type": 432,
                          "typeName": "Option<U256>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "nonce",
                          "type": 432,
                          "typeName": "Option<U256>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "access_list",
                          "type": 436,
                          "typeName": "Vec<(H160, Vec<H256>)>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::create2`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 457,
            "type": {
              "path": [
                "darwinia_message_transact",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "message_transact",
                      "fields": [
                        {
                          "name": "transaction",
                          "type": 448,
                          "typeName": "Box<Transaction>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::message_transact`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 458,
            "type": {
              "path": [
                "pallet_bridge_grandpa",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit_finality_proof",
                      "fields": [
                        {
                          "name": "finality_target",
                          "type": 459,
                          "typeName": "Box<BridgedHeader<T, I>>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "justification",
                          "type": 460,
                          "typeName": "GrandpaJustification<BridgedHeader<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit_finality_proof`]."
                      ]
                    },
                    {
                      "name": "initialize",
                      "fields": [
                        {
                          "name": "init_data",
                          "type": 470,
                          "typeName": "super::InitializationData<BridgedHeader<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::initialize`]."
                      ]
                    },
                    {
                      "name": "set_owner",
                      "fields": [
                        {
                          "name": "new_owner",
                          "type": 374,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_owner`]."
                      ]
                    },
                    {
                      "name": "set_operating_mode",
                      "fields": [
                        {
                          "name": "operating_mode",
                          "type": 473,
                          "typeName": "BasicOperatingMode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_operating_mode`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 459,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "number",
                      "type": 89,
                      "typeName": "Number",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "digest",
                      "type": 15,
                      "typeName": "Digest",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 460,
            "type": {
              "path": [
                "bp_header_chain",
                "justification",
                "GrandpaJustification"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 459
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round",
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "commit",
                      "type": 461,
                      "typeName": "finality_grandpa::Commit<Header::Hash, Header::Number,\nAuthoritySignature, AuthorityId>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "votes_ancestries",
                      "type": 469,
                      "typeName": "Vec<Header>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 461,
            "type": {
              "path": [
                "finality_grandpa",
                "Commit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": 462
                },
                {
                  "name": "Id",
                  "type": 464
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H",
                      "docs": [

                      ]
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": [

                      ]
                    },
                    {
                      "name": "precommits",
                      "type": 466,
                      "typeName": "Vec<SignedPrecommit<H, N, S, Id>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 462,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Signature"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 463,
                      "typeName": "ed25519::Signature",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 463,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Signature"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 331,
                      "typeName": "[u8; 64]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 464,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 465,
                      "typeName": "ed25519::Public",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 465,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Public"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "[u8; 32]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 466,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 467
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 467,
            "type": {
              "path": [
                "finality_grandpa",
                "SignedPrecommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": 462
                },
                {
                  "name": "Id",
                  "type": 464
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "precommit",
                      "type": 468,
                      "typeName": "Precommit<H, N>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "signature",
                      "type": 462,
                      "typeName": "S",
                      "docs": [

                      ]
                    },
                    {
                      "name": "id",
                      "type": 464,
                      "typeName": "Id",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 468,
            "type": {
              "path": [
                "finality_grandpa",
                "Precommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H",
                      "docs": [

                      ]
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 469,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 459
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 470,
            "type": {
              "path": [
                "bp_header_chain",
                "InitializationData"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 459
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 459,
                      "typeName": "Box<H>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "authority_list",
                      "type": 471,
                      "typeName": "AuthorityList",
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_id",
                      "type": 11,
                      "typeName": "SetId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "operating_mode",
                      "type": 473,
                      "typeName": "BasicOperatingMode",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 471,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 472
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 472,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  464,
                  11
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 473,
            "type": {
              "path": [
                "bp_runtime",
                "BasicOperatingMode"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Halted",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 474,
            "type": {
              "path": [
                "pallet_bridge_parachains",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit_parachain_heads",
                      "fields": [
                        {
                          "name": "at_relay_block",
                          "type": 475,
                          "typeName": "(RelayBlockNumber, RelayBlockHash)",
                          "docs": [

                          ]
                        },
                        {
                          "name": "parachains",
                          "type": 476,
                          "typeName": "Vec<(ParaId, ParaHash)>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "parachain_heads_proof",
                          "type": 478,
                          "typeName": "ParaHeadsProof",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit_parachain_heads`]."
                      ]
                    },
                    {
                      "name": "set_owner",
                      "fields": [
                        {
                          "name": "new_owner",
                          "type": 374,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_owner`]."
                      ]
                    },
                    {
                      "name": "set_operating_mode",
                      "fields": [
                        {
                          "name": "operating_mode",
                          "type": 473,
                          "typeName": "BasicOperatingMode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_operating_mode`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 475,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  12
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 476,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 477
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 477,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  159,
                  12
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 478,
            "type": {
              "path": [
                "bp_polkadot_core",
                "parachains",
                "ParaHeadsProof"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 188,
                      "typeName": "Vec<Vec<u8>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 479,
            "type": {
              "path": [
                "pallet_bridge_messages",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_owner",
                      "fields": [
                        {
                          "name": "new_owner",
                          "type": 374,
                          "typeName": "Option<T::AccountId>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_owner`]."
                      ]
                    },
                    {
                      "name": "set_operating_mode",
                      "fields": [
                        {
                          "name": "operating_mode",
                          "type": 480,
                          "typeName": "MessagesOperatingMode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_operating_mode`]."
                      ]
                    },
                    {
                      "name": "update_pallet_parameter",
                      "fields": [
                        {
                          "name": "parameter",
                          "type": 67,
                          "typeName": "T::Parameter",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::update_pallet_parameter`]."
                      ]
                    },
                    {
                      "name": "send_message",
                      "fields": [
                        {
                          "name": "lane_id",
                          "type": 18,
                          "typeName": "LaneId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "payload",
                          "type": 481,
                          "typeName": "T::OutboundPayload",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delivery_and_dispatch_fee",
                          "type": 6,
                          "typeName": "T::OutboundMessageFee",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::send_message`]."
                      ]
                    },
                    {
                      "name": "receive_messages_proof",
                      "fields": [
                        {
                          "name": "relayer_id_at_bridged_chain",
                          "type": 0,
                          "typeName": "T::InboundRelayer",
                          "docs": [

                          ]
                        },
                        {
                          "name": "proof",
                          "type": 486,
                          "typeName": "MessagesProofOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "messages_count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "dispatch_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::receive_messages_proof`]."
                      ]
                    },
                    {
                      "name": "receive_messages_delivery_proof",
                      "fields": [
                        {
                          "name": "proof",
                          "type": 487,
                          "typeName": "MessagesDeliveryProofOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "relayers_state",
                          "type": 488,
                          "typeName": "UnrewardedRelayersState",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::receive_messages_delivery_proof`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 480,
            "type": {
              "path": [
                "bp_messages",
                "MessagesOperatingMode"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Basic",
                      "fields": [
                        {
                          "name": null,
                          "type": 473,
                          "typeName": "BasicOperatingMode",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "RejectingOutboundMessages",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 481,
            "type": {
              "path": [
                "bp_message_dispatch",
                "MessagePayload"
              ],
              "params": [
                {
                  "name": "SourceChainAccountId",
                  "type": 0
                },
                {
                  "name": "TargetChainAccountPublic",
                  "type": 482
                },
                {
                  "name": "TargetChainSignature",
                  "type": 483
                },
                {
                  "name": "Call",
                  "type": 14
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "SpecVersion",
                      "docs": [

                      ]
                    },
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "origin",
                      "type": 484,
                      "typeName": "CallOrigin<SourceChainAccountId, TargetChainAccountPublic,\nTargetChainSignature>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "dispatch_fee_payment",
                      "type": 485,
                      "typeName": "DispatchFeePayment",
                      "docs": [

                      ]
                    },
                    {
                      "name": "call",
                      "type": 14,
                      "typeName": "Call",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 482,
            "type": {
              "path": [
                "fp_account",
                "EthereumSigner"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 20]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 483,
            "type": {
              "path": [
                "fp_account",
                "EthereumSignature"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 57,
                      "typeName": "ecdsa::Signature",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 484,
            "type": {
              "path": [
                "bp_message_dispatch",
                "CallOrigin"
              ],
              "params": [
                {
                  "name": "SourceChainAccountId",
                  "type": 0
                },
                {
                  "name": "TargetChainAccountPublic",
                  "type": 482
                },
                {
                  "name": "TargetChainSignature",
                  "type": 483
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SourceRoot",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TargetAccount",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "SourceChainAccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 482,
                          "typeName": "TargetChainAccountPublic",
                          "docs": [

                          ]
                        },
                        {
                          "name": null,
                          "type": 483,
                          "typeName": "TargetChainSignature",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "SourceAccount",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "SourceChainAccountId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 485,
            "type": {
              "path": [
                "bp_runtime",
                "messages",
                "DispatchFeePayment"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AtSourceChain",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AtTargetChain",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 486,
            "type": {
              "path": [
                "bridge_runtime_common",
                "messages",
                "target",
                "FromBridgedChainMessagesProof"
              ],
              "params": [
                {
                  "name": "BridgedHeaderHash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bridged_header_hash",
                      "type": 12,
                      "typeName": "BridgedHeaderHash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "storage_proof",
                      "type": 188,
                      "typeName": "RawStorageProof",
                      "docs": [

                      ]
                    },
                    {
                      "name": "lane",
                      "type": 18,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonces_start",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonces_end",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 487,
            "type": {
              "path": [
                "bridge_runtime_common",
                "messages",
                "source",
                "FromBridgedChainMessagesDeliveryProof"
              ],
              "params": [
                {
                  "name": "BridgedHeaderHash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bridged_header_hash",
                      "type": 12,
                      "typeName": "BridgedHeaderHash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "storage_proof",
                      "type": 188,
                      "typeName": "RawStorageProof",
                      "docs": [

                      ]
                    },
                    {
                      "name": "lane",
                      "type": 18,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 488,
            "type": {
              "path": [
                "bp_messages",
                "UnrewardedRelayersState"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "unrewarded_relayer_entries",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "messages_in_oldest_entry",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "total_messages",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "last_delivered_nonce",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 489,
            "type": {
              "path": [
                "pallet_bridge_dispatch",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [

                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 490,
            "type": {
              "path": [
                "pallet_fee_market",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "enroll_and_lock_collateral",
                      "fields": [
                        {
                          "name": "lock_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "relay_fee",
                          "type": 180,
                          "typeName": "Option<BalanceOf<T, I>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::enroll_and_lock_collateral`]."
                      ]
                    },
                    {
                      "name": "increase_locked_collateral",
                      "fields": [
                        {
                          "name": "new_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::increase_locked_collateral`]."
                      ]
                    },
                    {
                      "name": "decrease_locked_collateral",
                      "fields": [
                        {
                          "name": "new_collateral",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::decrease_locked_collateral`]."
                      ]
                    },
                    {
                      "name": "update_relay_fee",
                      "fields": [
                        {
                          "name": "new_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::update_relay_fee`]."
                      ]
                    },
                    {
                      "name": "cancel_enrollment",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::cancel_enrollment`]."
                      ]
                    },
                    {
                      "name": "set_slash_protect",
                      "fields": [
                        {
                          "name": "slash_protect",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_slash_protect`]."
                      ]
                    },
                    {
                      "name": "set_assigned_relayers_number",
                      "fields": [
                        {
                          "name": "number",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_assigned_relayers_number`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 491,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 492,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 368
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 493,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  494,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 494,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 44,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 495,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "ReferendumInfo"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Proposal",
                  "type": 369
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ongoing",
                      "fields": [
                        {
                          "name": null,
                          "type": 496,
                          "typeName": "ReferendumStatus<BlockNumber, Proposal, Balance>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Finished",
                      "fields": [
                        {
                          "name": "approved",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        },
                        {
                          "name": "end",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 496,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "ReferendumStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Proposal",
                  "type": 369
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "proposal",
                      "type": 369,
                      "typeName": "Proposal",
                      "docs": [

                      ]
                    },
                    {
                      "name": "threshold",
                      "type": 61,
                      "typeName": "VoteThreshold",
                      "docs": [

                      ]
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "tally",
                      "type": 497,
                      "typeName": "Tally<Balance>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 497,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "Tally"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ayes",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nays",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "turnout",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 498,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "Voting"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "MaxVotes",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Direct",
                      "fields": [
                        {
                          "name": "votes",
                          "type": 499,
                          "typeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegations",
                          "type": 502,
                          "typeName": "Delegations<Balance>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "prior",
                          "type": 503,
                          "typeName": "PriorLock<BlockNumber, Balance>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Delegating",
                      "fields": [
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": [

                          ]
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": [

                          ]
                        },
                        {
                          "name": "conviction",
                          "type": 372,
                          "typeName": "Conviction",
                          "docs": [

                          ]
                        },
                        {
                          "name": "delegations",
                          "type": 502,
                          "typeName": "Delegations<Balance>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "prior",
                          "type": 503,
                          "typeName": "PriorLock<BlockNumber, Balance>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 499,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 500
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 501,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 500,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  62
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 501,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 500
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 502,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "Delegations"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "capital",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 503,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "PriorLock"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 504,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  369,
                  61
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 505,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  494
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 506,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ValueLow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Value too low"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Proposal does not exist"
                      ]
                    },
                    {
                      "name": "AlreadyCanceled",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Cannot cancel the same proposal twice"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Proposal already made"
                      ]
                    },
                    {
                      "name": "ProposalBlacklisted",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Proposal still blacklisted"
                      ]
                    },
                    {
                      "name": "NotSimpleMajority",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Next external proposal not simple majority"
                      ]
                    },
                    {
                      "name": "InvalidHash",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Invalid hash"
                      ]
                    },
                    {
                      "name": "NoProposal",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "No external proposal"
                      ]
                    },
                    {
                      "name": "AlreadyVetoed",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Identity may not veto a proposal twice"
                      ]
                    },
                    {
                      "name": "ReferendumInvalid",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "Vote given for invalid referendum"
                      ]
                    },
                    {
                      "name": "NoneWaiting",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "No proposals waiting"
                      ]
                    },
                    {
                      "name": "NotVoter",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "The given account did not vote on the referendum."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "The actor has no permission to conduct the action."
                      ]
                    },
                    {
                      "name": "AlreadyDelegating",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [
                        "The account is already delegating."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [
                        "Too high a balance was provided that the account cannot afford."
                      ]
                    },
                    {
                      "name": "NotDelegating",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [
                        "The account is not currently delegating."
                      ]
                    },
                    {
                      "name": "VotesExist",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [
                        "The account currently has votes attached to it and the operation cannot succeed until",
                        "these are removed, either through `unvote` or `reap_vote`."
                      ]
                    },
                    {
                      "name": "InstantNotAllowed",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [
                        "The instant referendum origin is currently disallowed."
                      ]
                    },
                    {
                      "name": "Nonsense",
                      "fields": [

                      ],
                      "index": 18,
                      "docs": [
                        "Delegation to oneself makes no sense."
                      ]
                    },
                    {
                      "name": "WrongUpperBound",
                      "fields": [

                      ],
                      "index": 19,
                      "docs": [
                        "Invalid upper bound."
                      ]
                    },
                    {
                      "name": "MaxVotesReached",
                      "fields": [

                      ],
                      "index": 20,
                      "docs": [
                        "Maximum number of votes reached."
                      ]
                    },
                    {
                      "name": "TooMany",
                      "fields": [

                      ],
                      "index": 21,
                      "docs": [
                        "Maximum number of items reached."
                      ]
                    },
                    {
                      "name": "VotingPeriodLow",
                      "fields": [

                      ],
                      "index": 22,
                      "docs": [
                        "Voting period too low"
                      ]
                    },
                    {
                      "name": "PreimageNotExist",
                      "fields": [

                      ],
                      "index": 23,
                      "docs": [
                        "The preimage does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 507,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 157,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 508,
            "type": {
              "path": [
                "pallet_collective",
                "Votes"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "ProposalIndex",
                      "docs": [

                      ]
                    },
                    {
                      "name": "threshold",
                      "type": 4,
                      "typeName": "MemberCount",
                      "docs": [

                      ]
                    },
                    {
                      "name": "ayes",
                      "type": 44,
                      "typeName": "Vec<AccountId>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nays",
                      "type": 44,
                      "typeName": "Vec<AccountId>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 509,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Account is not a member"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Duplicate proposals not allowed"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Proposal must exist"
                      ]
                    },
                    {
                      "name": "WrongIndex",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Mismatched index"
                      ]
                    },
                    {
                      "name": "DuplicateVote",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Duplicate vote ignored"
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Members are already initialized!"
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "The close call was made too early, before the end of the voting."
                      ]
                    },
                    {
                      "name": "TooManyProposals",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "There can only be a maximum of `MaxProposals` active proposals."
                      ]
                    },
                    {
                      "name": "WrongProposalWeight",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "The given weight bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "WrongProposalLength",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The given length bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "PrimeAccountNotMember",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "Prime account is not a member"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 510,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Account is not a member"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Duplicate proposals not allowed"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Proposal must exist"
                      ]
                    },
                    {
                      "name": "WrongIndex",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Mismatched index"
                      ]
                    },
                    {
                      "name": "DuplicateVote",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Duplicate vote ignored"
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Members are already initialized!"
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "The close call was made too early, before the end of the voting."
                      ]
                    },
                    {
                      "name": "TooManyProposals",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "There can only be a maximum of `MaxProposals` active proposals."
                      ]
                    },
                    {
                      "name": "WrongProposalWeight",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "The given weight bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "WrongProposalLength",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The given length bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "PrimeAccountNotMember",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "Prime account is not a member"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 511,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 512
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 512,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "SeatHolder"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "stake",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 513,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "Voter"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 44,
                      "typeName": "Vec<AccountId>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "stake",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 514,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnableToVote",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Cannot vote when no candidates or members exist."
                      ]
                    },
                    {
                      "name": "NoVotes",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Must vote for at least one candidate."
                      ]
                    },
                    {
                      "name": "TooManyVotes",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Cannot vote more than candidates."
                      ]
                    },
                    {
                      "name": "MaximumVotesExceeded",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Cannot vote more than maximum allowed."
                      ]
                    },
                    {
                      "name": "LowBalance",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Cannot vote with stake less than minimum balance."
                      ]
                    },
                    {
                      "name": "UnableToPayBond",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Voter can not pay voting bond."
                      ]
                    },
                    {
                      "name": "MustBeVoter",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Must be a voter."
                      ]
                    },
                    {
                      "name": "DuplicatedCandidate",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Duplicated candidate submission."
                      ]
                    },
                    {
                      "name": "TooManyCandidates",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Too many candidates have been created."
                      ]
                    },
                    {
                      "name": "MemberSubmit",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "Member cannot re-submit candidacy."
                      ]
                    },
                    {
                      "name": "RunnerUpSubmit",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "Runner cannot re-submit candidacy."
                      ]
                    },
                    {
                      "name": "InsufficientCandidateFunds",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "Candidate does not have enough funds."
                      ]
                    },
                    {
                      "name": "NotMember",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "Not a member."
                      ]
                    },
                    {
                      "name": "InvalidWitnessData",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [
                        "The provided count of number of candidates is incorrect."
                      ]
                    },
                    {
                      "name": "InvalidVoteCount",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [
                        "The provided count of number of votes is incorrect."
                      ]
                    },
                    {
                      "name": "InvalidRenouncing",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [
                        "The renouncing origin presented a wrong `Renouncing` parameter."
                      ]
                    },
                    {
                      "name": "InvalidReplacement",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [
                        "Prediction regarding replacement after member removal is wrong."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 515,
            "type": {
              "path": [
                "pallet_membership",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyMember",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Already a member."
                      ]
                    },
                    {
                      "name": "NotMember",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Not a member."
                      ]
                    },
                    {
                      "name": "TooManyMembers",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Too many members."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 516,
            "type": {
              "path": [
                "pallet_treasury",
                "Proposal"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 517,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 351,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 518,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 519,
            "type": {
              "path": [
                "frame_support",
                "PalletId"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 104,
                      "typeName": "[u8; 8]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 520,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "No proposal or bounty at that index."
                      ]
                    },
                    {
                      "name": "TooManyApprovals",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Too many approvals in the queue."
                      ]
                    },
                    {
                      "name": "InsufficientPermission",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The spend origin is valid but the amount it is allowed to spend is lower than the",
                        "amount to be spent."
                      ]
                    },
                    {
                      "name": "ProposalNotApproved",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Proposal has not been approved."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the treasury pallet."
              ]
            }
          },
          {
            "id": 521,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManyCalls",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Too many calls batched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 522,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Registration"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "MaxJudgements",
                  "type": null
                },
                {
                  "name": "MaxAdditionalFields",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "judgements",
                      "type": 523,
                      "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "info",
                      "type": 288,
                      "typeName": "IdentityInfo<MaxAdditionalFields>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 523,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 285
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 287,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 524,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  6,
                  494
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 525,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 526
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 528,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 526,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 527
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 527,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 527,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "RegistrarInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fields",
                      "type": 395,
                      "typeName": "IdentityFields",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 528,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 526
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 529,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManySubAccounts",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Too many subs-accounts."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Account isn't found."
                      ]
                    },
                    {
                      "name": "NotNamed",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Account isn't named."
                      ]
                    },
                    {
                      "name": "EmptyIndex",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Empty index."
                      ]
                    },
                    {
                      "name": "FeeChanged",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Fee is changed."
                      ]
                    },
                    {
                      "name": "NoIdentity",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "No identity found."
                      ]
                    },
                    {
                      "name": "StickyJudgement",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Sticky judgement."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Judgement given."
                      ]
                    },
                    {
                      "name": "InvalidJudgement",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Invalid judgement."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The index is invalid."
                      ]
                    },
                    {
                      "name": "InvalidTarget",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "The target is invalid."
                      ]
                    },
                    {
                      "name": "TooManyFields",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "Too many additional fields."
                      ]
                    },
                    {
                      "name": "TooManyRegistrars",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "Maximum amount of registrars reached. Cannot add any more."
                      ]
                    },
                    {
                      "name": "AlreadyClaimed",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [
                        "Account ID is already named."
                      ]
                    },
                    {
                      "name": "NotSub",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [
                        "Sender is not a sub-account."
                      ]
                    },
                    {
                      "name": "NotOwned",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [
                        "Sub-account isn't owned by sender."
                      ]
                    },
                    {
                      "name": "JudgementForDifferentIdentity",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [
                        "The provided judgement was for a different identity."
                      ]
                    },
                    {
                      "name": "JudgementPaymentFailed",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [
                        "Error that occurs when there is an issue paying for judgement."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 530,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 531
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 533,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 531,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 532
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 532,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 532,
            "type": {
              "path": [
                "pallet_scheduler",
                "Scheduled"
              ],
              "params": [
                {
                  "name": "Name",
                  "type": 13
                },
                {
                  "name": "Call",
                  "type": 369
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PalletsOrigin",
                  "type": 382
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "maybe_id",
                      "type": 32,
                      "typeName": "Option<Name>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "priority",
                      "type": 2,
                      "typeName": "schedule::Priority",
                      "docs": [

                      ]
                    },
                    {
                      "name": "call",
                      "type": 369,
                      "typeName": "Call",
                      "docs": [

                      ]
                    },
                    {
                      "name": "maybe_periodic",
                      "type": 398,
                      "typeName": "Option<schedule::Period<BlockNumber>>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "origin",
                      "type": 382,
                      "typeName": "PalletsOrigin",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 533,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 531
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 534,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FailedToSchedule",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Failed to schedule a call"
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Cannot find the scheduled call."
                      ]
                    },
                    {
                      "name": "TargetBlockNumberInPast",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Given target block number is in the past."
                      ]
                    },
                    {
                      "name": "RescheduleNoChange",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Reschedule failed because it does not change scheduled time."
                      ]
                    },
                    {
                      "name": "Named",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Attempt to use a non-named function on a named task."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 535,
            "type": {
              "path": [
                "pallet_preimage",
                "RequestStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unrequested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 71,
                          "typeName": "(AccountId, Balance)",
                          "docs": [

                          ]
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 181,
                          "typeName": "Option<(AccountId, Balance)>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [

                          ]
                        },
                        {
                          "name": "len",
                          "type": 54,
                          "typeName": "Option<u32>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 536,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  12,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 537,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 538,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooBig",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Preimage is too large to store on-chain."
                      ]
                    },
                    {
                      "name": "AlreadyNoted",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Preimage has already been noted on-chain."
                      ]
                    },
                    {
                      "name": "NotAuthorized",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The user is not authorized to perform this action."
                      ]
                    },
                    {
                      "name": "NotNoted",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The preimage cannot be removed since it has not yet been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "A preimage may not be removed when there are outstanding requests."
                      ]
                    },
                    {
                      "name": "NotRequested",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The preimage request cannot be removed since no outstanding requests exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 539,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  540,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 540,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 541
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 542,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 541,
            "type": {
              "path": [
                "pallet_proxy",
                "ProxyDefinition"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ProxyType",
                  "type": 80
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegate",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "proxy_type",
                      "type": 80,
                      "typeName": "ProxyType",
                      "docs": [

                      ]
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 542,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 541
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 543,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  544,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 544,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 545
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 546,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 545,
            "type": {
              "path": [
                "pallet_proxy",
                "Announcement"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "real",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "call_hash",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 546,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 545
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 547,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooMany",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "There are too many proxies registered or too many announcements pending."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Proxy registration not found."
                      ]
                    },
                    {
                      "name": "NotProxy",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Sender is not a proxy of the account to be proxied."
                      ]
                    },
                    {
                      "name": "Unproxyable",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "A call which is incompatible with the proxy type's filter was attempted."
                      ]
                    },
                    {
                      "name": "Duplicate",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Account is already a proxy."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Call may not be made by proxy because it may escalate its privileges."
                      ]
                    },
                    {
                      "name": "Unannounced",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Announcement, if made at all, was made too recently."
                      ]
                    },
                    {
                      "name": "NoSelfProxy",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Cannot add self as proxy."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 548,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 549
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 549,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "InboundChannelDetails"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sender",
                      "type": 83,
                      "typeName": "ParaId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state",
                      "type": 550,
                      "typeName": "InboundState",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message_metadata",
                      "type": 551,
                      "typeName": "Vec<(RelayBlockNumber, XcmpMessageFormat)>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 550,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "InboundState"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 551,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 552
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 552,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  553
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 553,
            "type": {
              "path": [
                "polkadot_parachain_primitives",
                "primitives",
                "XcmpMessageFormat"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ConcatenatedVersionedXcm",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ConcatenatedEncodedBlob",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Signals",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 554,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  83,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 555,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 556
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 556,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundChannelDetails"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "recipient",
                      "type": 83,
                      "typeName": "ParaId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state",
                      "type": 557,
                      "typeName": "OutboundState",
                      "docs": [

                      ]
                    },
                    {
                      "name": "signals_exist",
                      "type": 37,
                      "typeName": "bool",
                      "docs": [

                      ]
                    },
                    {
                      "name": "first_index",
                      "type": 40,
                      "typeName": "u16",
                      "docs": [

                      ]
                    },
                    {
                      "name": "last_index",
                      "type": 40,
                      "typeName": "u16",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 557,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "OutboundState"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 558,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  83,
                  40
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 559,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "QueueConfigData"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "suspend_threshold",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "drop_threshold",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "resume_threshold",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "threshold_weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "weight_restrict_decay",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    },
                    {
                      "name": "xcmp_max_individual_weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 560,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  83,
                  4,
                  14
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 561,
            "type": {
              "path": [
                "cumulus_pallet_xcmp_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FailedToSend",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Failed to send XCM message."
                      ]
                    },
                    {
                      "name": "BadXcmOrigin",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Bad XCM origin."
                      ]
                    },
                    {
                      "name": "BadXcm",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Bad XCM data."
                      ]
                    },
                    {
                      "name": "BadOverweightIndex",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Bad overweight index."
                      ]
                    },
                    {
                      "name": "WeightOverLimit",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Provided weight is possibly not enough to execute the message."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 562,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "QueryStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "fields": [
                        {
                          "name": "responder",
                          "type": 137,
                          "typeName": "VersionedMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_match_querier",
                          "type": 563,
                          "typeName": "Option<VersionedMultiLocation>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "maybe_notify",
                          "type": 564,
                          "typeName": "Option<(u8, u8)>",
                          "docs": [

                          ]
                        },
                        {
                          "name": "timeout",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "VersionNotifier",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 137,
                          "typeName": "VersionedMultiLocation",
                          "docs": [

                          ]
                        },
                        {
                          "name": "is_active",
                          "type": 37,
                          "typeName": "bool",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Ready",
                      "fields": [
                        {
                          "name": "response",
                          "type": 566,
                          "typeName": "VersionedResponse",
                          "docs": [

                          ]
                        },
                        {
                          "name": "at",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 563,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 137
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 137,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 564,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 565
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 565,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 565,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  2,
                  2
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 566,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedResponse"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V2",
                      "fields": [
                        {
                          "name": null,
                          "type": 408,
                          "typeName": "v2::Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "v3::Response",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 567,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  137
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 568,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  11,
                  9,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 569,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 570
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 571,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 570,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  137,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 571,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 570
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 572,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "VersionMigrationStage"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MigrateSupportedVersion",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MigrateVersionNotifiers",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotifyCurrentTargets",
                      "fields": [
                        {
                          "name": null,
                          "type": 573,
                          "typeName": "Option<Vec<u8>>",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MigrateAndNotifyOldTargets",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 573,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 14
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 14,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 574,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  0,
                  575
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 575,
            "type": {
              "path": [
                "staging_xcm",
                "VersionedAssetId"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V3",
                      "fields": [
                        {
                          "name": null,
                          "type": 101,
                          "typeName": "v3::AssetId",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 576,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "RemoteLockedFungibleRecord"
              ],
              "params": [
                {
                  "name": "ConsumerIdentifier",
                  "type": 67
                },
                {
                  "name": "MaxConsumers",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "u128",
                      "docs": [

                      ]
                    },
                    {
                      "name": "owner",
                      "type": 137,
                      "typeName": "VersionedMultiLocation",
                      "docs": [

                      ]
                    },
                    {
                      "name": "locker",
                      "type": 137,
                      "typeName": "VersionedMultiLocation",
                      "docs": [

                      ]
                    },
                    {
                      "name": "consumers",
                      "type": 577,
                      "typeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 577,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 578
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 579,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 578,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  67,
                  6
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 579,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 578
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 580,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 581
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 582,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 581,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  6,
                  137
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 582,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 581
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 583,
            "type": {
              "path": [
                "pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unreachable",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The desired destination was unreachable, generally because there is a no way of routing",
                        "to it."
                      ]
                    },
                    {
                      "name": "SendFailure",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "There was some other issue (i.e. not to do with routing) in sending the message.",
                        "Perhaps a lack of space for buffering the message."
                      ]
                    },
                    {
                      "name": "Filtered",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "The message execution fails the filter."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "DestinationNotInvertible",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The destination `MultiLocation` provided cannot be inverted."
                      ]
                    },
                    {
                      "name": "Empty",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The assets to be sent are empty."
                      ]
                    },
                    {
                      "name": "CannotReanchor",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Could not re-anchor the assets to declare the fees for the destination chain."
                      ]
                    },
                    {
                      "name": "TooManyAssets",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Too many assets have been attempted for transfer."
                      ]
                    },
                    {
                      "name": "InvalidOrigin",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Origin is invalid for sending."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The version of the `Versioned` value used is not able to be interpreted."
                      ]
                    },
                    {
                      "name": "BadLocation",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "The given location could not be used (e.g. because it cannot be expressed in the",
                        "desired version of XCM)."
                      ]
                    },
                    {
                      "name": "NoSubscription",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "The referenced subscription could not be found."
                      ]
                    },
                    {
                      "name": "AlreadySubscribed",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "The location is invalid since it already has a subscription from us."
                      ]
                    },
                    {
                      "name": "InvalidAsset",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [
                        "Invalid asset for the operation."
                      ]
                    },
                    {
                      "name": "LowBalance",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [
                        "The owner does not own (all) of the asset that they wish to do the operation on."
                      ]
                    },
                    {
                      "name": "TooManyLocks",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [
                        "The asset owner has too many locks on the asset."
                      ]
                    },
                    {
                      "name": "AccountNotSovereign",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [
                        "The given account is not an identifiable sovereign account for any location."
                      ]
                    },
                    {
                      "name": "FeesNotMet",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [
                        "The operation required fees to be paid which the initiator could not meet."
                      ]
                    },
                    {
                      "name": "LockNotFound",
                      "fields": [

                      ],
                      "index": 18,
                      "docs": [
                        "A remote lock with the corresponding data could not be found."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [

                      ],
                      "index": 19,
                      "docs": [
                        "The unlock operation cannot succeed because there are still consumers of the lock."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 584,
            "type": {
              "path": [
                "cumulus_pallet_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [

                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 585,
            "type": {
              "path": [
                "pallet_ethereum_xcm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EthereumXcmExecutionSuspended",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Xcm to Ethereum execution is suspended"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 586,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "ConfigData"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_individual",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 587,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "PageIndexData"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "begin_used",
                      "type": 4,
                      "typeName": "PageCounter",
                      "docs": [

                      ]
                    },
                    {
                      "name": "end_used",
                      "type": 4,
                      "typeName": "PageCounter",
                      "docs": [

                      ]
                    },
                    {
                      "name": "overweight_count",
                      "type": 11,
                      "typeName": "OverweightIndex",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 588,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 589
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 589,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  4,
                  14
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 590,
            "type": {
              "path": [
                "cumulus_pallet_dmp_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unknown",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The message index given is unknown."
                      ]
                    },
                    {
                      "name": "OverLimit",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The amount of weight given is possibly not enough for executing the message."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 591,
            "type": {
              "path": [
                "pallet_asset_manager",
                "pallet",
                "AssetInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "creator",
                      "type": 0,
                      "typeName": "T::AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalanceOf<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 592,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 141
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 593,
            "type": {
              "path": [
                "pallet_asset_manager",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ErrorCreatingAsset",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetAlreadyExists",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "AssetDoesNotExist",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooLowNumAssetsWeightHint",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "LocalAssetLimitReached",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "ErrorDestroyingAsset",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NotSufficientDeposit",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "NonExistentLocalAsset",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [
                "An error that can occur while executing the mapping pallet's logic."
              ]
            }
          },
          {
            "id": 594,
            "type": {
              "path": [
                "orml_xtokens",
                "module",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetHasNoReserve",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Asset has no reserve location."
                      ]
                    },
                    {
                      "name": "NotCrossChainTransfer",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Not cross-chain transfer."
                      ]
                    },
                    {
                      "name": "InvalidDest",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Invalid transfer destination."
                      ]
                    },
                    {
                      "name": "NotCrossChainTransferableCurrency",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Currency is not cross-chain transferable."
                      ]
                    },
                    {
                      "name": "UnweighableMessage",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The message's weight could not be determined."
                      ]
                    },
                    {
                      "name": "XcmExecutionFailed",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "XCM execution failed."
                      ]
                    },
                    {
                      "name": "CannotReanchor",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Could not re-anchor the assets to declare the fees for the",
                        "destination chain."
                      ]
                    },
                    {
                      "name": "InvalidAncestry",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Could not get ancestry of asset reserve location."
                      ]
                    },
                    {
                      "name": "InvalidAsset",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "The MultiAsset is invalid."
                      ]
                    },
                    {
                      "name": "DestinationNotInvertible",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The destination `MultiLocation` provided cannot be inverted."
                      ]
                    },
                    {
                      "name": "BadVersion",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "The version of the `Versioned` value used is not able to be",
                        "interpreted."
                      ]
                    },
                    {
                      "name": "DistinctReserveForAssetAndFee",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [
                        "We tried sending distinct asset and fee but they have different",
                        "reserve chains."
                      ]
                    },
                    {
                      "name": "ZeroFee",
                      "fields": [

                      ],
                      "index": 12,
                      "docs": [
                        "The fee is zero."
                      ]
                    },
                    {
                      "name": "ZeroAmount",
                      "fields": [

                      ],
                      "index": 13,
                      "docs": [
                        "The transfering asset amount is zero."
                      ]
                    },
                    {
                      "name": "TooManyAssetsBeingSent",
                      "fields": [

                      ],
                      "index": 14,
                      "docs": [
                        "The number of assets to be sent is over the maximum."
                      ]
                    },
                    {
                      "name": "AssetIndexNonExistent",
                      "fields": [

                      ],
                      "index": 15,
                      "docs": [
                        "The specified index does not exist in a MultiAssets struct."
                      ]
                    },
                    {
                      "name": "FeeNotEnough",
                      "fields": [

                      ],
                      "index": 16,
                      "docs": [
                        "Fee is not enough."
                      ]
                    },
                    {
                      "name": "NotSupportedMultiLocation",
                      "fields": [

                      ],
                      "index": 17,
                      "docs": [
                        "Not supported MultiLocation"
                      ]
                    },
                    {
                      "name": "MinXcmFeeNotDefined",
                      "fields": [

                      ],
                      "index": 18,
                      "docs": [
                        "MinXcmFee not registered for certain reserve location"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 595,
            "type": {
              "path": [
                "darwinia_asset_limit",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetDoesNotExist",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Asset does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 596,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 597
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 597,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  448,
                  598,
                  603
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 598,
            "type": {
              "path": [
                "fp_rpc",
                "TransactionStatus"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "transaction_hash",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "transaction_index",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    },
                    {
                      "name": "from",
                      "type": 146,
                      "typeName": "H160",
                      "docs": [

                      ]
                    },
                    {
                      "name": "to",
                      "type": 599,
                      "typeName": "Option<H160>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "contract_address",
                      "type": 599,
                      "typeName": "Option<H160>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "logs",
                      "type": 600,
                      "typeName": "Vec<Log>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "logs_bloom",
                      "type": 601,
                      "typeName": "Bloom",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 599,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 146
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 146,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 600,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 156
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 601,
            "type": {
              "path": [
                "ethbloom",
                "Bloom"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 602,
                      "typeName": "[u8; BLOOM_SIZE]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 602,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "array": {
                  "len": 256,
                  "type": 2
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 603,
            "type": {
              "path": [
                "ethereum",
                "receipt",
                "ReceiptV3"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "name": null,
                          "type": 604,
                          "typeName": "EIP658ReceiptData",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EIP2930",
                      "fields": [
                        {
                          "name": null,
                          "type": 604,
                          "typeName": "EIP2930ReceiptData",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EIP1559",
                      "fields": [
                        {
                          "name": null,
                          "type": 604,
                          "typeName": "EIP1559ReceiptData",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 604,
            "type": {
              "path": [
                "ethereum",
                "receipt",
                "EIP658ReceiptData"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "status_code",
                      "type": 2,
                      "typeName": "u8",
                      "docs": [

                      ]
                    },
                    {
                      "name": "used_gas",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "logs_bloom",
                      "type": 601,
                      "typeName": "Bloom",
                      "docs": [

                      ]
                    },
                    {
                      "name": "logs",
                      "type": 600,
                      "typeName": "Vec<Log>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 605,
            "type": {
              "path": [
                "ethereum",
                "block",
                "Block"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 448
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "header",
                      "type": 606,
                      "typeName": "Header",
                      "docs": [

                      ]
                    },
                    {
                      "name": "transactions",
                      "type": 608,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "ommers",
                      "type": 609,
                      "typeName": "Vec<Header>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 606,
            "type": {
              "path": [
                "ethereum",
                "header",
                "Header"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "ommers_hash",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "beneficiary",
                      "type": 146,
                      "typeName": "H160",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "transactions_root",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "receipts_root",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "logs_bloom",
                      "type": 601,
                      "typeName": "Bloom",
                      "docs": [

                      ]
                    },
                    {
                      "name": "difficulty",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "number",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "gas_limit",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "gas_used",
                      "type": 428,
                      "typeName": "U256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "timestamp",
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "extra_data",
                      "type": 14,
                      "typeName": "Bytes",
                      "docs": [

                      ]
                    },
                    {
                      "name": "mix_hash",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonce",
                      "type": 607,
                      "typeName": "H64",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 607,
            "type": {
              "path": [
                "ethereum_types",
                "hash",
                "H64"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 104,
                      "typeName": "[u8; 8]",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 608,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 448
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 609,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 606
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 610,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 603
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 611,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 598
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 612,
            "type": {
              "path": [
                "pallet_ethereum",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSignature",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Signature is invalid."
                      ]
                    },
                    {
                      "name": "PreLogExists",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Pre-log is present, therefore transact is not allowed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 613,
            "type": {
              "path": [
                "pallet_evm",
                "CodeMetadata"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "size",
                      "type": 11,
                      "typeName": "u64",
                      "docs": [

                      ]
                    },
                    {
                      "name": "hash",
                      "type": 12,
                      "typeName": "H256",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 614,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  146,
                  12
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 615,
            "type": {
              "path": [
                "pallet_evm",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BalanceLow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Not enough balance to perform action"
                      ]
                    },
                    {
                      "name": "FeeOverflow",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "Calculating total fee overflowed"
                      ]
                    },
                    {
                      "name": "PaymentOverflow",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Calculating total payment overflowed"
                      ]
                    },
                    {
                      "name": "WithdrawFailed",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Withdraw fee failed"
                      ]
                    },
                    {
                      "name": "GasPriceTooLow",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Gas price is too low."
                      ]
                    },
                    {
                      "name": "InvalidNonce",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Nonce is invalid"
                      ]
                    },
                    {
                      "name": "GasLimitTooLow",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Gas limit is too low."
                      ]
                    },
                    {
                      "name": "GasLimitTooHigh",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Gas limit is too high."
                      ]
                    },
                    {
                      "name": "Undefined",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "Undefined error."
                      ]
                    },
                    {
                      "name": "Reentrancy",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "EVM reentrancy"
                      ]
                    },
                    {
                      "name": "TransactionMustComeFromEOA",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "EIP-3607,"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 616,
            "type": {
              "path": [
                "darwinia_message_transact",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MessageTransactError",
                      "fields": [
                        {
                          "name": null,
                          "type": 617,
                          "typeName": "EvmTxErrorWrapper",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "EVM validation errors."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 617,
            "type": {
              "path": [
                "darwinia_message_transact",
                "EvmTxErrorWrapper"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "GasLimitTooLow",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GasLimitTooHigh",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "GasPriceTooLow",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "PriorityFeeTooHigh",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "BalanceTooLow",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TxNonceTooLow",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TxNonceTooHigh",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidFeeInput",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidChainId",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidSignature",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "UnknownError",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 618,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "number",
                      "type": 89,
                      "typeName": "Number",
                      "docs": [

                      ]
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": [

                      ]
                    },
                    {
                      "name": "digest",
                      "type": 15,
                      "typeName": "Digest",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 619,
            "type": {
              "path": [
                "pallet_bridge_grandpa",
                "storage_types",
                "StoredAuthoritySet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authorities",
                      "type": 620,
                      "typeName": "StoredAuthorityList<<T as Config<I>>::MaxBridgedAuthorities>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "set_id",
                      "type": 11,
                      "typeName": "SetId",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 620,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 472
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 471,
                      "typeName": "Vec<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 621,
            "type": {
              "path": [
                "pallet_bridge_grandpa",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidJustification",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "The given justification is invalid for the given header."
                      ]
                    },
                    {
                      "name": "InvalidAuthoritySet",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The authority set from the underlying header chain is invalid."
                      ]
                    },
                    {
                      "name": "TooManyRequests",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "There are too many requests for the current window to handle."
                      ]
                    },
                    {
                      "name": "OldHeader",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "The header being imported is older than the best finalized header known to the pallet."
                      ]
                    },
                    {
                      "name": "UnknownHeader",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The header is unknown to the pallet."
                      ]
                    },
                    {
                      "name": "UnsupportedScheduledChange",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The scheduled authority set change found in the header is unsupported by the pallet.",
                        "",
                        "This is the case for non-standard (e.g forced) authority set changes."
                      ]
                    },
                    {
                      "name": "NotInitialized",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "The pallet is not yet initialized."
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "The pallet has already been initialized."
                      ]
                    },
                    {
                      "name": "StorageRootMismatch",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "The storage proof doesn't contains storage root. So it is invalid for given header."
                      ]
                    },
                    {
                      "name": "TooManyAuthoritiesInSet",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "Too many authorities in the set."
                      ]
                    },
                    {
                      "name": "TooLargeHeader",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "Too large header."
                      ]
                    },
                    {
                      "name": "BridgeModule",
                      "fields": [
                        {
                          "name": null,
                          "type": 622,
                          "typeName": "bp_runtime::OwnedBridgeModuleError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Error generated by the `OwnedBridgeModule` trait."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 622,
            "type": {
              "path": [
                "bp_runtime",
                "OwnedBridgeModuleError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Halted",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 623,
            "type": {
              "path": [
                "bp_parachains",
                "ParaInfo"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "best_head_hash",
                      "type": 624,
                      "typeName": "BestParaHeadHash",
                      "docs": [

                      ]
                    },
                    {
                      "name": "next_imported_hash_position",
                      "type": 4,
                      "typeName": "u32",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 624,
            "type": {
              "path": [
                "bp_parachains",
                "BestParaHeadHash"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "at_relay_block_number",
                      "type": 4,
                      "typeName": "RelayBlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "head_hash",
                      "type": 12,
                      "typeName": "ParaHash",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 625,
            "type": {
              "path": [
                "bp_polkadot_core",
                "parachains",
                "ParaHead"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": "Vec<u8>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 626,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  159,
                  4
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 627,
            "type": {
              "path": [
                "pallet_bridge_parachains",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnknownRelayChainBlock",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Relay chain block hash is unknown to us."
                      ]
                    },
                    {
                      "name": "InvalidRelayChainBlockNumber",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The number of stored relay block is different from what the relayer has provided."
                      ]
                    },
                    {
                      "name": "InvalidStorageProof",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "Invalid storage proof has been passed."
                      ]
                    },
                    {
                      "name": "UnknownParaHead",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Given parachain head is unknown."
                      ]
                    },
                    {
                      "name": "StorageRootMismatch",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "The storage proof doesn't contains storage root. So it is invalid for given header."
                      ]
                    },
                    {
                      "name": "FailedToExtractStateRoot",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "Failed to extract state root from given parachain head."
                      ]
                    },
                    {
                      "name": "BridgeModule",
                      "fields": [
                        {
                          "name": null,
                          "type": 622,
                          "typeName": "bp_runtime::OwnedBridgeModuleError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Error generated by the `OwnedBridgeModule` trait."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 628,
            "type": {
              "path": [
                "bp_messages",
                "InboundLaneData"
              ],
              "params": [
                {
                  "name": "RelayerId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "relayers",
                      "type": 629,
                      "typeName": "VecDeque<UnrewardedRelayer<RelayerId>>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "last_confirmed_nonce",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 629,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 630
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 630,
            "type": {
              "path": [
                "bp_messages",
                "UnrewardedRelayer"
              ],
              "params": [
                {
                  "name": "RelayerId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "relayer",
                      "type": 0,
                      "typeName": "RelayerId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "messages",
                      "type": 168,
                      "typeName": "DeliveredMessages",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 631,
            "type": {
              "path": [
                "bp_messages",
                "OutboundLaneData"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "oldest_unpruned_nonce",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "latest_received_nonce",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "latest_generated_nonce",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 632,
            "type": {
              "path": [
                "bp_messages",
                "MessageKey"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lane_id",
                      "type": 18,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "nonce",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 633,
            "type": {
              "path": [
                "bp_messages",
                "MessageData"
              ],
              "params": [
                {
                  "name": "Fee",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "payload",
                      "type": 14,
                      "typeName": "MessagePayload",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Fee",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 634,
            "type": {
              "path": [
                "pallet_bridge_messages",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotOperatingNormally",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Pallet is not in Normal operating mode."
                      ]
                    },
                    {
                      "name": "MessageIsTooLarge",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The message is too large to be sent over the bridge."
                      ]
                    },
                    {
                      "name": "MessageRejectedByChainVerifier",
                      "fields": [
                        {
                          "name": null,
                          "type": 635,
                          "typeName": "VerificationError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Message has been treated as invalid by chain verifier."
                      ]
                    },
                    {
                      "name": "MessageRejectedByLaneVerifier",
                      "fields": [
                        {
                          "name": null,
                          "type": 635,
                          "typeName": "VerificationError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Message has been treated as invalid by lane verifier."
                      ]
                    },
                    {
                      "name": "FailedToWithdrawMessageFee",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "Submitter has failed to pay fee for delivering and dispatching messages."
                      ]
                    },
                    {
                      "name": "TooManyMessagesInTheProof",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "The transaction brings too many messages."
                      ]
                    },
                    {
                      "name": "InvalidMessagesProof",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Invalid messages has been submitted."
                      ]
                    },
                    {
                      "name": "InvalidMessagesDeliveryProof",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "Invalid messages delivery proof has been submitted."
                      ]
                    },
                    {
                      "name": "InvalidUnrewardedRelayers",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "The bridged chain has invalid `UnrewardedRelayers` in its storage (fatal for the lane)."
                      ]
                    },
                    {
                      "name": "InvalidUnrewardedRelayersState",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [
                        "The relayer has declared invalid unrewarded relayers state in the",
                        "`receive_messages_delivery_proof` call."
                      ]
                    },
                    {
                      "name": "TryingToConfirmMoreMessagesThanExpected",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [
                        "The number of actually confirmed messages is going to be larger than the number of",
                        "messages in the proof. This may mean that this or bridged chain storage is corrupted."
                      ]
                    },
                    {
                      "name": "BridgeModule",
                      "fields": [
                        {
                          "name": null,
                          "type": 622,
                          "typeName": "bp_runtime::OwnedBridgeModuleError",
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Error generated by the `OwnedBridgeModule` trait."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 635,
            "type": {
              "path": [
                "bp_messages",
                "VerificationError"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MessageRejectedByOutBoundLane",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageDispatchWithBadOrigin",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageWithTooLowFee",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "TooManyPendingMessages",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "EmptyMessageProof",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "InvalidMessageWeight",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessagesCountMismatch",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MissingRequiredMessage",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToDecodeMessage",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "MessageTooLarge",
                      "fields": [

                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "FailedToDecodeOutboundLaneData",
                      "fields": [

                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Other",
                      "fields": [

                      ],
                      "index": 11,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 636,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "Relayer"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "collateral",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 637,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 636
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 638,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "Order"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lane",
                      "type": 18,
                      "typeName": "LaneId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "message",
                      "type": 11,
                      "typeName": "MessageNonce",
                      "docs": [

                      ]
                    },
                    {
                      "name": "sent_time",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": [

                      ]
                    },
                    {
                      "name": "confirm_time",
                      "type": 54,
                      "typeName": "Option<BlockNumber>",
                      "docs": [

                      ]
                    },
                    {
                      "name": "collateral_per_assigned_relayer",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "assigned_relayers",
                      "type": 639,
                      "typeName": "Vec<AssignedRelayer<AccountId, BlockNumber, Balance>>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 639,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "sequence": {
                  "type": 640
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 640,
            "type": {
              "path": [
                "pallet_fee_market",
                "types",
                "AssignedRelayer"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": [

                      ]
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": [

                      ]
                    },
                    {
                      "name": "valid_range",
                      "type": 641,
                      "typeName": "Range<BlockNumber>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 641,
            "type": {
              "path": [
                "Range"
              ],
              "params": [
                {
                  "name": "Idx",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "start",
                      "type": 4,
                      "typeName": "Idx",
                      "docs": [

                      ]
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "Idx",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 642,
            "type": {
              "path": [
                "pallet_fee_market",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientBalance",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [
                        "Insufficient balance."
                      ]
                    },
                    {
                      "name": "AlreadyEnrolled",
                      "fields": [

                      ],
                      "index": 1,
                      "docs": [
                        "The relayer has been enrolled."
                      ]
                    },
                    {
                      "name": "NotEnrolled",
                      "fields": [

                      ],
                      "index": 2,
                      "docs": [
                        "This relayer doesn't enroll ever."
                      ]
                    },
                    {
                      "name": "CollateralTooLow",
                      "fields": [

                      ],
                      "index": 3,
                      "docs": [
                        "Locked collateral is too low to cover one order."
                      ]
                    },
                    {
                      "name": "NewCollateralShouldLargerThanBefore",
                      "fields": [

                      ],
                      "index": 4,
                      "docs": [
                        "New collateral should large than the original one."
                      ]
                    },
                    {
                      "name": "NewCollateralShouldLessThanBefore",
                      "fields": [

                      ],
                      "index": 5,
                      "docs": [
                        "New collateral should less than the original one."
                      ]
                    },
                    {
                      "name": "StillHasOrdersNotConfirmed",
                      "fields": [

                      ],
                      "index": 6,
                      "docs": [
                        "Update locked collateral is not allow since some orders are not confirm."
                      ]
                    },
                    {
                      "name": "RelayFeeTooLow",
                      "fields": [

                      ],
                      "index": 7,
                      "docs": [
                        "The fee is lower than MinimumRelayFee."
                      ]
                    },
                    {
                      "name": "OccupiedRelayer",
                      "fields": [

                      ],
                      "index": 8,
                      "docs": [
                        "The relayer is occupied, and can't cancel enrollment now."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 643,
            "type": {
              "path": [
                "fp_self_contained",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 0
                },
                {
                  "name": "Call",
                  "type": 370
                },
                {
                  "name": "Signature",
                  "type": 483
                },
                {
                  "name": "Extra",
                  "type": 644
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 655,
                      "typeName": "sp_runtime::generic::UncheckedExtrinsic<Address, Call, Signature, Extra\n>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 644,
            "type": {
              "path": [

              ],
              "params": [

              ],
              "def": {
                "tuple": [
                  645,
                  646,
                  647,
                  648,
                  649,
                  651,
                  652,
                  653,
                  654
                ]
              },
              "docs": [

              ]
            }
          },
          {
            "id": 645,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 646,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 647,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 648,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 649,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 650,
                      "typeName": "Era",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 650,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "params": [

              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "fields": [

                      ],
                      "index": 0,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 27,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 28,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 29,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 30,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 31,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 32,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 33,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 34,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 35,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 36,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 37,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 38,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 39,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 40,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 41,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 42,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 43,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 44,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 45,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 46,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 47,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 48,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 49,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 50,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 51,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 52,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 53,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 54,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 55,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 56,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 57,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 58,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 59,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 60,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 61,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 62,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 63,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 64,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 65,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 66,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 67,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 68,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 69,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 70,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 71,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 72,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 73,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 74,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 75,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 76,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 77,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 78,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 79,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 80,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 81,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 82,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 83,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 84,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 85,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 86,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 87,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 88,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 89,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 90,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 91,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 92,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 93,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 94,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 95,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 96,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 97,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 98,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 99,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 100,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 101,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 102,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 103,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 104,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 105,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 106,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 107,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 108,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 109,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 110,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 111,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 112,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 113,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 114,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 115,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 116,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 117,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 118,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 119,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 120,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 121,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 122,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 123,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 124,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 125,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 126,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 127,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 128,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 129,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 130,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 131,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 132,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 133,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 134,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 135,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 136,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 137,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 138,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 139,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 140,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 141,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 142,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 143,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 144,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 145,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 146,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 147,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 148,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 149,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 150,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 151,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 152,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 153,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 154,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 155,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 156,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 157,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 158,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 159,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 160,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 161,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 162,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 163,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 164,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 165,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 166,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 167,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 168,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 169,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 170,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 171,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 172,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 173,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 174,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 175,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 176,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 177,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 178,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 179,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 180,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 181,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 182,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 183,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 184,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 185,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 186,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 187,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 188,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 189,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 190,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 191,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 192,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 193,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 194,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 195,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 196,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 197,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 198,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 199,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 200,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 201,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 202,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 203,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 204,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 205,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 206,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 207,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 208,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 209,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 210,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 211,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 212,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 213,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 214,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 215,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 216,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 217,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 218,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 219,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 220,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 221,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 222,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 223,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 224,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 225,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 226,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 227,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 228,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 229,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 230,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 231,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 232,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 233,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 234,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 235,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 236,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 237,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 238,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 239,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 240,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 241,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 242,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 243,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 244,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 245,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 246,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 247,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 248,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 249,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 250,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 251,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 252,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 253,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 254,
                      "docs": [

                      ]
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": [

                          ]
                        }
                      ],
                      "index": 255,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 651,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 89,
                      "typeName": "T::Nonce",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 652,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 653,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "ChargeTransactionPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 92,
                      "typeName": "BalanceOf<T>",
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 654,
            "type": {
              "path": [
                "darwinia_runtime",
                "BridgeRejectObsoleteHeadersAndMessages"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 655,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 0
                },
                {
                  "name": "Call",
                  "type": 370
                },
                {
                  "name": "Signature",
                  "type": 483
                },
                {
                  "name": "Extra",
                  "type": 644
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 14,
                      "typeName": null,
                      "docs": [

                      ]
                    }
                  ]
                }
              },
              "docs": [

              ]
            }
          },
          {
            "id": 656,
            "type": {
              "path": [
                "darwinia_runtime",
                "Runtime"
              ],
              "params": [

              ],
              "def": {
                "composite": {
                  "fields": [

                  ]
                }
              },
              "docs": [

              ]
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "items": [
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "type": {
                  "plain": 8
                },
                "fallback": "0x000000000000",
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 14
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "type": {
                  "plain": 12
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "type": {
                  "plain": 15
                },
                "fallback": "0x00",
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "type": {
                  "plain": 19
                },
                "fallback": "0x00",
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 12,
                    "value": 183
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "type": {
                  "plain": 184
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "type": {
                  "plain": 182
                },
                "fallback": "0x00",
                "docs": [
                  " The execution phase of the block."
                ]
              }
            ]
          },
          "calls": {
            "type": 185
          },
          "events": {
            "type": 22
          },
          "constants": [
            {
              "name": "BlockWeights",
              "type": 189,
              "value": "0x025b1f5d00070088526a7402004001c2a0a91d000107d0c33576510200e000010700e6bd4f570200f000010000c2a0a91d000107d065ca906e0200300101070088526a7402004001010700a2941a1d02005000c2a0a91d00000000",
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "type": 193,
              "value": "0x00003c000000500000005000",
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "type": 4,
              "value": "0x00010000",
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "type": 195,
              "value": "0x40787d010000000000e1f50500000000",
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "type": 196,
              "value": "0x2444617277696e6961325044617277696e69614f6666696369616c5275737400000000651900000000000038dd718d5cc53262d401000000df6acb689907609b0400000037e397fc7c91f5e40200000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000ab3c0572291feb8b01000000bc9d89904f5b923f0100000037c8bb1350a9a2a804000000f3ff14d5ab52705903000000ea93e3f16f3d696202000000582211f65bb14b8905000000e65b00e46cedd0aa02000000bd78255d4feeea1f040000000000000000",
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "type": 40,
              "value": "0x1200",
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "errors": {
            "type": 200
          },
          "index": 0
        },
        {
          "name": "ParachainSystem",
          "storage": {
            "prefix": "ParachainSystem",
            "items": [
              {
                "name": "UnincludedSegment",
                "modifier": "Default",
                "type": {
                  "plain": 201
                },
                "fallback": "0x00",
                "docs": [
                  " Latest included block descendants the runtime accepted. In other words, these are",
                  " ancestors of the currently executing block which have not been included in the observed",
                  " relay-chain state.",
                  "",
                  " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                  " in the pallet."
                ]
              },
              {
                "name": "AggregatedUnincludedSegment",
                "modifier": "Optional",
                "type": {
                  "plain": 211
                },
                "fallback": "0x00",
                "docs": [
                  " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                  " latest the latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                  " respect to relay chain constraints."
                ]
              },
              {
                "name": "PendingValidationCode",
                "modifier": "Default",
                "type": {
                  "plain": 14
                },
                "fallback": "0x00",
                "docs": [
                  " In case of a scheduled upgrade, this storage field contains the validation code to be",
                  " applied.",
                  "",
                  " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                  " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                  " with the new validation code. This concludes the upgrade process."
                ]
              },
              {
                "name": "NewValidationCode",
                "modifier": "Optional",
                "type": {
                  "plain": 14
                },
                "fallback": "0x00",
                "docs": [
                  " Validation code that is set by the parachain and is to be communicated to collator and",
                  " consequently the relay-chain.",
                  "",
                  " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                  " the value."
                ]
              },
              {
                "name": "ValidationData",
                "modifier": "Optional",
                "type": {
                  "plain": 212
                },
                "fallback": "0x00",
                "docs": [
                  " The [`PersistedValidationData`] set for this block.",
                  " This value is expected to be set only once per block and it's never stored",
                  " in the trie."
                ]
              },
              {
                "name": "DidSetValidationCode",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " Were the validation data set to notify the relay chain?"
                ]
              },
              {
                "name": "LastRelayChainBlockNumber",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The relay chain block number associated with the last parachain block."
                ]
              },
              {
                "name": "UpgradeRestrictionSignal",
                "modifier": "Default",
                "type": {
                  "plain": 214
                },
                "fallback": "0x00",
                "docs": [
                  " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                  " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                  " candidate will be invalid.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "UpgradeGoAhead",
                "modifier": "Default",
                "type": {
                  "plain": 209
                },
                "fallback": "0x00",
                "docs": [
                  " Optional upgrade go-ahead signal from the relay-chain.",
                  "",
                  " This storage item is a mirror of the corresponding value for the current parachain from the",
                  " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                  " set after the inherent."
                ]
              },
              {
                "name": "RelayStateProof",
                "modifier": "Optional",
                "type": {
                  "plain": 216
                },
                "fallback": "0x00",
                "docs": [
                  " The state proof for the last relay parent block.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "RelevantMessagingState",
                "modifier": "Optional",
                "type": {
                  "plain": 218
                },
                "fallback": "0x00",
                "docs": [
                  " The snapshot of some state related to messaging relevant to the current parachain as per",
                  " the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "HostConfiguration",
                "modifier": "Optional",
                "type": {
                  "plain": 223
                },
                "fallback": "0x00",
                "docs": [
                  " The parachain host configuration that was obtained from the relay parent.",
                  "",
                  " This field is meant to be updated each block with the validation data inherent. Therefore,",
                  " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                  "",
                  " This data is also absent from the genesis."
                ]
              },
              {
                "name": "LastDmqMqcHead",
                "modifier": "Default",
                "type": {
                  "plain": 225
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The last downward message queue chain head we have observed.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "LastHrmpMqcHeads",
                "modifier": "Default",
                "type": {
                  "plain": 226
                },
                "fallback": "0x00",
                "docs": [
                  " The message queue chain heads we have observed per each channel incoming channel.",
                  "",
                  " This value is loaded before and saved after processing inbound downward messages carried",
                  " by the system inherent."
                ]
              },
              {
                "name": "ProcessedDownwardMessages",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of downward messages processed in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpWatermark",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " HRMP watermark that was set in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "HrmpOutboundMessages",
                "modifier": "Default",
                "type": {
                  "plain": 229
                },
                "fallback": "0x00",
                "docs": [
                  " HRMP messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "UpwardMessages",
                "modifier": "Default",
                "type": {
                  "plain": 188
                },
                "fallback": "0x00",
                "docs": [
                  " Upward messages that were sent in a block.",
                  "",
                  " This will be cleared in `on_initialize` of each new block."
                ]
              },
              {
                "name": "PendingUpwardMessages",
                "modifier": "Default",
                "type": {
                  "plain": 188
                },
                "fallback": "0x00",
                "docs": [
                  " Upward messages that are still pending and not yet send to the relay chain."
                ]
              },
              {
                "name": "AnnouncedHrmpMessagesPerCandidate",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                  " announcing the weight of `on_initialize` and `on_finalize`."
                ]
              },
              {
                "name": "ReservedXcmpWeightOverride",
                "modifier": "Optional",
                "type": {
                  "plain": 9
                },
                "fallback": "0x00",
                "docs": [
                  " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "ReservedDmpWeightOverride",
                "modifier": "Optional",
                "type": {
                  "plain": 9
                },
                "fallback": "0x00",
                "docs": [
                  " The weight we reserve at the beginning of the block for processing DMP messages. This",
                  " overrides the amount set in the Config trait."
                ]
              },
              {
                "name": "AuthorizedUpgrade",
                "modifier": "Optional",
                "type": {
                  "plain": 231
                },
                "fallback": "0x00",
                "docs": [
                  " The next authorized upgrade, if there is one."
                ]
              },
              {
                "name": "CustomValidationHeadData",
                "modifier": "Optional",
                "type": {
                  "plain": 14
                },
                "fallback": "0x00",
                "docs": [
                  " A custom head data that should be returned as result of `validate_block`.",
                  "",
                  " See `Pallet::set_custom_validation_head_data` for more information."
                ]
              }
            ]
          },
          "calls": {
            "type": 232
          },
          "events": {
            "type": 31
          },
          "constants": [

          ],
          "errors": {
            "type": 241
          },
          "index": 1
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "items": [
              {
                "name": "Now",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " Did the timestamp get updated in this block?"
                ]
              }
            ]
          },
          "calls": {
            "type": 242
          },
          "events": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "type": 11,
              "value": "0x7017000000000000",
              "docs": [
                " The minimum period between blocks. Beware that this is different to the *expected*",
                " period that the block production apparatus provides. Your chosen consensus system will",
                " generally work with this to determine a sensible block time. e.g. For Aura, it will be",
                " double this period on default settings."
              ]
            }
          ],
          "errors": null,
          "index": 2
        },
        {
          "name": "ParachainInfo",
          "storage": {
            "prefix": "ParachainInfo",
            "items": [
              {
                "name": "ParachainId",
                "modifier": "Default",
                "type": {
                  "plain": 83
                },
                "fallback": "0x64000000",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 243
          },
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 3
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "items": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total units issued in the system."
                ]
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total units of outstanding deactivated balance in the system."
                ]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 244
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 248
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Named reserves on some account balances."
                ]
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 251
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Holds on account balances."
                ]
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 251
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Freeze locks on account balances."
                ]
              }
            ]
          },
          "calls": {
            "type": 254
          },
          "events": {
            "type": 33
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ]
            },
            {
              "name": "MaxLocks",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            },
            {
              "name": "MaxHolds",
              "type": 4,
              "value": "0x00000000",
              "docs": [
                " The maximum number of holds that can exist on an account at any time."
              ]
            },
            {
              "name": "MaxFreezes",
              "type": 4,
              "value": "0x00000000",
              "docs": [
                " The maximum number of individual freeze locks that can exist on an account at any time."
              ]
            }
          ],
          "errors": {
            "type": 255
          },
          "index": 5
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "items": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "type": {
                  "plain": 256
                },
                "fallback": "0x000064a7b3b6e00d0000000000000000",
                "docs": [

                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "plain": 257
                },
                "fallback": "0x00",
                "docs": [

                ]
              }
            ]
          },
          "calls": null,
          "events": {
            "type": 35
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "type": 2,
              "value": "0x05",
              "docs": [
                " A fee mulitplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multipled by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "errors": null,
          "index": 6
        },
        {
          "name": "Assets",
          "storage": {
            "prefix": "Assets",
            "items": [
              {
                "name": "Asset",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 11,
                    "value": 258
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Details of an asset."
                ]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Blake2128Concat"
                    ],
                    "key": 260,
                    "value": 261
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The holdings of a specific account for a specific asset."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Blake2128Concat",
                      "Blake2128Concat"
                    ],
                    "key": 264,
                    "value": 265
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Approved balance transfers. First balance is the amount approved for transfer. Second",
                  " is the amount of `T::Currency` reserved for storing this.",
                  " First key is the asset ID, second key is the owner and third key is the delegate."
                ]
              },
              {
                "name": "Metadata",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 11,
                    "value": 266
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000",
                "docs": [
                  " Metadata of an asset."
                ]
              }
            ]
          },
          "calls": {
            "type": 268
          },
          "events": {
            "type": 36
          },
          "constants": [
            {
              "name": "RemoveItemsLimit",
              "type": 4,
              "value": "0xe8030000",
              "docs": [
                " Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.",
                "",
                " Must be configured to result in a weight that makes each call fit in a block."
              ]
            },
            {
              "name": "AssetDeposit",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for an asset."
              ]
            },
            {
              "name": "AssetAccountDeposit",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The amount of funds that must be reserved for a non-provider asset account to be",
                " maintained."
              ]
            },
            {
              "name": "MetadataDepositBase",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved when adding metadata to your asset."
              ]
            },
            {
              "name": "MetadataDepositPerByte",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes you store in your",
                " metadata."
              ]
            },
            {
              "name": "ApprovalDeposit",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The amount of funds that must be reserved when creating a new approval."
              ]
            },
            {
              "name": "StringLimit",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum length of a name or symbol stored on-chain."
              ]
            }
          ],
          "errors": {
            "type": 269
          },
          "index": 7
        },
        {
          "name": "Vesting",
          "storage": {
            "prefix": "Vesting",
            "items": [
              {
                "name": "Vesting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 270
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information regarding the vesting of a given account."
                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "plain": 273
                },
                "fallback": "0x00",
                "docs": [
                  " Storage version of the pallet.",
                  "",
                  " New networks start with latest version, as determined by the genesis build."
                ]
              }
            ]
          },
          "calls": {
            "type": 274
          },
          "events": {
            "type": 38
          },
          "constants": [
            {
              "name": "MinVestedTransfer",
              "type": 6,
              "value": "0x000064a7b3b6e00d0000000000000000",
              "docs": [
                " The minimum amount transferred to call `vested_transfer`."
              ]
            },
            {
              "name": "MaxVestingSchedules",
              "type": 4,
              "value": "0x1c000000",
              "docs": [

              ]
            }
          ],
          "errors": {
            "type": 275
          },
          "index": 8
        },
        {
          "name": "Deposit",
          "storage": {
            "prefix": "Deposit",
            "items": [
              {
                "name": "Deposits",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 276
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All deposits.",
                  "",
                  " The items must be sorted by the id."
                ]
              }
            ]
          },
          "calls": {
            "type": 279
          },
          "events": {
            "type": 39
          },
          "constants": [
            {
              "name": "MinLockingAmount",
              "type": 6,
              "value": "0x000064a7b3b6e00d0000000000000000",
              "docs": [
                " Minimum amount to lock at least."
              ]
            },
            {
              "name": "MaxDeposits",
              "type": 4,
              "value": "0x00020000",
              "docs": [
                " Maximum deposit count.",
                "",
                " In currently design, this should not be greater than `u16::MAX`."
              ]
            }
          ],
          "errors": {
            "type": 280
          },
          "index": 9
        },
        {
          "name": "AccountMigration",
          "storage": {
            "prefix": "AccountMigration",
            "items": [
              {
                "name": "Accounts",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 42,
                    "value": 3
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " [`frame_system::Account`] data.",
                  "",
                  " <https://github.dev/paritytech/substrate/blob/19162e43be45817b44c7d48e50d03f074f60fbf4/frame/system/src/lib.rs#L545>"
                ]
              },
              {
                "name": "KtonAccounts",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 42,
                    "value": 281
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " [`pallet_asset::AssetAccount`] data.",
                  "",
                  " https://github.dev/paritytech/substrate/blob/polkadot-v0.9.30/frame/assets/src/types.rs#L115"
                ]
              },
              {
                "name": "Deposits",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 42,
                    "value": 278
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " [`darwinia_deposit::Deposits`] data."
                ]
              },
              {
                "name": "Identities",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 42,
                    "value": 283
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " [`pallet_identity::IdentityOf`] data.",
                  "",
                  " <https://github.com/paritytech/substrate/blob/polkadot-v0.9.30/frame/identity/src/lib.rs#L163>"
                ]
              },
              {
                "name": "Ledgers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 42,
                    "value": 322
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " [`darwinia_staking::Ledgers`] data."
                ]
              },
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 42,
                    "value": 45
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Multisig migration caches."
                ]
              }
            ]
          },
          "calls": {
            "type": 330
          },
          "events": {
            "type": 41
          },
          "constants": [

          ],
          "errors": {
            "type": 334
          },
          "index": 10
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "items": [
              {
                "name": "Author",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Author of current block."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 11
        },
        {
          "name": "DarwiniaStaking",
          "storage": {
            "prefix": "DarwiniaStaking",
            "items": [
              {
                "name": "Ledgers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 322
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All staking ledgers."
                ]
              },
              {
                "name": "RingPool",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Total staked RING.",
                  "",
                  " This will count RING + deposit(locking RING)."
                ]
              },
              {
                "name": "KtonPool",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Total staked KTON."
                ]
              },
              {
                "name": "Collators",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 50
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map from (wannabe) collator to the preferences of that collator."
                ]
              },
              {
                "name": "ExposureCacheStates",
                "modifier": "Default",
                "type": {
                  "plain": 335
                },
                "fallback": "0x000102",
                "docs": [
                  " Exposure cache states.",
                  "",
                  " To avoid extra DB RWs during new session, such as:",
                  " ```nocompile",
                  " previous = current;",
                  " current = next;",
                  " next = elect();",
                  " ```",
                  "",
                  " Now, with data:",
                  " ```nocompile",
                  " cache1 == previous;",
                  " cache2 == current;",
                  " cache3 == next;",
                  " ```",
                  " Just need to shift the marker and write the storage map once:",
                  " ```nocompile",
                  " mark(cache3, current);",
                  " mark(cache2, previous);",
                  " mark(cache1, next);",
                  " cache1 = elect();",
                  " ```"
                ]
              },
              {
                "name": "ExposureCache0",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 337
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Exposure cache 0."
                ]
              },
              {
                "name": "ExposureCache1",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 337
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Exposure cache 1."
                ]
              },
              {
                "name": "ExposureCache2",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 337
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Exposure cache 2."
                ]
              },
              {
                "name": "CollatorCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The ideal number of active collators."
                ]
              },
              {
                "name": "Nominators",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map from nominator to their nomination preferences, namely the collator that",
                  " they wish to support."
                ]
              },
              {
                "name": "AuthoredBlocksCount",
                "modifier": "Default",
                "type": {
                  "plain": 340
                },
                "fallback": "0x0000000000",
                "docs": [
                  " Number of blocks authored by the collator within current session."
                ]
              },
              {
                "name": "PendingRewards",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All outstanding rewards since the last payment."
                ]
              },
              {
                "name": "SessionStartTime",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Active session's start-time."
                ]
              },
              {
                "name": "ElapsedTime",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Elapsed time."
                ]
              }
            ]
          },
          "calls": {
            "type": 344
          },
          "events": {
            "type": 48
          },
          "constants": [
            {
              "name": "MinStakingDuration",
              "type": 4,
              "value": "0xc0890100",
              "docs": [
                " Minimum time to stake at least."
              ]
            },
            {
              "name": "MaxDeposits",
              "type": 4,
              "value": "0x00020000",
              "docs": [
                " Maximum deposit count."
              ]
            },
            {
              "name": "MaxUnstakings",
              "type": 4,
              "value": "0x10000000",
              "docs": [
                " Maximum unstaking/unbonding count."
              ]
            }
          ],
          "errors": {
            "type": 345
          },
          "index": 12
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "items": [
              {
                "name": "Validators",
                "modifier": "Default",
                "type": {
                  "plain": 44
                },
                "fallback": "0x00",
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "type": {
                  "plain": 346
                },
                "fallback": "0x00",
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "type": {
                  "plain": 351
                },
                "fallback": "0x00",
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 348
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 352,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "type": 354
          },
          "events": {
            "type": 51
          },
          "constants": [

          ],
          "errors": {
            "type": 355
          },
          "index": 13
        },
        {
          "name": "Aura",
          "storage": {
            "prefix": "Aura",
            "items": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 356
                },
                "fallback": "0x00",
                "docs": [
                  " The current authority set."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "type": {
                  "plain": 358
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The current slot of this block.",
                  "",
                  " This will be set in `on_initialize`."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 14
        },
        {
          "name": "AuraExt",
          "storage": {
            "prefix": "AuraExt",
            "items": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 356
                },
                "fallback": "0x00",
                "docs": [
                  " Serves as cache for the authorities.",
                  "",
                  " The authorities in AuRa are overwritten in `on_initialize` when we switch to a new session,",
                  " but we require the old authorities to verify the seal when validating a PoV. This will",
                  " always be updated to the latest AuRa authorities in `on_finalize`."
                ]
              },
              {
                "name": "SlotInfo",
                "modifier": "Optional",
                "type": {
                  "plain": 359
                },
                "fallback": "0x00",
                "docs": [
                  " Current slot paired with a number of authored blocks.",
                  "",
                  " Updated on each block initialization."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 15
        },
        {
          "name": "MessageGadget",
          "storage": {
            "prefix": "MessageGadget",
            "items": [
              {
                "name": "CommitmentContract",
                "modifier": "Default",
                "type": {
                  "plain": 146
                },
                "fallback": "0x0000000000000000000000000000000000000000",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 360
          },
          "events": null,
          "constants": [

          ],
          "errors": null,
          "index": 16
        },
        {
          "name": "EcdsaAuthority",
          "storage": {
            "prefix": "EcdsaAuthority",
            "items": [
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 361
                },
                "fallback": "0x00",
                "docs": [
                  " The current active authorities."
                ]
              },
              {
                "name": "NextAuthorities",
                "modifier": "Default",
                "type": {
                  "plain": 361
                },
                "fallback": "0x00",
                "docs": [
                  " The incoming authorities."
                ]
              },
              {
                "name": "Nonce",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The nonce of the current active authorities. AKA term/session/era."
                ]
              },
              {
                "name": "AuthoritiesChangeToSign",
                "modifier": "Optional",
                "type": {
                  "plain": 362
                },
                "fallback": "0x00",
                "docs": [
                  " The authorities change waiting for signing."
                ]
              },
              {
                "name": "MessageRootToSign",
                "modifier": "Optional",
                "type": {
                  "plain": 364
                },
                "fallback": "0x00",
                "docs": [
                  " The incoming message root waiting for signing."
                ]
              }
            ]
          },
          "calls": {
            "type": 365
          },
          "events": {
            "type": 52
          },
          "constants": [
            {
              "name": "MaxAuthorities",
              "type": 4,
              "value": "0x07000000",
              "docs": [
                " The maximum number of authorities."
              ]
            },
            {
              "name": "ChainId",
              "type": 11,
              "value": "0x2e00000000000000",
              "docs": [
                " Chain's ID, which is using for constructing the message. (follow EIP-712 SPEC)"
              ]
            },
            {
              "name": "SignThreshold",
              "type": 50,
              "value": "0x0046c323",
              "docs": [
                " The signing threshold.",
                "",
                " Once `signatures_count / authorities_count >= threshold`, we say the message is trusted."
              ]
            },
            {
              "name": "SyncInterval",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The interval of checking the message root.",
                " This must be shorter than [`Config::MaxPendingPeriod`]."
              ]
            },
            {
              "name": "MaxPendingPeriod",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " How long should we wait for the message root to be signed.",
                "",
                " If the collecting new message root signatures process takes more than",
                " `MaxPendingPeriod`, we will drop the root. And update the root with a new one."
              ]
            }
          ],
          "errors": {
            "type": 366
          },
          "index": 17
        },
        {
          "name": "Democracy",
          "storage": {
            "prefix": "Democracy",
            "items": [
              {
                "name": "PublicPropCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of (public) proposals that have been made so far."
                ]
              },
              {
                "name": "PublicProps",
                "modifier": "Default",
                "type": {
                  "plain": 367
                },
                "fallback": "0x00",
                "docs": [
                  " The public proposals. Unsorted. The second item is the proposal."
                ]
              },
              {
                "name": "DepositOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 493
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Those who have locked a deposit.",
                  "",
                  " TWOX-NOTE: Safe, as increasing integer keys are safe."
                ]
              },
              {
                "name": "ReferendumCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next free referendum index, aka the number of referenda started so far."
                ]
              },
              {
                "name": "LowestUnbaked",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The lowest referendum index representing an unbaked referendum. Equal to",
                  " `ReferendumCount` if there isn't a unbaked referendum."
                ]
              },
              {
                "name": "ReferendumInfoOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 495
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information concerning any given referendum.",
                  "",
                  " TWOX-NOTE: SAFE as indexes are not under an attacker’s control."
                ]
              },
              {
                "name": "VotingOf",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 498
                  }
                },
                "fallback": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " All votes for a particular voter. We store the balance for the number of votes that we",
                  " have recorded. The second item is the total amount of delegations, that will be added.",
                  "",
                  " TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway."
                ]
              },
              {
                "name": "LastTabledWasExternal",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " True if the last referendum tabled was submitted externally. False if it was a public",
                  " proposal."
                ]
              },
              {
                "name": "NextExternal",
                "modifier": "Optional",
                "type": {
                  "plain": 504
                },
                "fallback": "0x00",
                "docs": [
                  " The referendum to be tabled whenever it would be valid to table an external proposal.",
                  " This happens when a referendum needs to be tabled and one of two conditions are met:",
                  " - `LastTabledWasExternal` is `false`; or",
                  " - `PublicProps` is empty."
                ]
              },
              {
                "name": "Blacklist",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 505
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A record of who vetoed what. Maps proposal hash to a possible existent block number",
                  " (until when it may not be resubmitted) and who vetoed it."
                ]
              },
              {
                "name": "Cancellations",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 37
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Record of all proposals that have been subject to emergency cancellation."
                ]
              },
              {
                "name": "MetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 64,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " General information concerning any proposal or referendum.",
                  " The `PreimageHash` refers to the preimage of the `Preimages` provider which can be a JSON",
                  " dump or IPFS hash of a JSON file.",
                  "",
                  " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                  " large preimages."
                ]
              }
            ]
          },
          "calls": {
            "type": 371
          },
          "events": {
            "type": 60
          },
          "constants": [
            {
              "name": "EnactmentPeriod",
              "type": 4,
              "value": "0x80130300",
              "docs": [
                " The period between a proposal being approved and enacted.",
                "",
                " It should generally be a little more than the unstake period to ensure that",
                " voting stakers have an opportunity to remove themselves from the system in the case",
                " where they are on the losing side of a vote."
              ]
            },
            {
              "name": "LaunchPeriod",
              "type": 4,
              "value": "0x80130300",
              "docs": [
                " How often (in blocks) new public referenda are launched."
              ]
            },
            {
              "name": "VotingPeriod",
              "type": 4,
              "value": "0x80130300",
              "docs": [
                " How often (in blocks) to check for new votes."
              ]
            },
            {
              "name": "VoteLockingPeriod",
              "type": 4,
              "value": "0x80130300",
              "docs": [
                " The minimum period of vote locking.",
                "",
                " It should be no shorter than enactment period to ensure that in the case of an approval,",
                " those successful voters are locked into the consequences that their votes entail."
              ]
            },
            {
              "name": "MinimumDeposit",
              "type": 6,
              "value": "0x00002059dd64f00c0f01000000000000",
              "docs": [
                " The minimum amount to be used as a deposit for a public referendum proposal."
              ]
            },
            {
              "name": "InstantAllowed",
              "type": 37,
              "value": "0x01",
              "docs": [
                " Indicator for whether an emergency origin is even allowed to happen. Some chains may",
                " want to set this permanently to `false`, others may want to condition it on things such",
                " as an upgrade having happened recently."
              ]
            },
            {
              "name": "FastTrackVotingPeriod",
              "type": 4,
              "value": "0x84030000",
              "docs": [
                " Minimum voting period allowed for a fast-track referendum."
              ]
            },
            {
              "name": "CooloffPeriod",
              "type": 4,
              "value": "0xe0c40000",
              "docs": [
                " Period in blocks where an external proposal may not be re-submitted after being vetoed."
              ]
            },
            {
              "name": "MaxVotes",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of votes for an account.",
                "",
                " Also used to compute weight, an overly big value can",
                " lead to extrinsic with very big weight: see `delegate` for instance."
              ]
            },
            {
              "name": "MaxProposals",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of public proposals that can exist at any time."
              ]
            },
            {
              "name": "MaxDeposits",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of deposits a public proposal may have at any time."
              ]
            },
            {
              "name": "MaxBlacklisted",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of items which can be blacklisted."
              ]
            }
          ],
          "errors": {
            "type": 506
          },
          "index": 18
        },
        {
          "name": "Council",
          "storage": {
            "prefix": "Council",
            "items": [
              {
                "name": "Proposals",
                "modifier": "Default",
                "type": {
                  "plain": 507
                },
                "fallback": "0x00",
                "docs": [
                  " The hashes of the active proposals."
                ]
              },
              {
                "name": "ProposalOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 370
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Actual proposal for a given hash, if it's current."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 508
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Proposals so far."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 44
                },
                "fallback": "0x00",
                "docs": [
                  " The current members of the collective. This is stored sorted (just by value)."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The prime member that helps determine the default vote behavior in case of absentations."
                ]
              }
            ]
          },
          "calls": {
            "type": 373
          },
          "events": {
            "type": 65
          },
          "constants": [
            {
              "name": "MaxProposalWeight",
              "type": 9,
              "value": "0x07004429353a0200a000",
              "docs": [
                " The maximum weight of a dispatch call that can be proposed and executed."
              ]
            }
          ],
          "errors": {
            "type": 509
          },
          "index": 19
        },
        {
          "name": "TechnicalCommittee",
          "storage": {
            "prefix": "TechnicalCommittee",
            "items": [
              {
                "name": "Proposals",
                "modifier": "Default",
                "type": {
                  "plain": 507
                },
                "fallback": "0x00",
                "docs": [
                  " The hashes of the active proposals."
                ]
              },
              {
                "name": "ProposalOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 370
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Actual proposal for a given hash, if it's current."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 508
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Proposals so far."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 44
                },
                "fallback": "0x00",
                "docs": [
                  " The current members of the collective. This is stored sorted (just by value)."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The prime member that helps determine the default vote behavior in case of absentations."
                ]
              }
            ]
          },
          "calls": {
            "type": 375
          },
          "events": {
            "type": 68
          },
          "constants": [
            {
              "name": "MaxProposalWeight",
              "type": 9,
              "value": "0x07004429353a0200a000",
              "docs": [
                " The maximum weight of a dispatch call that can be proposed and executed."
              ]
            }
          ],
          "errors": {
            "type": 510
          },
          "index": 20
        },
        {
          "name": "PhragmenElection",
          "storage": {
            "prefix": "PhragmenElection",
            "items": [
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 511
                },
                "fallback": "0x00",
                "docs": [
                  " The current elected members.",
                  "",
                  " Invariant: Always sorted based on account id."
                ]
              },
              {
                "name": "RunnersUp",
                "modifier": "Default",
                "type": {
                  "plain": 511
                },
                "fallback": "0x00",
                "docs": [
                  " The current reserved runners-up.",
                  "",
                  " Invariant: Always sorted based on rank (worse to best). Upon removal of a member, the",
                  " last (i.e. _best_) runner-up will be replaced."
                ]
              },
              {
                "name": "Candidates",
                "modifier": "Default",
                "type": {
                  "plain": 70
                },
                "fallback": "0x00",
                "docs": [
                  " The present candidate list. A current member or runner-up can never enter this vector",
                  " and is always implicitly assumed to be a candidate.",
                  "",
                  " Second element is the deposit.",
                  "",
                  " Invariant: Always sorted based on account id."
                ]
              },
              {
                "name": "ElectionRounds",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The total number of vote rounds that have happened, excluding the upcoming one."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 513
                  }
                },
                "fallback": "0x000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Votes and locked stake of a particular voter.",
                  "",
                  " TWOX-NOTE: SAFE as `AccountId` is a crypto hash."
                ]
              }
            ]
          },
          "calls": {
            "type": 376
          },
          "events": {
            "type": 69
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 104,
              "value": "0x706872656c656374",
              "docs": [
                " Identifier for the elections-phragmen pallet's lock"
              ]
            },
            {
              "name": "CandidacyBond",
              "type": 6,
              "value": "0x00008a5d784563010000000000000000",
              "docs": [
                " How much should be locked up in order to submit one's candidacy."
              ]
            },
            {
              "name": "VotingBondBase",
              "type": 6,
              "value": "0x0000a081f11ade6b0500000000000000",
              "docs": [
                " Base deposit associated with voting.",
                "",
                " This should be sensibly high to economically ensure the pallet cannot be attacked by",
                " creating a gigantic number of votes."
              ]
            },
            {
              "name": "VotingBondFactor",
              "type": 6,
              "value": "0x0000480f625e0b000000000000000000",
              "docs": [
                " The amount of bond that need to be locked for each vote (32 bytes)."
              ]
            },
            {
              "name": "DesiredMembers",
              "type": 4,
              "value": "0x07000000",
              "docs": [
                " Number of members to elect."
              ]
            },
            {
              "name": "DesiredRunnersUp",
              "type": 4,
              "value": "0x07000000",
              "docs": [
                " Number of runners_up to keep."
              ]
            },
            {
              "name": "TermDuration",
              "type": 4,
              "value": "0xe0c40000",
              "docs": [
                " How long each seat is kept. This defines the next block number at which an election",
                " round will happen. If set to zero, no elections are ever triggered and the module will",
                " be in passive mode."
              ]
            },
            {
              "name": "MaxCandidates",
              "type": 4,
              "value": "0x1e000000",
              "docs": [
                " The maximum number of candidates in a phragmen election.",
                "",
                " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
                " consider how it will impact `T::WeightInfo::election_phragmen`.",
                "",
                " When this limit is reached no more candidates are accepted in the election."
              ]
            },
            {
              "name": "MaxVoters",
              "type": 4,
              "value": "0x2c010000",
              "docs": [
                " The maximum number of voters to allow in a phragmen election.",
                "",
                " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
                " consider how it will impact `T::WeightInfo::election_phragmen`.",
                "",
                " When the limit is reached the new voters are ignored."
              ]
            },
            {
              "name": "MaxVotesPerVoter",
              "type": 4,
              "value": "0x10000000",
              "docs": [
                " Maximum numbers of votes per voter.",
                "",
                " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
                " consider how it will impact `T::WeightInfo::election_phragmen`."
              ]
            }
          ],
          "errors": {
            "type": 514
          },
          "index": 21
        },
        {
          "name": "TechnicalMembership",
          "storage": {
            "prefix": "TechnicalMembership",
            "items": [
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 494
                },
                "fallback": "0x00",
                "docs": [
                  " The current membership, stored as an ordered Vec."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The current prime member, if one exists."
                ]
              }
            ]
          },
          "calls": {
            "type": 378
          },
          "events": {
            "type": 72
          },
          "constants": [

          ],
          "errors": {
            "type": 515
          },
          "index": 22
        },
        {
          "name": "Treasury",
          "storage": {
            "prefix": "Treasury",
            "items": [
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of proposals that have been made."
                ]
              },
              {
                "name": "Proposals",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 516
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Proposals that have been made."
                ]
              },
              {
                "name": "Deactivated",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The amount which has been reported as inactive to Currency."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Default",
                "type": {
                  "plain": 517
                },
                "fallback": "0x00",
                "docs": [
                  " Proposal indices that have been approved but not yet awarded."
                ]
              }
            ]
          },
          "calls": {
            "type": 379
          },
          "events": {
            "type": 73
          },
          "constants": [
            {
              "name": "ProposalBond",
              "type": 518,
              "value": "0x50c30000",
              "docs": [
                " Fraction of a proposal's value that should be bonded in order to place the proposal.",
                " An accepted proposal gets these back. A rejected proposal does not."
              ]
            },
            {
              "name": "ProposalBondMinimum",
              "type": 6,
              "value": "0x00002059dd64f00c0f01000000000000",
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "ProposalBondMaximum",
              "type": 180,
              "value": "0x00",
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "SpendPeriod",
              "type": 4,
              "value": "0x00a30200",
              "docs": [
                " Period between successive spends."
              ]
            },
            {
              "name": "Burn",
              "type": 518,
              "value": "0x00000000",
              "docs": [
                " Percentage of spare funds (if any) that are burnt per spend period."
              ]
            },
            {
              "name": "PalletId",
              "type": 519,
              "value": "0x64612f7472737279",
              "docs": [
                " The treasury's pallet id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "MaxApprovals",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of approvals that can wait in the spending queue.",
                "",
                " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
              ]
            }
          ],
          "errors": {
            "type": 520
          },
          "index": 23
        },
        {
          "name": "Utility",
          "storage": null,
          "calls": {
            "type": 380
          },
          "events": {
            "type": 74
          },
          "constants": [
            {
              "name": "batched_calls_limit",
              "type": 4,
              "value": "0xaa2a0000",
              "docs": [
                " The limit on the number of batched calls."
              ]
            }
          ],
          "errors": {
            "type": 521
          },
          "index": 26
        },
        {
          "name": "Identity",
          "storage": {
            "prefix": "Identity",
            "items": [
              {
                "name": "IdentityOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 522
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information that is pertinent to identify the entity behind an account.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "SuperOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 394
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The super-identity of an alternative \"sub\" identity together with its name, within that",
                  " context. If the account is not some other account's sub-identity, then just `None`."
                ]
              },
              {
                "name": "SubsOf",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 524
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " Alternative \"sub\" identities of this account.",
                  "",
                  " The first item is the deposit, the second is a vector of the accounts.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "Registrars",
                "modifier": "Default",
                "type": {
                  "plain": 525
                },
                "fallback": "0x00",
                "docs": [
                  " The set of registrars. Not expected to get very big as can only be added through a",
                  " special origin (likely a council motion).",
                  "",
                  " The index into this can be cast to `RegistrarIndex` to get a valid value."
                ]
              }
            ]
          },
          "calls": {
            "type": 392
          },
          "events": {
            "type": 75
          },
          "constants": [
            {
              "name": "BasicDeposit",
              "type": 6,
              "value": "0x008044fe2307236c0500000000000000",
              "docs": [
                " The amount held on deposit for a registered identity"
              ]
            },
            {
              "name": "FieldDeposit",
              "type": 6,
              "value": "0x0080843faa7217000000000000000000",
              "docs": [
                " The amount held on deposit per additional field for a registered identity."
              ]
            },
            {
              "name": "SubAccountDeposit",
              "type": 6,
              "value": "0x00405fcc7f32da6b0500000000000000",
              "docs": [
                " The amount held on deposit for a registered subaccount. This should account for the fact",
                " that one storage item's value will increase by the size of an account ID, and there will",
                " be another trie item whose value is the size of an account ID plus 32 bytes."
              ]
            },
            {
              "name": "MaxSubAccounts",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of sub-accounts allowed per identified account."
              ]
            },
            {
              "name": "MaxAdditionalFields",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " Maximum number of additional fields that may be stored in an ID. Needed to bound the I/O",
                " required to access an identity, but can be pretty high."
              ]
            },
            {
              "name": "MaxRegistrars",
              "type": 4,
              "value": "0x14000000",
              "docs": [
                " Maxmimum number of registrars allowed in the system. Needed to bound the complexity",
                " of, e.g., updating judgements."
              ]
            }
          ],
          "errors": {
            "type": 529
          },
          "index": 27
        },
        {
          "name": "Scheduler",
          "storage": {
            "prefix": "Scheduler",
            "items": [
              {
                "name": "IncompleteSince",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "Agenda",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 530
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Items to be executed, indexed by the block number that they should be executed on."
                ]
              },
              {
                "name": "Lookup",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 13,
                    "value": 77
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Lookup from a name to the block number and index of the task.",
                  "",
                  " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                  " identities."
                ]
              }
            ]
          },
          "calls": {
            "type": 397
          },
          "events": {
            "type": 76
          },
          "constants": [
            {
              "name": "MaximumWeight",
              "type": 9,
              "value": "0x0700a0db215d02000001",
              "docs": [
                " The maximum weight that may be scheduled per block for any dispatchables."
              ]
            },
            {
              "name": "MaxScheduledPerBlock",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of scheduled calls in the queue for a single block.",
                "",
                " NOTE:",
                " + Dependent pallets' benchmarks might require a higher limit for the setting. Set a",
                " higher limit under `runtime-benchmarks` feature."
              ]
            }
          ],
          "errors": {
            "type": 534
          },
          "index": 28
        },
        {
          "name": "Preimage",
          "storage": {
            "prefix": "Preimage",
            "items": [
              {
                "name": "StatusFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 535
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The request status of a given hash."
                ]
              },
              {
                "name": "PreimageFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 536,
                    "value": 537
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 399
          },
          "events": {
            "type": 78
          },
          "constants": [

          ],
          "errors": {
            "type": 538
          },
          "index": 29
        },
        {
          "name": "Proxy",
          "storage": {
            "prefix": "Proxy",
            "items": [
              {
                "name": "Proxies",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 539
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The set of account proxies. Maps the account which has delegated to the accounts",
                  " which are being delegated to, together with the amount held on deposit."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 543
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The announcements made by the proxy (key)."
                ]
              }
            ]
          },
          "calls": {
            "type": 400
          },
          "events": {
            "type": 79
          },
          "constants": [
            {
              "name": "ProxyDepositBase",
              "type": 6,
              "value": "0x0000e2e6c535ca6b0500000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a proxy.",
                "",
                " This is held for an additional storage item whose value size is",
                " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "ProxyDepositFactor",
              "type": 6,
              "value": "0x0040c21f55b90b000000000000000000",
              "docs": [
                " The amount of currency needed per proxy added.",
                "",
                " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                " into account `32 + proxy_type.encode().len()` bytes of data."
              ]
            },
            {
              "name": "MaxProxies",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of proxies allowed for a single account."
              ]
            },
            {
              "name": "MaxPending",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of time-delayed announcements that are allowed to be pending."
              ]
            },
            {
              "name": "AnnouncementDepositBase",
              "type": 6,
              "value": "0x0000e2e6c535ca6b0500000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating an announcement.",
                "",
                " This is held when a new storage item holding a `Balance` is created (typically 16",
                " bytes)."
              ]
            },
            {
              "name": "AnnouncementDepositFactor",
              "type": 6,
              "value": "0x0080843faa7217000000000000000000",
              "docs": [
                " The amount of currency needed per announcement made.",
                "",
                " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                " into a pre-existing storage value."
              ]
            }
          ],
          "errors": {
            "type": 547
          },
          "index": 30
        },
        {
          "name": "XcmpQueue",
          "storage": {
            "prefix": "XcmpQueue",
            "items": [
              {
                "name": "InboundXcmpStatus",
                "modifier": "Default",
                "type": {
                  "plain": 548
                },
                "fallback": "0x00",
                "docs": [
                  " Status of the inbound XCMP channels."
                ]
              },
              {
                "name": "InboundXcmpMessages",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Twox64Concat"
                    ],
                    "key": 554,
                    "value": 14
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Inbound aggregate XCMP messages. It can only be one per ParaId/block."
                ]
              },
              {
                "name": "OutboundXcmpStatus",
                "modifier": "Default",
                "type": {
                  "plain": 555
                },
                "fallback": "0x00",
                "docs": [
                  " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                  " and last outbound message. If the two indices are equal, then it indicates an empty",
                  " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                  " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                  " case of the need to send a high-priority signal message this block.",
                  " The bool is true if there is a signal message waiting to be sent."
                ]
              },
              {
                "name": "OutboundXcmpMessages",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Twox64Concat"
                    ],
                    "key": 558,
                    "value": 14
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The messages outbound in a given XCMP channel."
                ]
              },
              {
                "name": "SignalMessages",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 83,
                    "value": 14
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Any signal messages waiting to be sent."
                ]
              },
              {
                "name": "QueueConfig",
                "modifier": "Default",
                "type": {
                  "plain": 559
                },
                "fallback": "0x020000000500000001000000821a06000008000700c817a80402000400",
                "docs": [
                  " The configuration which controls the dynamics of the outbound queue."
                ]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 560
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The messages that exceeded max individual message weight budget.",
                  "",
                  " These message stay in this storage map until they are manually dispatched via",
                  " `service_overweight`."
                ]
              },
              {
                "name": "CounterForOverweight",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "OverweightCount",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The number of overweight messages ever recorded in `Overweight`. Also doubles as the next",
                  " available free overweight index."
                ]
              },
              {
                "name": "QueueSuspended",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
                ]
              }
            ]
          },
          "calls": {
            "type": 402
          },
          "events": {
            "type": 81
          },
          "constants": [

          ],
          "errors": {
            "type": 561
          },
          "index": 32
        },
        {
          "name": "PolkadotXcm",
          "storage": {
            "prefix": "PolkadotXcm",
            "items": [
              {
                "name": "QueryCounter",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The latest available query index."
                ]
              },
              {
                "name": "Queries",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 11,
                    "value": 562
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The ongoing queries."
                ]
              },
              {
                "name": "AssetTraps",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The existing asset traps.",
                  "",
                  " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                  " times this pair has been trapped (usually just 1 if it exists at all)."
                ]
              },
              {
                "name": "SafeXcmVersion",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                  " then the destinations whose XCM version is unknown are considered unreachable."
                ]
              },
              {
                "name": "SupportedVersion",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat"
                    ],
                    "key": 567,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The Latest versions that we know various locations support."
                ]
              },
              {
                "name": "VersionNotifiers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat"
                    ],
                    "key": 567,
                    "value": 11
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All locations that we have requested version notifications from."
                ]
              },
              {
                "name": "VersionNotifyTargets",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat"
                    ],
                    "key": 567,
                    "value": 568
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The target locations that are subscribed to our version changes, as well as the most recent",
                  " of our versions we informed them of."
                ]
              },
              {
                "name": "VersionDiscoveryQueue",
                "modifier": "Default",
                "type": {
                  "plain": 569
                },
                "fallback": "0x00",
                "docs": [
                  " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                  " the `u32` counter is the number of times that a send to the destination has been attempted,",
                  " which is used as a prioritization."
                ]
              },
              {
                "name": "CurrentMigration",
                "modifier": "Optional",
                "type": {
                  "plain": 572
                },
                "fallback": "0x00",
                "docs": [
                  " The current migration's stage, if any."
                ]
              },
              {
                "name": "RemoteLockedFungibles",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2128Concat",
                      "Blake2128Concat"
                    ],
                    "key": 574,
                    "value": 576
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Fungible assets which we know are locked on a remote chain."
                ]
              },
              {
                "name": "LockedFungibles",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 580
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Fungible assets which we know are locked on this chain."
                ]
              },
              {
                "name": "XcmExecutionSuspended",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " Global suspension state of the XCM executor."
                ]
              }
            ]
          },
          "calls": {
            "type": 403
          },
          "events": {
            "type": 84
          },
          "constants": [

          ],
          "errors": {
            "type": 583
          },
          "index": 33
        },
        {
          "name": "CumulusXcm",
          "storage": null,
          "calls": {
            "type": 424
          },
          "events": {
            "type": 138
          },
          "constants": [

          ],
          "errors": {
            "type": 584
          },
          "index": 34
        },
        {
          "name": "EthereumXcm",
          "storage": {
            "prefix": "EthereumXcm",
            "items": [
              {
                "name": "Nonce",
                "modifier": "Default",
                "type": {
                  "plain": 428
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Global nonce used for building Ethereum transaction payload."
                ]
              },
              {
                "name": "EthereumXcmSuspended",
                "modifier": "Default",
                "type": {
                  "plain": 37
                },
                "fallback": "0x00",
                "docs": [
                  " Whether or not Ethereum-XCM is suspended from executing"
                ]
              }
            ]
          },
          "calls": {
            "type": 425
          },
          "events": null,
          "constants": [

          ],
          "errors": {
            "type": 585
          },
          "index": 44
        },
        {
          "name": "DmpQueue",
          "storage": {
            "prefix": "DmpQueue",
            "items": [
              {
                "name": "Configuration",
                "modifier": "Default",
                "type": {
                  "plain": 586
                },
                "fallback": "0x0700e40b540202000400",
                "docs": [
                  " The configuration."
                ]
              },
              {
                "name": "PageIndex",
                "modifier": "Default",
                "type": {
                  "plain": 587
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The page index."
                ]
              },
              {
                "name": "Pages",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 4,
                    "value": 588
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The queue pages."
                ]
              },
              {
                "name": "Overweight",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 11,
                    "value": 589
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The overweight messages."
                ]
              },
              {
                "name": "CounterForOverweight",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              }
            ]
          },
          "calls": {
            "type": 439
          },
          "events": {
            "type": 139
          },
          "constants": [

          ],
          "errors": {
            "type": 590
          },
          "index": 35
        },
        {
          "name": "AssetManager",
          "storage": {
            "prefix": "AssetManager",
            "items": [
              {
                "name": "AssetIdType",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 11,
                    "value": 141
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Mapping from an asset id to asset type.",
                  " This is mostly used when receiving transaction specifying an asset directly,",
                  " like transferring an asset from this chain to another."
                ]
              },
              {
                "name": "AssetTypeId",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 141,
                    "value": 11
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Reverse mapping of AssetIdType. Mapping from an asset type to an asset id.",
                  " This is mostly used when receiving a multilocation XCM message to retrieve",
                  " the corresponding asset in which tokens should me minted."
                ]
              },
              {
                "name": "AssetTypeUnitsPerSecond",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 141,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the units per second for local execution for a AssetType.",
                  " This is used to know how to charge for XCM execution in a particular",
                  " asset",
                  " Not all assets might contain units per second, hence the different storage"
                ]
              },
              {
                "name": "LocalAssetCounter",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Stores the counter of the number of local assets that have been",
                  " created so far",
                  " This value can be used to salt the creation of an assetId, e.g.,",
                  " by hashing it. This is particularly useful for cases like moonbeam",
                  " where letting users choose their assetId would result in collision",
                  " in the evm side."
                ]
              },
              {
                "name": "LocalAssetDeposit",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 11,
                    "value": 591
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Local asset deposits, a mapping from assetId to a struct",
                  " holding the creator (from which the deposit was reserved) and",
                  " the deposit amount"
                ]
              },
              {
                "name": "SupportedFeePaymentAssets",
                "modifier": "Default",
                "type": {
                  "plain": 592
                },
                "fallback": "0x00",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 440
          },
          "events": {
            "type": 140
          },
          "constants": [
            {
              "name": "LocalAssetDeposit",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for a local asset."
              ]
            }
          ],
          "errors": {
            "type": 593
          },
          "index": 45
        },
        {
          "name": "XTokens",
          "storage": null,
          "calls": {
            "type": 441
          },
          "events": {
            "type": 143
          },
          "constants": [
            {
              "name": "SelfLocation",
              "type": 86,
              "value": "0x0000",
              "docs": [
                " Self chain location."
              ]
            },
            {
              "name": "BaseXcmWeight",
              "type": 9,
              "value": "0x02286bee0110",
              "docs": [
                " Base XCM weight.",
                "",
                " The actually weight for an XCM message is `T::BaseXcmWeight +",
                " T::Weigher::weight(&msg)`."
              ]
            }
          ],
          "errors": {
            "type": 594
          },
          "index": 46
        },
        {
          "name": "AssetLimit",
          "storage": {
            "prefix": "AssetLimit",
            "items": [
              {
                "name": "ForeignAssetLimit",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox128"
                    ],
                    "key": 141,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the asset limit for foreign assets."
                ]
              }
            ]
          },
          "calls": {
            "type": 446
          },
          "events": {
            "type": 144
          },
          "constants": [

          ],
          "errors": {
            "type": 595
          },
          "index": 47
        },
        {
          "name": "Ethereum",
          "storage": {
            "prefix": "Ethereum",
            "items": [
              {
                "name": "Pending",
                "modifier": "Default",
                "type": {
                  "plain": 596
                },
                "fallback": "0x00",
                "docs": [
                  " Current building block's transactions and receipts."
                ]
              },
              {
                "name": "CurrentBlock",
                "modifier": "Optional",
                "type": {
                  "plain": 605
                },
                "fallback": "0x00",
                "docs": [
                  " The current Ethereum block."
                ]
              },
              {
                "name": "CurrentReceipts",
                "modifier": "Optional",
                "type": {
                  "plain": 610
                },
                "fallback": "0x00",
                "docs": [
                  " The current Ethereum receipts."
                ]
              },
              {
                "name": "CurrentTransactionStatuses",
                "modifier": "Optional",
                "type": {
                  "plain": 611
                },
                "fallback": "0x00",
                "docs": [
                  " The current transaction statuses."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 428,
                    "value": 12
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 447
          },
          "events": {
            "type": 145
          },
          "constants": [

          ],
          "errors": {
            "type": 612
          },
          "index": 36
        },
        {
          "name": "EVM",
          "storage": {
            "prefix": "EVM",
            "items": [
              {
                "name": "AccountCodes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 146,
                    "value": 14
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "AccountCodesMetadata",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 146,
                    "value": 613
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "AccountStorages",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Blake2128Concat"
                    ],
                    "key": 614,
                    "value": 12
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [

                ]
              },
              {
                "name": "Suicided",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 146,
                    "value": 67
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 456
          },
          "events": {
            "type": 155
          },
          "constants": [

          ],
          "errors": {
            "type": 615
          },
          "index": 37
        },
        {
          "name": "MessageTransact",
          "storage": null,
          "calls": {
            "type": 457
          },
          "events": null,
          "constants": [

          ],
          "errors": {
            "type": 616
          },
          "index": 38
        },
        {
          "name": "BridgeKusamaGrandpa",
          "storage": {
            "prefix": "BridgeKusamaGrandpa",
            "items": [
              {
                "name": "RequestCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current number of requests which have written to storage.",
                  "",
                  " If the `RequestCount` hits `MaxRequests`, no more calls will be allowed to the pallet until",
                  " the request capacity is increased.",
                  "",
                  " The `RequestCount` is decreased by one at the beginning of every block. This is to ensure",
                  " that the pallet can always make progress."
                ]
              },
              {
                "name": "InitialHash",
                "modifier": "Default",
                "type": {
                  "plain": 12
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Hash of the header used to bootstrap the pallet."
                ]
              },
              {
                "name": "BestFinalized",
                "modifier": "Optional",
                "type": {
                  "plain": 475
                },
                "fallback": "0x00",
                "docs": [
                  " Hash of the best finalized header."
                ]
              },
              {
                "name": "ImportedHashes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A ring buffer of imported hashes. Ordered by the insertion time."
                ]
              },
              {
                "name": "ImportedHashesPointer",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Current ring buffer position."
                ]
              },
              {
                "name": "ImportedHeaders",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 618
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Headers which have been imported into the pallet."
                ]
              },
              {
                "name": "CurrentAuthoritySet",
                "modifier": "Default",
                "type": {
                  "plain": 619
                },
                "fallback": "0x000000000000000000",
                "docs": [
                  " The current GRANDPA Authority set."
                ]
              },
              {
                "name": "PalletOwner",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Optional pallet owner.",
                  "",
                  " Pallet owner has a right to halt all pallet operations and then resume it. If it is",
                  " `None`, then there are no direct ways to halt/resume pallet operations, but other",
                  " runtime methods may still be used to do that (i.e. democracy::referendum to update halt",
                  " flag directly or call the `halt_operations`)."
                ]
              },
              {
                "name": "PalletOperatingMode",
                "modifier": "Default",
                "type": {
                  "plain": 473
                },
                "fallback": "0x00",
                "docs": [
                  " The current operating mode of the pallet.",
                  "",
                  " Depending on the mode either all, or no transactions will be allowed."
                ]
              }
            ]
          },
          "calls": {
            "type": 458
          },
          "events": null,
          "constants": [
            {
              "name": "MaxRequests",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The upper bound on the number of requests allowed by the pallet.",
                "",
                " A request refers to an action which writes a header to storage.",
                "",
                " Once this bound is reached the pallet will not allow any dispatchables to be called",
                " until the request count has decreased."
              ]
            },
            {
              "name": "HeadersToKeep",
              "type": 4,
              "value": "0xf4010000",
              "docs": [
                " Maximal number of finalized headers to keep in the storage.",
                "",
                " The setting is there to prevent growing the on-chain state indefinitely. Note",
                " the setting does not relate to block numbers - we will simply keep as much items",
                " in the storage, so it doesn't guarantee any fixed timeframe for finality headers.",
                "",
                " Incautious change of this constant may lead to orphan entries in the runtime storage."
              ]
            },
            {
              "name": "MaxBridgedAuthorities",
              "type": 4,
              "value": "0x00100000",
              "docs": [
                " Max number of authorities at the bridged chain."
              ]
            },
            {
              "name": "MaxBridgedHeaderSize",
              "type": 4,
              "value": "0x00000200",
              "docs": [
                " Maximal size (in bytes) of the SCALE-encoded bridged chain header.",
                "",
                " This constant must be selected with care. The pallet requires mandatory headers to be",
                " submitted to be able to proceed. Mandatory headers contain public keys of all GRANDPA",
                " authorities. E.g. for 1024 authorities, the size of encoded keys will be at least 32 KB.",
                " The same header may also contain other digest items as well, so some reserve here",
                " is required."
              ]
            }
          ],
          "errors": {
            "type": 621
          },
          "index": 39
        },
        {
          "name": "BridgeKusamaParachain",
          "storage": {
            "prefix": "BridgeKusamaParachain",
            "items": [
              {
                "name": "PalletOwner",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Optional pallet owner.",
                  "",
                  " Pallet owner has a right to halt all pallet operations and then resume them. If it is",
                  " `None`, then there are no direct ways to halt/resume pallet operations, but other",
                  " runtime methods may still be used to do that (i.e. democracy::referendum to update halt",
                  " flag directly or call the `halt_operations`)."
                ]
              },
              {
                "name": "PalletOperatingMode",
                "modifier": "Default",
                "type": {
                  "plain": 473
                },
                "fallback": "0x00",
                "docs": [
                  " The current operating mode of the pallet.",
                  "",
                  " Depending on the mode either all, or no transactions will be allowed."
                ]
              },
              {
                "name": "ParasInfo",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 159,
                    "value": 623
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Parachains info.",
                  "",
                  " Contains the following info:",
                  " - best parachain head hash",
                  " - the head of the `ImportedParaHashes` ring buffer"
                ]
              },
              {
                "name": "ImportedParaHeads",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Blake2128Concat"
                    ],
                    "key": 477,
                    "value": 625
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Parachain heads which have been imported into the pallet."
                ]
              },
              {
                "name": "ImportedParaHashes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat",
                      "Twox64Concat"
                    ],
                    "key": 626,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A ring buffer of imported parachain head hashes. Ordered by the insertion time."
                ]
              }
            ]
          },
          "calls": {
            "type": 474
          },
          "events": {
            "type": 158
          },
          "constants": [
            {
              "name": "ParasPalletName",
              "type": 152,
              "value": "0x145061726173",
              "docs": [
                " Name of the original `paras` pallet in the `construct_runtime!()` call at the bridged",
                " chain.",
                "",
                " Please keep in mind that this should be the name of the `runtime_parachains::paras`",
                " pallet from polkadot repository, not the `pallet-bridge-parachains`."
              ]
            },
            {
              "name": "HeadsToKeep",
              "type": 4,
              "value": "0xf4010000",
              "docs": [
                " Maximal number of single parachain heads to keep in the storage.",
                "",
                " The setting is there to prevent growing the on-chain state indefinitely. Note",
                " the setting does not relate to parachain block numbers - we will simply keep as much",
                " items in the storage, so it doesn't guarantee any fixed timeframe for heads.",
                "",
                " Incautious change of this constant may lead to orphan entries in the runtime storage."
              ]
            },
            {
              "name": "MaxParaHeadSize",
              "type": 4,
              "value": "0x00040000",
              "docs": [
                " Maximal size (in bytes) of the SCALE-encoded parachain head.",
                "",
                " Keep in mind that the size of any tracked parachain header must not exceed this value.",
                " So if you're going to track multiple parachains, one of which is storing large digests",
                " in its headers, you shall choose this maximal value.",
                "",
                " There's no mandatory headers in this pallet, so it can't stall if there's some header",
                " that exceeds this bound."
              ]
            }
          ],
          "errors": {
            "type": 627
          },
          "index": 40
        },
        {
          "name": "BridgeCrabMessages",
          "storage": {
            "prefix": "BridgeCrabMessages",
            "items": [
              {
                "name": "PalletOwner",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Optional pallet owner.",
                  "",
                  " Pallet owner has a right to halt all pallet operations and then resume it. If it is",
                  " `None`, then there are no direct ways to halt/resume pallet operations, but other",
                  " runtime methods may still be used to do that (i.e. democracy::referendum to update halt",
                  " flag directly or call the `halt_operations`)."
                ]
              },
              {
                "name": "PalletOperatingMode",
                "modifier": "Default",
                "type": {
                  "plain": 480
                },
                "fallback": "0x0000",
                "docs": [
                  " The current operating mode of the pallet.",
                  "",
                  " Depending on the mode either all, some, or no transactions will be allowed."
                ]
              },
              {
                "name": "InboundLanes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 18,
                    "value": 628
                  }
                },
                "fallback": "0x000000000000000000",
                "docs": [
                  " Map of lane id => inbound lane data."
                ]
              },
              {
                "name": "OutboundLanes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 18,
                    "value": 631
                  }
                },
                "fallback": "0x010000000000000000000000000000000000000000000000",
                "docs": [
                  " Map of lane id => outbound lane data."
                ]
              },
              {
                "name": "OutboundMessages",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 632,
                    "value": 633
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All queued outbound messages."
                ]
              }
            ]
          },
          "calls": {
            "type": 479
          },
          "events": {
            "type": 160
          },
          "constants": [
            {
              "name": "BridgedChainId",
              "type": 18,
              "value": "0x63726162",
              "docs": [
                " Gets the chain id value from the instance."
              ]
            },
            {
              "name": "MaximalOutboundPayloadSize",
              "type": 4,
              "value": "0x00002800",
              "docs": [
                " Maximal size of the outbound payload."
              ]
            }
          ],
          "errors": {
            "type": 634
          },
          "index": 41
        },
        {
          "name": "BridgeCrabDispatch",
          "storage": null,
          "calls": {
            "type": 489
          },
          "events": {
            "type": 171
          },
          "constants": [

          ],
          "errors": null,
          "index": 42
        },
        {
          "name": "CrabFeeMarket",
          "storage": {
            "prefix": "CrabFeeMarket",
            "items": [
              {
                "name": "RelayersMap",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 0,
                    "value": 636
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "Relayers",
                "modifier": "Optional",
                "type": {
                  "plain": 44
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "AssignedRelayers",
                "modifier": "Optional",
                "type": {
                  "plain": 637
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "Orders",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2128Concat"
                    ],
                    "key": 172,
                    "value": 638
                  }
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "CollateralSlashProtect",
                "modifier": "Optional",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00",
                "docs": [

                ]
              },
              {
                "name": "AssignedRelayersNumber",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x03000000",
                "docs": [

                ]
              }
            ]
          },
          "calls": {
            "type": 490
          },
          "events": {
            "type": 176
          },
          "constants": [
            {
              "name": "TreasuryPalletId",
              "type": 519,
              "value": "0x64612f7472737279",
              "docs": [
                " Some reward goes to Treasury."
              ]
            },
            {
              "name": "LockId",
              "type": 104,
              "value": "0x64612f6665656372",
              "docs": [

              ]
            },
            {
              "name": "MinimumRelayFee",
              "type": 6,
              "value": "0x0000dcce86b42ad00000000000000000",
              "docs": [
                " The minimum fee for relaying."
              ]
            },
            {
              "name": "CollateralPerOrder",
              "type": 6,
              "value": "0x000088b116afe3b50200000000000000",
              "docs": [
                " The collateral relayer need to lock for each order.",
                "",
                " This also represents the maximum slash value for a single delayed order.",
                " Please note that if this value is set to zero the fee market will be suspended."
              ]
            },
            {
              "name": "Slot",
              "type": 4,
              "value": "0x58020000",
              "docs": [
                " The slot times set"
              ]
            },
            {
              "name": "DutyRelayersRewardRatio",
              "type": 518,
              "value": "0xc0270900",
              "docs": [
                " Reward parameters"
              ]
            },
            {
              "name": "MessageRelayersRewardRatio",
              "type": 518,
              "value": "0x00350c00",
              "docs": [

              ]
            },
            {
              "name": "ConfirmRelayersRewardRatio",
              "type": 518,
              "value": "0x400d0300",
              "docs": [

              ]
            },
            {
              "name": "AssignedRelayerSlashRatio",
              "type": 518,
              "value": "0x400d0300",
              "docs": [
                " The slash ratio for assigned relayers."
              ]
            }
          ],
          "errors": {
            "type": 642
          },
          "index": 43
        }
      ],
      "extrinsic": {
        "type": 643,
        "version": 4,
        "signedExtensions": [
          {
            "identifier": "CheckNonZeroSender",
            "type": 645,
            "additionalSigned": 67
          },
          {
            "identifier": "CheckSpecVersion",
            "type": 646,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckTxVersion",
            "type": 647,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckGenesis",
            "type": 648,
            "additionalSigned": 12
          },
          {
            "identifier": "CheckMortality",
            "type": 649,
            "additionalSigned": 12
          },
          {
            "identifier": "CheckNonce",
            "type": 651,
            "additionalSigned": 67
          },
          {
            "identifier": "CheckWeight",
            "type": 652,
            "additionalSigned": 67
          },
          {
            "identifier": "ChargeTransactionPayment",
            "type": 653,
            "additionalSigned": 67
          },
          {
            "identifier": "BridgeRejectObsoleteHeadersAndMessages",
            "type": 654,
            "additionalSigned": 67
          }
        ]
      },
      "type": 656
    }
  }
}